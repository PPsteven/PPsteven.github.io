<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/">
    <channel>
        <title>CodePainter Blog</title>
        <link>https://ppsteven.github.io/blog</link>
        <description>CodePainter Blog</description>
        <lastBuildDate>Sun, 05 May 2024 11:29:28 GMT</lastBuildDate>
        <docs>https://validator.w3.org/feed/docs/rss2.html</docs>
        <generator>https://github.com/jpmonette/feed</generator>
        <language>en</language>
        <item>
            <title><![CDATA[leetcode-tool 一个让你更方便刷题的工具]]></title>
            <link>https://ppsteven.github.io/blog/leetcode-tool-intro</link>
            <guid>https://ppsteven.github.io/blog/leetcode-tool-intro</guid>
            <pubDate>Sun, 05 May 2024 11:29:28 GMT</pubDate>
            <description><![CDATA[前言]]></description>
            <content:encoded><![CDATA[<h2 class="anchor anchorWithStickyNavbar_LWe7" id="前言">前言<a href="https://ppsteven.github.io/blog/leetcode-tool-intro#%E5%89%8D%E8%A8%80" class="hash-link" aria-label="Direct link to 前言" title="Direct link to 前言">​</a></h2>
<p>最近准备开始刷题，由于过去了很长时间，自己已经忘记了之前刷题的一些注意事项和做题思路。同时Leetcode只提供最简单的刷题记录，查看自己的解题记录也不是那么方便，需要一个个题目去点击查看。为此，我试着在Github上开始寻找是否存在一个Leetcode的刷题工具，能离线记录自己的刷题，并对做过的题目进行分类记录，可以按类型去查看自己刷题进度的一种工具。</p>
<p>最后，找到了 <a href="https://github.com/zcong1993/leetcode-tool" target="_blank" rel="noopener noreferrer">leetcode-tool</a> 这一个工具，作者还写了一篇 <a href="https://blog.cong.moe/post/2020-11-30-leetcode_tool" target="_blank" rel="noopener noreferrer">leetcode-tool 一个让你更方便刷题的工具</a> 详细说明了用法，可惜的是，该工具已经多年不维护，于是我基于此工具做了一些定制化的开发以满足我的需求，增加的改动如下：</p>
<ol>
<li>使用Python脚本爬取Leetcode中英文题目，离线保存。</li>
<li>使用GPT辅助答题</li>
<li>刷题记录导出至Notion看板</li>
</ol>
<p>项目地址如下：<a href="https://github.com/PPsteven/leetcode-tool" target="_blank" rel="noopener noreferrer">https://github.com/PPsteven/leetcode-tool</a>
编码不易，欢迎点Star多多支持！！</p>
<p>效果如下图所示：</p>
<p><img decoding="async" loading="lazy" src="https://raw.githubusercontent.com/PPsteven/leetcode-tool/master/screenshots/toc.png" alt="img" class="img_ev3q"></p>
<p><img decoding="async" loading="lazy" src="https://raw.githubusercontent.com/PPsteven/leetcode-tool/master/screenshots/notion-leetcode-summary.png" alt="img" class="img_ev3q"></p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="leetcode-刷题的痛点">Leetcode 刷题的痛点<a href="https://ppsteven.github.io/blog/leetcode-tool-intro#leetcode-%E5%88%B7%E9%A2%98%E7%9A%84%E7%97%9B%E7%82%B9" class="hash-link" aria-label="Direct link to Leetcode 刷题的痛点" title="Direct link to Leetcode 刷题的痛点">​</a></h2>
<p>Leetcode 是一个很好的刷题网站，但是对于做好的题目，在Leetcode上存在如下痛点：</p>
<ol>
<li>无法方便的查看自己的解题答案</li>
<li>无法对于一题多解和一题多语言的答案进行整理</li>
<li>缺失对已通过题目的分类统计，如查找已完成的 <code>动态规划</code>，<code>链表</code>的题目，并复习归纳。</li>
</ol>
<p><img decoding="async" loading="lazy" alt="img" src="https://ppsteven.github.io/assets/images/leetcode-problem-review-c3d1b47c2e6189fae6ebcb7a906d5a1b.png" width="1688" height="1246" class="img_ev3q"></p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="leetcode-tool-功能">leetcode-tool 功能<a href="https://ppsteven.github.io/blog/leetcode-tool-intro#leetcode-tool-%E5%8A%9F%E8%83%BD" class="hash-link" aria-label="Direct link to leetcode-tool 功能" title="Direct link to leetcode-tool 功能">​</a></h2>
<p>为了解决上述问题，其实做法就是在本地保存一份已提交的答案，并对其打标签，最后对标签进行汇总统计生成 <code>做题清单</code>。</p>
<p>对此，Leetcode 刷题工具的基础功能如下：</p>
<ol>
<li>爬取Leetcode题目，并保存在本地。</li>
<li>生成Leetcode刷题模板，模板中包含题目的标签，支持人工修改。</li>
<li>依据标签汇总生产 <code>做题清单</code>。
此外，为了方便筛选管理已做的题目，支持导出至Notion看板。</li>
</ol>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="安装">安装<a href="https://ppsteven.github.io/blog/leetcode-tool-intro#%E5%AE%89%E8%A3%85" class="hash-link" aria-label="Direct link to 安装" title="Direct link to 安装">​</a></h2>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain"># homebrew</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">$ brew tap ppsteven/homebrew-tap</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">$ brew install ppsteven/homebrew-tap/leetcode-tool</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">$ leetcode-tool help</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="使用">使用<a href="https://ppsteven.github.io/blog/leetcode-tool-intro#%E4%BD%BF%E7%94%A8" class="hash-link" aria-label="Direct link to 使用" title="Direct link to 使用">​</a></h2>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="0-创建配置文件并下载离线数据包">0. 创建配置文件并下载离线数据包<a href="https://ppsteven.github.io/blog/leetcode-tool-intro#0-%E5%88%9B%E5%BB%BA%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6%E5%B9%B6%E4%B8%8B%E8%BD%BD%E7%A6%BB%E7%BA%BF%E6%95%B0%E6%8D%AE%E5%8C%85" class="hash-link" aria-label="Direct link to 0. 创建配置文件并下载离线数据包" title="Direct link to 0. 创建配置文件并下载离线数据包">​</a></h3>
<p>首先在创建一个做题目录，在目录下创建 <code>.leetcode.json</code> 配置文件，可以参考仓库中的 <a href="https://github.com/PPsteven/leetcode-tool/blob/master/.leetcode.example.json" target="_blank" rel="noopener noreferrer">.leetcode.example.json</a> 文件.</p>
<div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">{</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    "lang": "go/py3/ts/java", // 项目全局语言, 配置后 new 命令 --lang 参数可省略, 目前支持 go ts js py3 java</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    "env": "en/cn",</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    "gpt": {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    "api_key": "sk-xxx",</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        "model": "gpt-3.5-turbo",</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        "prompt": "您是一个算法专家，请基于下面的算法题目，给出该算法的思路和复杂度, 使用 {{ .TextLang }} 回答\nSETP1. 给出算法的归类，如递归，栈\nSETP2. 若是存在暴力解法，给出思路和复杂度\nSETP3. 给出最优解法和复杂度\nSETP4. 代码实现，使用 {{ .Lang }} 语言，代码带注释和测试样例。\n\n{{ .Problem }}"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<ul>
<li>lang: 当前支持语言 go/py3/ts/java</li>
<li>env: 界面语言 cn 中文站/ en 英文站</li>
<li>gpt: 支持gpt对题目提示，在没有思路的时候辅助解题
<ul>
<li>api_key: openai key</li>
<li>model: openai model</li>
<li>prompt: 自定义提示词，双花括号代表的是变量，在生成提示词的时候会被替换为字符串
<ul>
<li>{{ .TextLang }} 根据env决定，en:英文，cn:中文</li>
<li>{{ .Lang }} 编程语言</li>
<li>{{ .Problem }} 题目内容，必须加上</li>
<li>prompt 如果不填写的话，就使用如下默认prompt提示词模板</li>
</ul>
</li>
</ul>
</li>
</ul>
<div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">您是一个算法专家，请基于下面的算法题目，给出该算法的思路和复杂度, 使用 {{ .TextLang }} 回答</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">SETP1. 给出算法的归类，如递归，栈</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">SETP2. 若是存在暴力解法，给出思路和复杂度</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">SETP3. 给出最优解法和复杂度</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">SETP4. 代码实现，使用 {{ .Lang }} 语言，代码带注释和测试样例。</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">{{ .Problem }}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>尝试获取题目信息，第一次使用时，会尝试从Github下载Leetcode离线数据包，其中包含了所有题目信息。</p>
<p>（P.S. 这个数据是通过Python脚本爬虫实现，具体详见代码：<a href="https://github.com/PPsteven/leetcode-tool/blob/master/script/leetcode_crawler.py" target="_blank" rel="noopener noreferrer">leetcode_crawler.py</a>）</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">$ leetcode-tool meta 1</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">file problems.json not exists, start downloading from https://raw.githubusercontent.com/PPsteven/leetcode-tool/master/problems.json</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&amp;{Index:1 Title:两数之和 Slug:two-sum Difficulty:简单 Tags:[array hash-table] Link:https://leetcode.cn/problems/two-sum/description/ Content: Code: Solved:false}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>但是国内的用户可能由于网络原因无法下载，此时需要手动下载存放在吧本地目录中。</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">$ wget https://raw.githubusercontent.com/PPsteven/leetcode-tool/master/problems.json</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="1-创建题目">1. 创建题目<a href="https://ppsteven.github.io/blog/leetcode-tool-intro#1-%E5%88%9B%E5%BB%BA%E9%A2%98%E7%9B%AE" class="hash-link" aria-label="Direct link to 1. 创建题目" title="Direct link to 1. 创建题目">​</a></h3>
<p>刷题之前先得有题目ID, 要去 LeetCode 上面找一道题目, 找到它的序号(必须是前端页面看到的). 然后运行:</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">❯ leetcode-tool new --lang go 1</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>此步骤会创建一个题解文件夹和三个文件:</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">❯ tree solve/solve0001</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">solve/solve0001</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">├── problem.md # 题目描述文件</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">├── solve_0001.go # 题解源码文件</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">└── solve_0001_test.go # 测试文件</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p><code>problem.md</code>&nbsp;文件为 LeetCode 网页上的题目描述, 在 GitHub 上面显示完全正常, 代码块和图片都可正常显示;</p>
<p><img decoding="async" loading="lazy" alt="problem" src="https://ppsteven.github.io/assets/images/leetcode-problem-html-review-4c8c97b4ae5d3cf0b3fe38da05df7c52.png" width="660" height="322" class="img_ev3q"></p>
<p><code>solve_0001.go</code>&nbsp;为初始化的源码文件:</p>
<div class="language-go codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-go codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#00009f">package</span><span class="token plain"> solve0001</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic">/**</span><br></span><span class="token-line" style="color:#393A34"><span class="token comment" style="color:#999988;font-style:italic"> * @index 1</span><br></span><span class="token-line" style="color:#393A34"><span class="token comment" style="color:#999988;font-style:italic"> * @title 两数之和</span><br></span><span class="token-line" style="color:#393A34"><span class="token comment" style="color:#999988;font-style:italic"> * @difficulty 简单</span><br></span><span class="token-line" style="color:#393A34"><span class="token comment" style="color:#999988;font-style:italic"> * @tags array,hash-table</span><br></span><span class="token-line" style="color:#393A34"><span class="token comment" style="color:#999988;font-style:italic"> * @draft false</span><br></span><span class="token-line" style="color:#393A34"><span class="token comment" style="color:#999988;font-style:italic"> * @link https://leetcode-cn.com/problems/two-sum/</span><br></span><span class="token-line" style="color:#393A34"><span class="token comment" style="color:#999988;font-style:italic"> * @frontendId 1</span><br></span><span class="token-line" style="color:#393A34"><span class="token comment" style="color:#999988;font-style:italic"> */</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">func</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">twoSum</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">nums </span><span class="token punctuation" style="color:#393A34">[</span><span class="token punctuation" style="color:#393A34">]</span><span class="token builtin">int</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> target </span><span class="token builtin">int</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">[</span><span class="token punctuation" style="color:#393A34">]</span><span class="token builtin">int</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>文件中间的注解是后面生成汇总文件表格所需要的信息, 都是通过 api 获取到的题目信息.</p>
<p><code>solve_0001_test.go</code>&nbsp;相对很简陋:</p>
<div class="language-go codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-go codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#00009f">package</span><span class="token plain"> solve0001_test</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>以上, 题目初始化就完成了.</p>
<p><em>注意:</em>&nbsp;刷题基本是只会选择一门语言, 所以&nbsp;<code>--lang</code>&nbsp;这个参数略显繁琐, 我们可以在项目根文件创建一个内容为&nbsp;<code>{ "lang": "go" }</code>&nbsp;的&nbsp;<code>.leetcode.json</code>&nbsp;文件, 此参数就可以省略了。</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="2-解题">2. 解题<a href="https://ppsteven.github.io/blog/leetcode-tool-intro#2-%E8%A7%A3%E9%A2%98" class="hash-link" aria-label="Direct link to 2. 解题" title="Direct link to 2. 解题">​</a></h3>
<p><del>工具再好也不可能帮你解题, 所以解题还是要靠自己.</del></p>
<p>目前，基于LLM大模型技术，已经可以实现使用GPT辅助刷题了：<a href="https://wallstreetcn.com/articles/3684883" target="_blank" rel="noopener noreferrer">GPT-4满分第一名通过大厂模拟面试！微软154页研究刷屏：与AGI的第一次接触</a></p>
<p>首先，配置好字段 <code>gpt.api_key</code>，<code>gpt.model</code>，<code>gpt.prompt</code>（可选）</p>
<div class="language-diff codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-diff codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">{</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    "lang": "go/py3/ts/java", // 项目全局语言, 配置后 new 命令 --lang 参数可省略, 目前支持 go ts js py3 java</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    "env": "en/cn",</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">+    "gpt": {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">+    "api_key": "sk-xxx",</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">+        "model": "gpt-3.5-turbo",</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">+        "prompt": "您是一个算法专家，请基于下面的算法题目，给出该算法的思路和复杂度, 使用 {{ .TextLang }} 回答\nSETP1. 给出算法的归类，如递归，栈\nSETP2. 若是存在暴力解法，给出思路和复杂度\nSETP3. 给出最优解法和复杂度\nSETP4. 代码实现，使用 {{ .Lang }} 语言，代码带注释和测试样例。\n\n{{ .Problem }}"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>开始解题</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">$ leetcode-tool gpt 4</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>效果如下：</p>
<p><img decoding="async" loading="lazy" src="https://raw.githubusercontent.com/PPsteven/leetcode-tool/master/screenshots/gpt.gif" alt="img" class="img_ev3q"></p>
<p>入门题目直接搞定, 并且完成测试文件:</p>
<div class="language-go codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-go codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token comment" style="color:#999988;font-style:italic">// solve_0001.go</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">func</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">twoSum</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">nums </span><span class="token punctuation" style="color:#393A34">[</span><span class="token punctuation" style="color:#393A34">]</span><span class="token builtin">int</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> target </span><span class="token builtin">int</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">[</span><span class="token punctuation" style="color:#393A34">]</span><span class="token builtin">int</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	mp </span><span class="token operator" style="color:#393A34">:=</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">make</span><span class="token punctuation" style="color:#393A34">(</span><span class="token keyword" style="color:#00009f">map</span><span class="token punctuation" style="color:#393A34">[</span><span class="token builtin">int</span><span class="token punctuation" style="color:#393A34">]</span><span class="token builtin">int</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">0</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	</span><span class="token keyword" style="color:#00009f">for</span><span class="token plain"> i</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> num </span><span class="token operator" style="color:#393A34">:=</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">range</span><span class="token plain"> nums </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">		</span><span class="token keyword" style="color:#00009f">if</span><span class="token plain"> idx</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> ok </span><span class="token operator" style="color:#393A34">:=</span><span class="token plain"> mp</span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">target</span><span class="token operator" style="color:#393A34">-</span><span class="token plain">num</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"> ok </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">			</span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">[</span><span class="token punctuation" style="color:#393A34">]</span><span class="token builtin">int</span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain">idx</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> i</span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">		</span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">		mp</span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">num</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> i</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	</span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	</span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">[</span><span class="token punctuation" style="color:#393A34">]</span><span class="token builtin">int</span><span class="token punctuation" style="color:#393A34">{</span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<div class="language-go codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-go codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token comment" style="color:#999988;font-style:italic">// solve_0001_test.go</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">func</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">TestTwoSum</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">t </span><span class="token operator" style="color:#393A34">*</span><span class="token plain">testing</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">T</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	assert</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">Equal</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">t</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">[</span><span class="token punctuation" style="color:#393A34">]</span><span class="token builtin">int</span><span class="token punctuation" style="color:#393A34">{</span><span class="token number" style="color:#36acaa">0</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">1</span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">twoSum</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">[</span><span class="token punctuation" style="color:#393A34">]</span><span class="token builtin">int</span><span class="token punctuation" style="color:#393A34">{</span><span class="token number" style="color:#36acaa">2</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">7</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">11</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">15</span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">9</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	assert</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">Equal</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">t</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">[</span><span class="token punctuation" style="color:#393A34">]</span><span class="token builtin">int</span><span class="token punctuation" style="color:#393A34">{</span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">twoSum</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">[</span><span class="token punctuation" style="color:#393A34">]</span><span class="token builtin">int</span><span class="token punctuation" style="color:#393A34">{</span><span class="token number" style="color:#36acaa">2</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">7</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">11</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">15</span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">4</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>搞定题目.</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="3-更新题目分类汇总">3. 更新题目分类汇总<a href="https://ppsteven.github.io/blog/leetcode-tool-intro#3-%E6%9B%B4%E6%96%B0%E9%A2%98%E7%9B%AE%E5%88%86%E7%B1%BB%E6%B1%87%E6%80%BB" class="hash-link" aria-label="Direct link to 3. 更新题目分类汇总" title="Direct link to 3. 更新题目分类汇总">​</a></h3>
<p>下面是自动生成的题目注释，通过编辑注释信息，帮助我们分类该题的解法。</p>
<div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">/**</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> * @index 1</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> * @title Two Sum</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> * @difficulty EASY</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> * @tags array,hash-table</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> * @draft false</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> * @link https://leetcode.cn/problems/two-sum/description/</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> * @frontendId 1</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> * @solved false</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">*/</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<ul>
<li>index: 题目编号</li>
<li>title: 题目名称</li>
<li>difficulty: 题目难易程度</li>
<li>tags: 题目标签默认为Leetcode标签，同时也可以自定义标签</li>
<li>draft: 是否草稿，true 则不会在update的时候对该题进行分类</li>
<li>link: 题目链接</li>
<li>frontendId: 题目编号</li>
<li>solved: 是否解决</li>
</ul>
<p>开始更新</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">❯ leetcode-tool update</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>更新完成后，就会成功生成如下分类</p>
<p><img decoding="async" loading="lazy" src="https://raw.githubusercontent.com/PPsteven/leetcode-tool/master/screenshots/toc.png" alt="img" class="img_ev3q"></p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="4-同步至github">4. 同步至github<a href="https://ppsteven.github.io/blog/leetcode-tool-intro#4-%E5%90%8C%E6%AD%A5%E8%87%B3github" class="hash-link" aria-label="Direct link to 4. 同步至github" title="Direct link to 4. 同步至github">​</a></h3>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">&gt; git add . </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&gt; git commit -m "update"</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>最终的效果可以参考：</p>
<ul>
<li><a href="https://github.com/zcong1993/algo-go" target="_blank" rel="noopener noreferrer">zcong1993/algo-go</a></li>
<li><a href="https://github.com/PPsteven/algorithm" target="_blank" rel="noopener noreferrer">PPsteven/algorithm</a></li>
</ul>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="5-同步至notion数据库">5. 同步至Notion数据库<a href="https://ppsteven.github.io/blog/leetcode-tool-intro#5-%E5%90%8C%E6%AD%A5%E8%87%B3notion%E6%95%B0%E6%8D%AE%E5%BA%93" class="hash-link" aria-label="Direct link to 5. 同步至Notion数据库" title="Direct link to 5. 同步至Notion数据库">​</a></h3>
<p>配置好字段 <code>notion.token</code>，<code>notion.database_id</code>，<code>notion.page_id</code>（选填）</p>
<ol>
<li>
<p>首先，申请 notion 权限，支持通过 <code>notion-api</code> 操作你得notion页面，教程随便找了一个：<a href="https://seedao.notion.site/Notion-API-Key-32a2aa92e8f346f4813dfbab80e7c6dd?pvs=21" target="_blank" rel="noopener noreferrer">取得Notion API Key 流程</a></p>
</li>
<li>
<p>获取 page_id
点开你的notion页面，进入你需要创建的数据库的父页面，直接获取 URL 地址中 <code>-</code> 后的一串字符串。</p>
<p><img decoding="async" loading="lazy" alt="image-20240505021735518" src="https://ppsteven.github.io/assets/images/get-notion-page-id-968a634731edb5949cee9561e29a635d.png" width="2860" height="1256" class="img_ev3q"></p>
<p>并填入 <code>.leetcode.json</code> 中</p>
</li>
</ol>
<div class="language-diff codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-diff codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">{</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">+  "notion": {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">+    "token": "secret_nDoJWULxdaudMhbEdSo1g2TWUqYxqnArow4w6qo2NX",</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">+    "database_id": "3fbv1c2bf55e4fa18c66a5b0a61fa403",</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">+    "page_id": "59194b57331444eca8e7c996a1cdb505"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<ol start="3">
<li>同步并创建数据库
使用如下命令，开启同步记录至notion页面</li>
</ol>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">$ leetcode-tool sync --notion</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">2024/05/05 00:56:43 Create Database: e7086c88f6504623956d1271b70aa2b4, Please add the database_id in the config file</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">2024/05/05 00:56:43 Visited Link: https://www.notion.so/e7086c88f6504623956d1271b70aa2b4</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">sync leetcode record to notion, progress: 51/52%</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>除此使用，会在当前notion页面下创建一个 <code>inline</code> 显示的数据库，终端会给出其数据库的id，如 <code>e7086c88f6504623956d1271b70aa2b4</code></p>
<p><img decoding="async" loading="lazy" src="https://raw.githubusercontent.com/PPsteven/leetcode-tool/master/screenshots/notion-leetcode-summary.png" alt="img" class="img_ev3q"></p>
<ol start="4">
<li>更新数据库</li>
</ol>
<p>将上面获取的 database_id 手动添加至 <code>.leetcode.json</code> 文件中后，未来的每次更新都会更新该数据库，当且仅当数据发生变动后才会更新</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">$ leetcode-tool sync --notion</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="后记">后记<a href="https://ppsteven.github.io/blog/leetcode-tool-intro#%E5%90%8E%E8%AE%B0" class="hash-link" aria-label="Direct link to 后记" title="Direct link to 后记">​</a></h2>
<p>本项目在开发过程中，如下开源项目给予了灵感和代码参考</p>
<blockquote>
<p><a href="https://github.com/zcong1993/leetcode-tool" target="_blank" rel="noopener noreferrer">https://github.com/zcong1993/leetcode-tool</a></p>
</blockquote>
<p>此项目已多年不更新，本代码在Fork此仓库的基础上添加了如下功能：</p>
<ul>
<li>离线下载了 Leetcode 3400+题，保证了在Leetcode接口发生改变后依然可以运行。</li>
<li>优化了部分代码逻辑</li>
<li>接入了Openai辅助解题</li>
</ul>
<p>Leetcode 题目爬虫使用Python实现，详见 <code>scripts</code> 文件夹，代码参考：<a href="https://github.com/bunnyxt/lcid" target="_blank" rel="noopener noreferrer">https://github.com/bunnyxt/lcid</a></p>
<p>notion 接入部分，参考了：</p>
<ul>
<li><a href="https://github.com/xzhao11/leetcode_to_notion" target="_blank" rel="noopener noreferrer">leetcode_to_notion</a></li>
<li><a href="https://developers.notion.com/reference/intro" target="_blank" rel="noopener noreferrer">notion/developers</a></li>
</ul>]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[0x11.家庭服务器折腾记|内网穿透方案|IPV6]]></title>
            <link>https://ppsteven.github.io/blog/old-computer-adventures/ipv6</link>
            <guid>https://ppsteven.github.io/blog/old-computer-adventures/ipv6</guid>
            <pubDate>Wed, 12 Jul 2023 02:09:54 GMT</pubDate>
            <description><![CDATA[为什么我们需要内网穿透？本质上是由于IPV4数量不够，我们无法申请到公网IPV4，由于外网无法通过IP来直接定位到我们家中的服务器，所以我们上述介绍了N种内网穿透方案去解决这一个问题。]]></description>
            <content:encoded><![CDATA[<p>为什么我们需要内网穿透？本质上是由于IPV4数量不够，我们无法申请到公网IPV4，由于外网无法通过IP来直接定位到我们家中的服务器，所以我们上述介绍了N种内网穿透方案去解决这一个问题。</p>
<p>内网穿透由于其技术特点，可能存在无法穿透成功，或是成功后速度很慢的情况，基本上难以跑满网络带宽。下面介绍的IPV6方案是可以解决速度上的问题。</p>
<p>由于ipv6 基本上是算是用之不竭的，所以现在很容易申请到IPV6地址。</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="光猫开启ipv6-设置">光猫开启IPV6 设置<a href="https://ppsteven.github.io/blog/old-computer-adventures/ipv6#%E5%85%89%E7%8C%AB%E5%BC%80%E5%90%AFipv6-%E8%AE%BE%E7%BD%AE" class="hash-link" aria-label="Direct link to 光猫开启IPV6 设置" title="Direct link to 光猫开启IPV6 设置">​</a></h2>
<p>虽然IPV6已经推广了很多年，很多网站也是号称接入了IPV6，但是从大部分场景实测下来。车站，咖啡馆，图书馆，居民家中的WIFI默认都是不支持IPV6的。</p>
<p>很大的一个原因是运营商目前是限制居民使用IPV6设备的，家中的光猫是默认关闭IPV6功能，所以第一步我们需要给光猫开启IPV6。</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="1-获取超管账号密码">1. 获取超管账号密码<a href="https://ppsteven.github.io/blog/old-computer-adventures/ipv6#1-%E8%8E%B7%E5%8F%96%E8%B6%85%E7%AE%A1%E8%B4%A6%E5%8F%B7%E5%AF%86%E7%A0%81" class="hash-link" aria-label="Direct link to 1. 获取超管账号密码" title="Direct link to 1. 获取超管账号密码">​</a></h3>
<p>北京移动的超管账号密码是公开的</p>
<div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">账号：CMCCAdmin</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">密码：aDm8H%MdA</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>但是很遗憾，直接使用上述密码并不能登录系统。需要联系装宽带的师傅，帮你申请开启超管账号。在开启超管账号后就可以用上述密码进行登录了。</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="2-光猫设置">2. 光猫设置<a href="https://ppsteven.github.io/blog/old-computer-adventures/ipv6#2-%E5%85%89%E7%8C%AB%E8%AE%BE%E7%BD%AE" class="hash-link" aria-label="Direct link to 2. 光猫设置" title="Direct link to 2. 光猫设置">​</a></h3>
<p>光猫需要将连接名称设置为 <strong>2_INTERNET_R_VID_10</strong></p>
<p>经过实践发现，设置了没有反应，查资料发现 <strong>1_TR069_R_VID_4003</strong> 是移动默认的协议，移动通过它可以下发配置来远程控制光猫。</p>
<p>我姑且就按步骤点一遍，设置为 <strong>2_INTERNET_R_VID_10</strong>（虽然没反应）</p>
<p><img decoding="async" loading="lazy" alt="image-20230712023031479" src="https://ppsteven.github.io/assets/images/image-20230712023031479-1eaabcbd14718e1593d83c519d7700a4.png" width="1522" height="1310" class="img_ev3q"></p>
<p>关闭IPV6防火墙，这里没有超管根本关不了，网上有一些奇技淫巧可以关闭，实践后不起作用，还是老老实实用超管账号关吧。</p>
<p><img decoding="async" loading="lazy" alt="image-20230712023507607" src="https://ppsteven.github.io/assets/images/image-20230712023507607-bfeac425570e2e441b2ca498d6d19a96.png" width="1960" height="1298" class="img_ev3q"></p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="3-路由器设置">3. 路由器设置<a href="https://ppsteven.github.io/blog/old-computer-adventures/ipv6#3-%E8%B7%AF%E7%94%B1%E5%99%A8%E8%AE%BE%E7%BD%AE" class="hash-link" aria-label="Direct link to 3. 路由器设置" title="Direct link to 3. 路由器设置">​</a></h3>
<p>我使用的是小米路由器，开启IPV6，并同时关闭防火墙。</p>
<p><img decoding="async" loading="lazy" alt="image-20230712023724514" src="https://ppsteven.github.io/assets/images/image-20230712023724514-2f8c56131cc4313907cb5017c6050799.png" width="1438" height="904" class="img_ev3q"></p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="测试ipv6">测试IPV6<a href="https://ppsteven.github.io/blog/old-computer-adventures/ipv6#%E6%B5%8B%E8%AF%95ipv6" class="hash-link" aria-label="Direct link to 测试IPV6" title="Direct link to 测试IPV6">​</a></h2>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="ipv6-外部网络访问测试">IPV6 外部网络访问测试<a href="https://ppsteven.github.io/blog/old-computer-adventures/ipv6#ipv6-%E5%A4%96%E9%83%A8%E7%BD%91%E7%BB%9C%E8%AE%BF%E9%97%AE%E6%B5%8B%E8%AF%95" class="hash-link" aria-label="Direct link to IPV6 外部网络访问测试" title="Direct link to IPV6 外部网络访问测试">​</a></h3>
<p>打开 <a href="http://www.test-ipv6.com/" target="_blank" rel="noopener noreferrer">http://www.test-ipv6.com/</a> ，如果能成功获取公网IPV6地址（2409开头），则代表拥有IPV6访问能力，不过别开心太早，不一定能访问到你自己家的服务器。</p>
<p><img decoding="async" loading="lazy" alt="image-20230712024805104" src="https://ppsteven.github.io/assets/images/image-20230712024805104-70859a63468aa62f78548d3d5f865312.png" width="5004" height="1070" class="img_ev3q"></p>
<p>另一种测试方法很简单，通过 ping6 去测试能否ping通</p>
<div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">ping6 2409:xxxxxxxxxxxxxxxxxxxxxxx</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>但是能ping通也不保险，因为此时你是在本地ping的，有可能本地能ping通ipv6地址，但是外部依旧被防火墙阻挡。</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="ipv6-内网访问测试">IPV6 内网访问测试<a href="https://ppsteven.github.io/blog/old-computer-adventures/ipv6#ipv6-%E5%86%85%E7%BD%91%E8%AE%BF%E9%97%AE%E6%B5%8B%E8%AF%95" class="hash-link" aria-label="Direct link to IPV6 内网访问测试" title="Direct link to IPV6 内网访问测试">​</a></h3>
<p><a href="https://ipw.cn/ipv6ping/" target="_blank" rel="noopener noreferrer">IPv6 Ping 测试</a> 这个网址给我们提供了一个远程访问公网IPV6的连通性测试。如果这个网站能测试成功，那么恭喜你，你已经成功打通了IPV6，可以实现内网穿透了。</p>
<p><img decoding="async" loading="lazy" alt="image-20230712031442507" src="https://ppsteven.github.io/assets/images/image-20230712031442507-0e5e9a7a8484ff0e632480d7d8378e68.png" width="2240" height="1900" class="img_ev3q"></p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="辅助资料">辅助资料<a href="https://ppsteven.github.io/blog/old-computer-adventures/ipv6#%E8%BE%85%E5%8A%A9%E8%B5%84%E6%96%99" class="hash-link" aria-label="Direct link to 辅助资料" title="Direct link to 辅助资料">​</a></h3>
<p>由于每个地区的限制不同，如果遇到无法解决的情形，可以参考如下资料：</p>
<ul>
<li>
<p><a href="https://blog.jerry.ink/2022/06/24/53/" target="_blank" rel="noopener noreferrer">光猫改桥架+路由器拨号实现IPV6</a></p>
<p><a href="https://blog.jixiaob.cn/?post=78" target="_blank" rel="noopener noreferrer">光猫改桥架+路由器拨号实现IPV6-新建连接</a></p>
<p>移动光猫无法设置为桥接，失败。</p>
</li>
<li>
<p><a href="https://blog.51cto.com/fengyege/5950834" target="_blank" rel="noopener noreferrer">光猫开启Telnet，改ip6table解除防火墙限制</a>
实测下来，第一无法直接使用超管。第二，申请下的超管也是假超管，没有Telnet开启的选项，失败。</p>
</li>
<li>
<p><a href="https://pve.sqlsec.com/9/5/" target="_blank" rel="noopener noreferrer">越权访问+删除TR069</a>
较为复杂，无法删除TR069</p>
</li>
</ul>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="ipv6-ddns">IPV6 DDNS<a href="https://ppsteven.github.io/blog/old-computer-adventures/ipv6#ipv6-ddns" class="hash-link" aria-label="Direct link to IPV6 DDNS" title="Direct link to IPV6 DDNS">​</a></h2>
<p>上述获取的IPV6不是固定公网IP，是会随时改变的。</p>
<p>通过DDNS，即通过域名的方式，将动态的IPV6绑定到固定域名上就能实现公网IPV6的效果。</p>
<p>下面给出 ddns 的 docker-compose.yaml 文件</p>
<div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">version: '3'</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">services:</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  ddns:</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    image: newfuture/ddns</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    container_name: ddns</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    restart: always</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    volumes:</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      - ./config.json:/config.json</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    network_mode: host</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>config.yaml</p>
<div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">{</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  "id": "",</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  "token": "cloudflare的token",</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  "dns": "cloudflare",</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  "ipv4": [],</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  "ipv6": ["a.top", "b.world"],</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  "index6": "default",</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  "ttl": 600,</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  "proxy": "DIRECT",</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  "debug": true</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>由于我的域名服务商是绑定的cloudflare，就给出上述示例。具体的token需要进一步参考 newfuture/ddns 的帮助文件。</p>
<p>最后ping一下试试</p>
<div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">ping6 a.top</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="ipv4-客户端--ipv6服务器端">IPV4 客户端-&gt; IPV6服务器端<a href="https://ppsteven.github.io/blog/old-computer-adventures/ipv6#ipv4-%E5%AE%A2%E6%88%B7%E7%AB%AF--ipv6%E6%9C%8D%E5%8A%A1%E5%99%A8%E7%AB%AF" class="hash-link" aria-label="Direct link to IPV4 客户端-> IPV6服务器端" title="Direct link to IPV4 客户端-> IPV6服务器端">​</a></h2>
<p>上面已经提到了，支持IPV6的网络非常少，除了手机流量，大部分网络环境是不支持IPV6解析能力的。那么该如何让IPV4 Only 环境成功访问IPV6服务器呢？</p>
<p>套用CDN是一个非常好的解决方案，即我们通过访问CDN节点，然后由CDN的服务器再访问IPV6的服务器，就可以实现 IPV4 to IPV6 的访问。</p>
<blockquote>
<p>Cloudflare 是一个免费的CDN供应商，通过Cloudflare代理后的网络可以将我们的服务器保护起来，能有效避免DDOS攻击。换句话说，就是给服务器套了一个盾牌。此外，Cloudflare的流量没有限制且免费，在国内的访问速度还可以。</p>
</blockquote>
<p>一般认为有如下好处：</p>
<ol>
<li>免费的DNS解析和CDN代理，DNS支持泛域名解析</li>
<li>支持IPV4 和 IPV6 流量的相互转换</li>
<li>隐藏真实IP地址</li>
<li>避免DDOS攻击</li>
<li>流量无限且免费</li>
</ol>
<p>教程如下：</p>
<p><a href="https://blog.csdn.net/qq_38894585/article/details/131054885" target="_blank" rel="noopener noreferrer">开启 Cloudflare CDN 代理，实现 IPv4 to IPv6 转换</a></p>
<p>我的DNS设置如下图所示</p>
<p><img decoding="async" loading="lazy" alt="image-20230712223406059" src="https://ppsteven.github.io/assets/images/image-20230712223406059-39bcb7b385cb5fecd2c0061689227438.png" width="1884" height="382" class="img_ev3q"></p>
<p>home6 是通过DDNS绑定的域名，CNAME 是域名别名，点亮了小云朵，即实现了IPV4代理。</p>
<p>至于为什么通过CNANME实现，原因是Cloudflare不允许两个AAAA指向的域名，同时支持代理和直连。故我们通过CNAME，让我们的DNS实现这一功能。</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="验证">验证<a href="https://ppsteven.github.io/blog/old-computer-adventures/ipv6#%E9%AA%8C%E8%AF%81" class="hash-link" aria-label="Direct link to 验证" title="Direct link to 验证">​</a></h3>
<p>如果代理成功，那么我们ping IPV4 得到的是IPV4地址，而ping IPV6 得到的是IPV6地址。</p>
<div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">ping movie.abc.com </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">ping6 movie.abc.com</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="为什么配置了还是无法代理">为什么配置了还是无法代理<a href="https://ppsteven.github.io/blog/old-computer-adventures/ipv6#%E4%B8%BA%E4%BB%80%E4%B9%88%E9%85%8D%E7%BD%AE%E4%BA%86%E8%BF%98%E6%98%AF%E6%97%A0%E6%B3%95%E4%BB%A3%E7%90%86" class="hash-link" aria-label="Direct link to 为什么配置了还是无法代理" title="Direct link to 为什么配置了还是无法代理">​</a></h3>
<h4 class="anchor anchorWithStickyNavbar_LWe7" id="ssltls-是否设置为full">SSL/TLS 是否设置为FULL<a href="https://ppsteven.github.io/blog/old-computer-adventures/ipv6#ssltls-%E6%98%AF%E5%90%A6%E8%AE%BE%E7%BD%AE%E4%B8%BAfull" class="hash-link" aria-label="Direct link to SSL/TLS 是否设置为FULL" title="Direct link to SSL/TLS 是否设置为FULL">​</a></h4>
<p>建议给服务器设置证书，使用FULL模式是支持自签证书。为了简化这一步骤，可以使用Caddy 或 NPM 来帮助我们申请。</p>
<p>我使用的NPM，下面是我的npm配置。</p>
<p><img decoding="async" loading="lazy" alt="image-20230713153936702" src="https://ppsteven.github.io/assets/images/image-20230713153936702-7ec0d8f994fff1f96f656c5860a54e07.png" width="2474" height="946" class="img_ev3q"></p>
<p><img decoding="async" loading="lazy" alt="image-20230712224052662" src="https://ppsteven.github.io/assets/images/image-20230712224052662-eb281232e2f7ea1fe9e9406b527763f5.png" width="1808" height="1186" class="img_ev3q"></p>
<p>SSL/TSL 连接模式有四种模式： OFF、Flexible SSL、Full SSL、Full SSL (Strict)</p>
<ul>
<li><strong>OFF</strong>：关闭 HTTPS 访问，所有访客重定向到 HTTP。</li>
<li><strong>Flexible</strong>：访客访问你网站用 HTTPS，但是 CDN 到你源服务器拉取东西时用的 HTTP 协议。这个SSL模式一键实现用户到CF的SSL加密模式，我们服务器中的网站可以不安装SSL证书，然后用户打开也可以看到是HTTPS格式。根据CF的建议，如果确实没有办法在服务器端给网站安装证书的才使用这个办法。</li>
<li><strong>Full</strong>：这个模式区别在于CF到服务器端是可以使用自签证书的。此选项适合源服务器用的是自签名 SSL 证书或无效证书的情况</li>
<li><strong>Full (Strict)</strong>：需要CF到服务器端安装SSL证书而且必须是认证过的证书，不可以自签证书。</li>
</ul>
<p>总结，除了OFF，其他都是使用https与用户连接。建议使用Full (Strict)，如果服务器没有办法上https，就选择Flexible。</p>
<blockquote>
<p>更多Cloudflare配置详见：<a href="https://www.zhoulujun.cn/html/tools/cloudServices/CDN/8254.html" target="_blank" rel="noopener noreferrer">cloudflare加速个人网站和安全防护设置指北</a></p>
</blockquote>
<h4 class="anchor anchorWithStickyNavbar_LWe7" id="端口不能使用80443">端口不能使用80/443<a href="https://ppsteven.github.io/blog/old-computer-adventures/ipv6#%E7%AB%AF%E5%8F%A3%E4%B8%8D%E8%83%BD%E4%BD%BF%E7%94%A880443" class="hash-link" aria-label="Direct link to 端口不能使用80/443" title="Direct link to 端口不能使用80/443">​</a></h4>
<p>由于运营商的限制，家用光猫是会拒绝80/443端口的入站流量的。所以我们需要改换端口。<a href="https://developers.cloudflare.com/fundamentals/get-started/reference/network-ports/" target="_blank" rel="noopener noreferrer">Cloudflare支持的端口</a> 如下所示。</p>
<p>HTTP：</p>
<ul>
<li>80</li>
<li>8080</li>
<li>8880</li>
<li>2052</li>
<li>2082</li>
<li>2086</li>
<li>2095</li>
</ul>
<p>HTTPS:</p>
<ul>
<li>443</li>
<li>2053</li>
<li>2083</li>
<li>2087</li>
<li>2096</li>
<li>8443</li>
</ul>
<p>故我们将服务器上的http的监听端口改为8443</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="更改cloudlfare-回溯端口">更改cloudlfare 回溯端口<a href="https://ppsteven.github.io/blog/old-computer-adventures/ipv6#%E6%9B%B4%E6%94%B9cloudlfare-%E5%9B%9E%E6%BA%AF%E7%AB%AF%E5%8F%A3" class="hash-link" aria-label="Direct link to 更改cloudlfare 回溯端口" title="Direct link to 更改cloudlfare 回溯端口">​</a></h3>
<p>由于每次我们请求域名都需要带上8443的端口号，实在有点丑，可以通过配置规则，对CDN回溯请求服务器的端口进行更改。</p>
<p>参考教程：<a href="https://blog.csdn.net/weixin_44573077/article/details/129450783" target="_blank" rel="noopener noreferrer">使用cloudflare重写端口</a></p>
<p><img decoding="async" loading="lazy" src="https://ppsteven.github.io/assets/images/18bad85116d143288a9ed4d9f054b181-ddb10c5b52f1efbb64fbc2e2e9603703.png" width="1106" height="748" class="img_ev3q"></p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="��总结--效果">总结 &amp; 效果<a href="https://ppsteven.github.io/blog/old-computer-adventures/ipv6#%E6%80%BB%E7%BB%93--%E6%95%88%E6%9E%9C" class="hash-link" aria-label="Direct link to 总结 &amp; 效果" title="Direct link to 总结 &amp; 效果">​</a></h2>
<p>综上所述，我们通过套用Cloudflare的CDN服务，使我们在IPV4环境下也能访问IPV6上的服务器。</p>
<p>在DNS配置中，域名系统同时支持了IPV6直连和IPV4代理两种模式，这意味着，当我们的网络环境满足IPV6时，还是可以通过直连来最大化的打满我们的带宽，实现最佳的链接速度。</p>
<p>下面放一张我们通过Cloudflare代理后服务器下载资源的速度，由于公司的网络是香港🇭🇰，所以下载速度非常快。</p>
<p><img decoding="async" loading="lazy" alt="image-20230713104613885" src="https://ppsteven.github.io/assets/images/image-20230713104613885-e456511466db56980a71fdc52dca06d3.png" width="711" height="193" class="img_ev3q"></p>
<p>使用手机流量（IPV6）直连的速度。</p>
<p><img decoding="async" loading="lazy" alt="image-20230713105340852" src="https://ppsteven.github.io/assets/images/image-20230713105340852-ae496595d57c98a980f0193be150194c.png" width="716" height="193" class="img_ev3q"></p>]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[0x9.家庭服务器折腾记|内网穿透方案|Cloudflare Tunnel]]></title>
            <link>https://ppsteven.github.io/blog/old-computer-adventures/cloudflare-tunnel</link>
            <guid>https://ppsteven.github.io/blog/old-computer-adventures/cloudflare-tunnel</guid>
            <pubDate>Mon, 28 Nov 2022 00:54:15 GMT</pubDate>
            <description><![CDATA[Cloudflare Tunnel]]></description>
            <content:encoded><![CDATA[<h2 class="anchor anchorWithStickyNavbar_LWe7" id="cloudflare-tunnel">Cloudflare Tunnel<a href="https://ppsteven.github.io/blog/old-computer-adventures/cloudflare-tunnel#cloudflare-tunnel" class="hash-link" aria-label="Direct link to Cloudflare Tunnel" title="Direct link to Cloudflare Tunnel">​</a></h2>
<blockquote>
<p>文字教程：<a href="https://tech.aufomm.com/" target="_blank" rel="noopener noreferrer">https://tech.aufomm.com/</a></p>
<p>视频教程：<a href="https://www.bilibili.com/video/BV1XY411T7sT" target="_blank" rel="noopener noreferrer">https://www.bilibili.com/video/BV1XY411T7sT</a></p>
</blockquote>]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[0x8.家庭服务器折腾记|服务搭建|汇总]]></title>
            <link>https://ppsteven.github.io/blog/old-computer-adventures/backgroud-services-all</link>
            <guid>https://ppsteven.github.io/blog/old-computer-adventures/backgroud-services-all</guid>
            <pubDate>Wed, 26 Oct 2022 02:21:59 GMT</pubDate>
            <description><![CDATA[家用服务器的基本部署环境为]]></description>
            <content:encoded><![CDATA[<p>家用服务器的基本部署环境为</p>
<ul>
<li>家用服务器：Docker(Portainer)</li>
<li>公网IP服务器：Rancher</li>
</ul>
<p>基础环境问题解决后，可以开始开始搭建有趣的服务了</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="alist">Alist<a href="https://ppsteven.github.io/blog/old-computer-adventures/backgroud-services-all#alist" class="hash-link" aria-label="Direct link to Alist" title="Direct link to Alist">​</a></h2>
<p>Alist 是一个网盘直链项目，可以把各类网盘（阿里云，百度云，本地文件）等都挂载到网页上进行查看，并分享。</p>
<p>本次使用Alist主要用一下功能：</p>
<ul>
<li>挂载 <code>服务器本地目录</code>，把服务器变成一个<code>网盘</code></li>
<li>WebDAV：Alist 自带WebDAV 是一个意外之喜，这样所以的电子书都可以直接通过WebDAV进行查看。</li>
</ul>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="官网项目">官网项目<a href="https://ppsteven.github.io/blog/old-computer-adventures/backgroud-services-all#%E5%AE%98%E7%BD%91%E9%A1%B9%E7%9B%AE" class="hash-link" aria-label="Direct link to 官网项目" title="Direct link to 官网项目">​</a></h3>
<p><a href="https://github.com/alist-org/alist" target="_blank" rel="noopener noreferrer">https://github.com/alist-org/alist</a></p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="安装教程">安装教程<a href="https://ppsteven.github.io/blog/old-computer-adventures/backgroud-services-all#%E5%AE%89%E8%A3%85%E6%95%99%E7%A8%8B" class="hash-link" aria-label="Direct link to 安装教程" title="Direct link to 安装教程">​</a></h3>
<blockquote>
<p><a href="https://blog.laoda.de/archives/docker-install-alist" target="_blank" rel="noopener noreferrer">【好玩的Docker项目】目前最好用的网盘直链程序——AList，支持市面上几乎所有网盘！可以代替Olaindex！</a></p>
</blockquote>]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[0x7.家庭服务器折腾记|服务搭建|Portainer]]></title>
            <link>https://ppsteven.github.io/blog/old-computer-adventures/Portainer</link>
            <guid>https://ppsteven.github.io/blog/old-computer-adventures/Portainer</guid>
            <pubDate>Wed, 26 Oct 2022 02:01:18 GMT</pubDate>
            <description><![CDATA[继上文提及的K8S容器管理平台，Portainer是一个适合本地部署的轻量化的Docker可视化管理平台，可以让你轻松地管理你的Docker容器。]]></description>
            <content:encoded><![CDATA[<p>继上文提及的K8S容器管理平台，Portainer是一个适合本地部署的轻量化的Docker可视化管理平台，可以让你轻松地管理你的Docker容器。</p>
<p>Portainer 使用非常简单，可以让你摆脱记忆复制的Docker命令</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="安装">安装<a href="https://ppsteven.github.io/blog/old-computer-adventures/Portainer#%E5%AE%89%E8%A3%85" class="hash-link" aria-label="Direct link to 安装" title="Direct link to 安装">​</a></h2>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="创建目录">创建目录<a href="https://ppsteven.github.io/blog/old-computer-adventures/Portainer#%E5%88%9B%E5%BB%BA%E7%9B%AE%E5%BD%95" class="hash-link" aria-label="Direct link to 创建目录" title="Direct link to 创建目录">​</a></h3>
<p>创建文件夹用以挂载<code>配置文件</code>和<code>数据文件</code></p>
<div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">mkdir -p ${HOME}/docker-data/portainer_data</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>目录结构如下</p>
<div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">docker-data/</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">├── alist</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">│&nbsp;&nbsp; ├── config.json</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">│&nbsp;&nbsp; ├── data.db</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">│&nbsp;&nbsp; └── temp</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">├── docker-registery</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">│&nbsp;&nbsp; └── docker</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">├── docker-registry</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">├── mysql</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">│&nbsp;&nbsp; ├── conf</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">│&nbsp;&nbsp; └── data</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">├── mysql5.7.23</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">│&nbsp;&nbsp; ├── auto.cnf</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">│&nbsp;&nbsp; ├── ca-key.pem</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">│&nbsp;&nbsp; ├── ca.pem</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">│&nbsp;&nbsp; ├── client-cert.pem</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">│&nbsp;&nbsp; ├── client-key.pem</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">│&nbsp;&nbsp; ├── db</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">│&nbsp;&nbsp; ├── ib_buffer_pool</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">│&nbsp;&nbsp; ├── ibdata1</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">│&nbsp;&nbsp; ├── ib_logfile0</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">│&nbsp;&nbsp; ├── ib_logfile1</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">│&nbsp;&nbsp; ├── ibtmp1</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">│&nbsp;&nbsp; ├── mysql</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">│&nbsp;&nbsp; ├── performance_schema</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">│&nbsp;&nbsp; ├── private_key.pem</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">│&nbsp;&nbsp; ├── public_key.pem</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">│&nbsp;&nbsp; ├── server-cert.pem</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">│&nbsp;&nbsp; ├── server-key.pem</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">│&nbsp;&nbsp; └── sys</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">├── nginx</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">│&nbsp;&nbsp; ├── conf</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">│&nbsp;&nbsp; ├── html</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">│&nbsp;&nbsp; ├── logs</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">│&nbsp;&nbsp; └── ssl</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">├── portainer_data</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">│&nbsp;&nbsp; ├── backups</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">│&nbsp;&nbsp; ├── bin</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">│&nbsp;&nbsp; ├── certs</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">│&nbsp;&nbsp; ├── compose</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">│&nbsp;&nbsp; ├── config.json</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">│&nbsp;&nbsp; ├── docker_config</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">│&nbsp;&nbsp; ├── portainer.db</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">│&nbsp;&nbsp; ├── portainer.key</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">│&nbsp;&nbsp; ├── portainer.pub</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">│&nbsp;&nbsp; └── tls</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">├── postgresql [error opening dir]</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">└── rancher</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> &nbsp;&nbsp; ├── auditlog # 新建</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&nbsp;&nbsp;  └── config # 新建</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="运行容器">运行容器<a href="https://ppsteven.github.io/blog/old-computer-adventures/Portainer#%E8%BF%90%E8%A1%8C%E5%AE%B9%E5%99%A8" class="hash-link" aria-label="Direct link to 运行容器" title="Direct link to 运行容器">​</a></h3>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">docker run -d -p 8000:8000 -p 9443:9443 \</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  --name portainer --restart=always \</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  -v /var/run/docker.sock:/var/run/docker.sock  \</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  -v ${HOME}/docker-data/portainer_data:/data \</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  portainer/portainer-ce</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="成品展示">成品展示<a href="https://ppsteven.github.io/blog/old-computer-adventures/Portainer#%E6%88%90%E5%93%81%E5%B1%95%E7%A4%BA" class="hash-link" aria-label="Direct link to 成品展示" title="Direct link to 成品展示">​</a></h2>
<p><img decoding="async" loading="lazy" alt="image-20221026021708419" src="https://ppsteven.github.io/assets/images/image-20221026021708419-4baf90583f0332e7476eb47e9cc0e632.png" width="3348" height="1652" class="img_ev3q"></p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="使用体验">使用体验<a href="https://ppsteven.github.io/blog/old-computer-adventures/Portainer#%E4%BD%BF%E7%94%A8%E4%BD%93%E9%AA%8C" class="hash-link" aria-label="Direct link to 使用体验" title="Direct link to 使用体验">​</a></h3>
<p>Portainer 可以直观的使用可视化面板创建Docker容器，与使用命令行一致。但是可以大大帮助我们减低docker命令的记忆量。而且对于像<code>docker inspect</code>此类的操作来说，在页面上查看信息和复制信息相较<code>命令行</code>也更为方便。</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="更多资料">更多资料：<a href="https://ppsteven.github.io/blog/old-computer-adventures/Portainer#%E6%9B%B4%E5%A4%9A%E8%B5%84%E6%96%99" class="hash-link" aria-label="Direct link to 更多资料：" title="Direct link to 更多资料：">​</a></h2>
<ul>
<li><a href="https://docs.portainer.io/start/install/server/docker/linux" target="_blank" rel="noopener noreferrer">Install Portainer with Docker on Linux</a></li>
<li><a href="https://blog.laoda.de/archives/portainer" target="_blank" rel="noopener noreferrer">【Docker系列】Docker可视化面板——Portainer</a></li>
</ul>]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[0x6.家庭服务器折腾记|服务搭建|Rancher]]></title>
            <link>https://ppsteven.github.io/blog/old-computer-adventures/rancher</link>
            <guid>https://ppsteven.github.io/blog/old-computer-adventures/rancher</guid>
            <pubDate>Wed, 26 Oct 2022 01:34:10 GMT</pubDate>
            <description><![CDATA[Rancher是一个开源的企业级容器管理平台。通过Rancher，企业再也不必自己使用一系列的开源软件去从头搭建容器服务平台。Rancher提供了在生产环境中使用的管理Docker和Kubernetes的全栈化容器部署与管理平台。]]></description>
            <content:encoded><![CDATA[<p>Rancher是一个开源的企业级容器管理平台。通过Rancher，企业再也不必自己使用一系列的开源软件去从头搭建容器服务平台。Rancher提供了在生产环境中使用的管理Docker和Kubernetes的全栈化容器部署与管理平台。</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="安装">安装<a href="https://ppsteven.github.io/blog/old-computer-adventures/rancher#%E5%AE%89%E8%A3%85" class="hash-link" aria-label="Direct link to 安装" title="Direct link to 安装">​</a></h2>
<p>Rancher 基于Docker安装非常方便</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="创建目录">创建目录<a href="https://ppsteven.github.io/blog/old-computer-adventures/rancher#%E5%88%9B%E5%BB%BA%E7%9B%AE%E5%BD%95" class="hash-link" aria-label="Direct link to 创建目录" title="Direct link to 创建目录">​</a></h3>
<p>创建文件夹用以挂载<code>配置文件</code>和<code>数据文件</code></p>
<div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">mkdir -p docker-data/rancher/{config, auditlog}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>目录结构如下</p>
<div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">docker-data/</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">├── alist</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">│&nbsp;&nbsp; ├── config.json</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">│&nbsp;&nbsp; ├── data.db</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">│&nbsp;&nbsp; └── temp</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">├── docker-registery</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">│&nbsp;&nbsp; └── docker</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">├── docker-registry</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">├── mysql</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">│&nbsp;&nbsp; ├── conf</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">│&nbsp;&nbsp; └── data</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">├── mysql5.7.23</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">│&nbsp;&nbsp; ├── auto.cnf</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">│&nbsp;&nbsp; ├── ca-key.pem</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">│&nbsp;&nbsp; ├── ca.pem</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">│&nbsp;&nbsp; ├── client-cert.pem</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">│&nbsp;&nbsp; ├── client-key.pem</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">│&nbsp;&nbsp; ├── db</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">│&nbsp;&nbsp; ├── ib_buffer_pool</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">│&nbsp;&nbsp; ├── ibdata1</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">│&nbsp;&nbsp; ├── ib_logfile0</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">│&nbsp;&nbsp; ├── ib_logfile1</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">│&nbsp;&nbsp; ├── ibtmp1</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">│&nbsp;&nbsp; ├── mysql</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">│&nbsp;&nbsp; ├── performance_schema</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">│&nbsp;&nbsp; ├── private_key.pem</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">│&nbsp;&nbsp; ├── public_key.pem</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">│&nbsp;&nbsp; ├── server-cert.pem</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">│&nbsp;&nbsp; ├── server-key.pem</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">│&nbsp;&nbsp; └── sys</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">├── nginx</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">│&nbsp;&nbsp; ├── conf</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">│&nbsp;&nbsp; ├── html</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">│&nbsp;&nbsp; ├── logs</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">│&nbsp;&nbsp; └── ssl</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">├── portainer_data</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">│&nbsp;&nbsp; ├── backups</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">│&nbsp;&nbsp; ├── bin</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">│&nbsp;&nbsp; ├── certs</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">│&nbsp;&nbsp; ├── compose</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">│&nbsp;&nbsp; ├── config.json</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">│&nbsp;&nbsp; ├── docker_config</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">│&nbsp;&nbsp; ├── portainer.db</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">│&nbsp;&nbsp; ├── portainer.key</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">│&nbsp;&nbsp; ├── portainer.pub</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">│&nbsp;&nbsp; └── tls</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">├── postgresql [error opening dir]</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">└── rancher</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> &nbsp;&nbsp; ├── auditlog # 新建</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&nbsp;&nbsp;  └── config # 新建</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="运行容器">运行容器<a href="https://ppsteven.github.io/blog/old-computer-adventures/rancher#%E8%BF%90%E8%A1%8C%E5%AE%B9%E5%99%A8" class="hash-link" aria-label="Direct link to 运行容器" title="Direct link to 运行容器">​</a></h3>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">docker run -d --privileged  \</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">   --restart=unless-stopped  \</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">   --name rancher2.5 -p 8080:80 -p 8443:443 \</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">   -v ~/docker-data/rancher/config:/var/lib/rancher \</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">   -v ~/docker-data/rancher/auditlog:/var/log/auditlog \</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">   rancher/rancher:v2.5-head</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="成品展示">成品展示<a href="https://ppsteven.github.io/blog/old-computer-adventures/rancher#%E6%88%90%E5%93%81%E5%B1%95%E7%A4%BA" class="hash-link" aria-label="Direct link to 成品展示" title="Direct link to 成品展示">​</a></h2>
<p><img decoding="async" loading="lazy" alt="image-20221026015731954" src="https://ppsteven.github.io/assets/images/image-20221026015731954-85897daedbccaace0fda9db1590c68cf.png" width="3342" height="1826" class="img_ev3q"></p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="后记">后记<a href="https://ppsteven.github.io/blog/old-computer-adventures/rancher#%E5%90%8E%E8%AE%B0" class="hash-link" aria-label="Direct link to 后记" title="Direct link to 后记">​</a></h2>
<p>安装<code>Rancher</code>并没有想象中一帆风顺，在安装过程中碰到一系列问题，如 Rancher 无法在<code>Manjaro</code>系统上成功安装，更换<code>Ubuntu</code>后才解决。</p>
<p>在同一台机器上同时安装 <code>rancher</code> 和 <code>rancher-agent</code> 会遇到一些问题。特别是希望通过异地组网的方式将不同无公网的设备组合在一起，并使用局域网域名管理的时候，遇到了一系列网络的问题。</p>
<p>最后使用的解决方案是，在家用服务器安装rancher-server，将带公网IP的服务器作为<code>rancher-agent</code>，好处是在安装失败后可以直接重装系统清理环境。</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="更多资料">更多资料：<a href="https://ppsteven.github.io/blog/old-computer-adventures/rancher#%E6%9B%B4%E5%A4%9A%E8%B5%84%E6%96%99" class="hash-link" aria-label="Direct link to 更多资料：" title="Direct link to 更多资料：">​</a></h2>
<ul>
<li><a href="https://rancher.com/docs/rancher/v2.6/en/installation/other-installation-methods/single-node-docker/" target="_blank" rel="noopener noreferrer">Installing Rancher on a Single Node Using Docker</a></li>
<li><a href="https://rancher.com/docs/rancher/v1.6/zh/installing-rancher/installing-server/basic-ssl-config/#rancherssl" target="_blank" rel="noopener noreferrer">安装Rancher并使用SSL</a></li>
</ul>]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[0x5.家庭服务器折腾记|内网穿透方案|ZerotierOne]]></title>
            <link>https://ppsteven.github.io/blog/old-computer-adventures/zerotier-one</link>
            <guid>https://ppsteven.github.io/blog/old-computer-adventures/zerotier-one</guid>
            <pubDate>Mon, 08 Aug 2022 00:37:45 GMT</pubDate>
            <description><![CDATA[内网穿透是把家用服务器改造成网络服务器的重要一步]]></description>
            <content:encoded><![CDATA[<p>内网穿透是把家用服务器改造成网络服务器的重要一步</p>
<p>目前成熟的解决方案有</p>
<ul>
<li>申请公网IP：需要联系网络服务商，困难</li>
<li>花生壳</li>
<li>frp</li>
<li>ngork</li>
<li>zerotier</li>
</ul>
<p>zerotier和上述方式本质的区别是，它是一个组网工具，目的是将数台已有的设备组合成一个大型的局域网。</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="安装">安装<a href="https://ppsteven.github.io/blog/old-computer-adventures/zerotier-one#%E5%AE%89%E8%A3%85" class="hash-link" aria-label="Direct link to 安装" title="Direct link to 安装">​</a></h2>
<p>软件下载：<a href="https://www.zerotier.com/download/" target="_blank" rel="noopener noreferrer">地址</a></p>
<p>mac 推荐安装其带的桌面端工具</p>
<p>Linux推荐使用docker安装</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="初级使用">初级使用<a href="https://ppsteven.github.io/blog/old-computer-adventures/zerotier-one#%E5%88%9D%E7%BA%A7%E4%BD%BF%E7%94%A8" class="hash-link" aria-label="Direct link to 初级使用" title="Direct link to 初级使用">​</a></h2>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="基础命令">基础命令<a href="https://ppsteven.github.io/blog/old-computer-adventures/zerotier-one#%E5%9F%BA%E7%A1%80%E5%91%BD%E4%BB%A4" class="hash-link" aria-label="Direct link to 基础命令" title="Direct link to 基础命令">​</a></h3>
<div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">sudo zerotier-cli join 233ccaac27xxxxx # 加入网络</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">200 join OK</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">sudo zerotier-cli info # 查看是否连入网络</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"># 200 info 07bf052a5a 1.10.1 ONLINE</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">sudo zerotier-cli leave 233ccaac27xxxxx # 断开网络	</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="后台管理">后台管理<a href="https://ppsteven.github.io/blog/old-computer-adventures/zerotier-one#%E5%90%8E%E5%8F%B0%E7%AE%A1%E7%90%86" class="hash-link" aria-label="Direct link to 后台管理" title="Direct link to 后台管理">​</a></h3>
<p>只要知道网络的ID，即<code>233ccaac27xxxxx</code>,任何设备都可以连入该网络，但是只有在后台通过的设备才能真正加入</p>
<p><img decoding="async" loading="lazy" alt="img" src="https://ppsteven.github.io/assets/images/1435533-20210902213401547-1548495256-3903b786aa837d722535f1ab35d4b4da.png" width="1903" height="772" class="img_ev3q"></p>
<p>除了简单的运行接入设备以外，还可以</p>
<ul>
<li>管理连入设备的名称</li>
<li>为每台设备分配ip</li>
<li>邀请设备加入</li>
</ul>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="高级使用-dns服务器">高级使用-DNS服务器<a href="https://ppsteven.github.io/blog/old-computer-adventures/zerotier-one#%E9%AB%98%E7%BA%A7%E4%BD%BF%E7%94%A8-dns%E6%9C%8D%E5%8A%A1%E5%99%A8" class="hash-link" aria-label="Direct link to 高级使用-DNS服务器" title="Direct link to 高级使用-DNS服务器">​</a></h3>
<p>设备一旦多起来，使用IP无法记住所有的设备，所以需要一台局域网的DNS服务器建立域名，zeronsd就是起到这样的作用。</p>
<blockquote>
<p><a href="https://www.pudn.com/news/62833b7c9b6e2b6d55d678b9.html" target="_blank" rel="noopener noreferrer">zerotier进阶 使用zeronsd作为私有网段DNS服务器</a></p>
</blockquote>
<p><strong>容器启动服务</strong></p>
<div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">docker run --net host -itd \</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">     --name zerodns \</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">     -v /var/lib/zerotier-one/authtoken.secret:/authtoken.secret \</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">     -v /var/lib/zerotier-one/token.txt:/token.txt \</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">     zerotier/zeronsd start -s /authtoken.secret -t /token.txt  -w -d 替换为你的域名 替换为你的ID</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p><strong>说明</strong></p>
<ul>
<li>
<p>authtoken.secret</p>
<p>它决定了zerodns连接的网络，zerodns运行时必须已经加入了网络中，一般位于<code>/var/lib/zerotier-one/</code>下，取决于安装的方式。</p>
</li>
<li>
<p>token.txt</p>
<p>生成token时秘钥文件，生成完后就消失，需要保持下来。</p>
</li>
</ul>
<p><strong>最后</strong></p>
<p>所有加入的设备需要使用DNS前，需要重新加入网络，并勾选DNS选项。</p>
<p><img decoding="async" loading="lazy" alt="img" src="https://ppsteven.github.io/assets/images/image-20220808011653241-9892621-30f574fcad5aa87746eac1ee8a5bf389.png" width="1250" height="852" class="img_ev3q"></p>
<p>服务端最好也是重新加入一下网络，并重新启动下<code>zeronsd</code></p>
<div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">sudo zerotier-cli leave 233ccaac27xxxxx # 离开</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">sudo zerotier-cli join 233ccaac27xxxxx # 加入</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">docker restart zerodns # 重新启动zeronsd</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="moon-节点搭建">Moon 节点搭建<a href="https://ppsteven.github.io/blog/old-computer-adventures/zerotier-one#moon-%E8%8A%82%E7%82%B9%E6%90%AD%E5%BB%BA" class="hash-link" aria-label="Direct link to Moon 节点搭建" title="Direct link to Moon 节点搭建">​</a></h2>
<ul>
<li><a href="https://tvtv.fun/vps/001.html" target="_blank" rel="noopener noreferrer">No.001 简单搭建 Zerotier Moon 为虚拟网络加速</a></li>
</ul>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="参考">参考<a href="https://ppsteven.github.io/blog/old-computer-adventures/zerotier-one#%E5%8F%82%E8%80%83" class="hash-link" aria-label="Direct link to 参考" title="Direct link to 参考">​</a></h2>
<ul>
<li><a href="http://t.zoukankan.com/steinven-p-15220959.html" target="_blank" rel="noopener noreferrer">组网神器Zerotier One使用</a></li>
</ul>]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[0x10.家庭服务器折腾记|内网穿透方案|Headscale]]></title>
            <link>https://ppsteven.github.io/blog/old-computer-adventures/Headscale</link>
            <guid>https://ppsteven.github.io/blog/old-computer-adventures/Headscale</guid>
            <pubDate>Mon, 08 Aug 2022 00:37:45 GMT</pubDate>
            <description><![CDATA[上文已介绍了zerotier是异地组网工具，下面再介绍一款开源的内网穿透工具Headscale，它是基于Tailscale的开源版本。]]></description>
            <content:encoded><![CDATA[<p>上文已介绍了zerotier是异地组网工具，下面再介绍一款开源的内网穿透工具Headscale，它是基于Tailscale的开源版本。</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="介绍">介绍<a href="https://ppsteven.github.io/blog/old-computer-adventures/Headscale#%E4%BB%8B%E7%BB%8D" class="hash-link" aria-label="Direct link to 介绍" title="Direct link to 介绍">​</a></h2>
<blockquote>
<p>Tailscale 是一种基于 WireGuard 的虚拟组网工具，和 Netmaker 类似，<strong>最大的区别在于 Tailscale 是在用户态实现了 WireGuard 协议，而 Netmaker 直接使用了内核态的 WireGuard</strong>。所以 Tailscale 相比于内核态 WireGuard 性能会有所损失，但与 OpenVPN 之流相比还是能甩好几十条街的，Tailscale 虽然在性能上做了些许取舍，但在功能和易用性上绝对是完爆其他工具</p>
<p>--详见 <a href="https://icloudnative.io/posts/how-to-set-up-or-migrate-headscale/#macos" target="_blank" rel="noopener noreferrer">Tailscale 基础教程：Headscale 的部署方法和使用教程</a></p>
</blockquote>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="服务端部署">服务端部署<a href="https://ppsteven.github.io/blog/old-computer-adventures/Headscale#%E6%9C%8D%E5%8A%A1%E7%AB%AF%E9%83%A8%E7%BD%B2" class="hash-link" aria-label="Direct link to 服务端部署" title="Direct link to 服务端部署">​</a></h2>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="headscale-配置">Headscale 配置<a href="https://ppsteven.github.io/blog/old-computer-adventures/Headscale#headscale-%E9%85%8D%E7%BD%AE" class="hash-link" aria-label="Direct link to Headscale 配置" title="Direct link to Headscale 配置">​</a></h3>
<div class="language-yaml codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-yaml codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token comment" style="color:#999988;font-style:italic"># docker network create [OPTIONS] NETWORK</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic"># docker network create --ipv6 caddy_net</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token key atrule" style="color:#00a4db">version</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'3.5'</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token key atrule" style="color:#00a4db">services</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token key atrule" style="color:#00a4db">headscale</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token key atrule" style="color:#00a4db">image</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> headscale/headscale</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain">latest</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token key atrule" style="color:#00a4db">container_name</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> headscale</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token key atrule" style="color:#00a4db">volumes</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain"> ./config</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain">/etc/headscale</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain"> ../../docker</span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain">data/headscale</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain">/var/lib/headscale</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token key atrule" style="color:#00a4db">cap_add</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain"> NET_ADMIN</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain"> NET_RAW</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain"> SYS_MODULE</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token key atrule" style="color:#00a4db">sysctls</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain"> net.ipv4.ip_forward=1</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain"> net.ipv6.conf.all.forwarding=1</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token comment" style="color:#999988;font-style:italic"># proxy by caddy</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token comment" style="color:#999988;font-style:italic"># ports:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token comment" style="color:#999988;font-style:italic">#   - 3050:8080</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token key atrule" style="color:#00a4db">networks</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain"> caddy_net</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token key atrule" style="color:#00a4db">command</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">[</span><span class="token string" style="color:#e3116c">"headscale"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"serve"</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token key atrule" style="color:#00a4db">restart</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> unless</span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain">stopped</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token key atrule" style="color:#00a4db">logging</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token key atrule" style="color:#00a4db">driver</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> json</span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain">file</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token key atrule" style="color:#00a4db">options</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token key atrule" style="color:#00a4db">max-size</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"50m"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token key atrule" style="color:#00a4db">headscale-ui</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token key atrule" style="color:#00a4db">image</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> ghcr.io/gurucomputing/headscale</span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain">ui</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain">latest</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token key atrule" style="color:#00a4db">container_name</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> headscale</span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain">ui</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token comment" style="color:#999988;font-style:italic"># proxy by caddy</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token comment" style="color:#999988;font-style:italic"># ports:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token comment" style="color:#999988;font-style:italic">#   - 3100:80</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token key atrule" style="color:#00a4db">networks</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain"> caddy_net</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token key atrule" style="color:#00a4db">restart</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> unless</span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain">stopped</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token key atrule" style="color:#00a4db">logging</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token key atrule" style="color:#00a4db">driver</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> json</span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain">file</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token key atrule" style="color:#00a4db">options</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token key atrule" style="color:#00a4db">max-size</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"50m"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token key atrule" style="color:#00a4db">networks</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token key atrule" style="color:#00a4db">caddy_net</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token key atrule" style="color:#00a4db">name</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> caddy_net</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token key atrule" style="color:#00a4db">external</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token boolean important" style="color:#36acaa">true</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>一些注意事项：</p>
<ul>
<li>网上给出了好几种部署方式，一般分为容器化部署和非容器化部署。需要注意的是如果是使用容器化部署，需要将</li>
<li>为什么注释掉端口映射？建议刚开始部署服务的同学打开端口映射，这样方便在容器外调试。我关闭是因为想要通过Caddy来代理。（话说我也是从这个服务里了解Caddy的）。
<ul>
<li>Caddy 是Web服务器，是Nginx的替代品，配置上比Nginx简单很多。特点是自动帮助申请Https，省去了自己配置证书的麻烦。与之相类似的服务有<a href="https://github.com/NginxProxyManager/nginx-proxy-manager" target="_blank" rel="noopener noreferrer">NginxProxyManager</a>。</li>
<li>新建了一个容器网络 <code>caddy_net</code>，所有服务与<code>caddy_net</code>联通，这样就可以保证端口不暴露出去，所有的请求都经过Caddy。</li>
</ul>
</li>
<li>headscale-ui
headscale-ui 是一款开源的Headscale图形化配置页面，用以添加客户端设备。这里坑的地方在于headscale-ui是有跨域限制。举例Headscale部署在 abc.com上，Headscale-ui 必须部署在 abc.com/web 上，不然就会出现错误。</li>
</ul>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="config配置">Config配置<a href="https://ppsteven.github.io/blog/old-computer-adventures/Headscale#config%E9%85%8D%E7%BD%AE" class="hash-link" aria-label="Direct link to Config配置" title="Direct link to Config配置">​</a></h3>
<p>如下文件约定了Headscale的基础配置，容器中唯一需要注意的是，如果对外提供服务必须将 <code>127.0.0.1</code> 改为 <code>0.0.0.0</code> 这样保证了外部网络的请求能被处理。</p>
<div class="language-yaml codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-yaml codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token comment" style="color:#999988;font-style:italic"># reference: https://github.com/juanfont/headscale/raw/main/config-example.yaml</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">---</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic"># headscale will look for a configuration file named `config.yaml` (or `config.json`) in the following order:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic">#</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic"># - `/etc/headscale`</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic"># - `~/.headscale`</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic"># - current working directory</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic"># The url clients will connect to.</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic"># Typically this will be a domain like:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic">#</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic"># https://myheadscale.example.com:443</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic">#</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic"># 客户端真实请求的地址，反向代理后的地址</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic"># 公网IP，或是域名，是所有设备需要能访问到的地址。</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token key atrule" style="color:#00a4db">server_url</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> https</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain">//xxx.com/</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic"># Address to listen to / bind to on the server</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic">#</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic"># For local:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic"># listen_addr: 127.0.0.1:8080</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic"># For production:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic"># Listen to 0.0.0.0 so it's accessible outside the container</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token key atrule" style="color:#00a4db">listen_addr</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> 0.0.0.0</span><span class="token punctuation" style="color:#393A34">:</span><span class="token number" style="color:#36acaa">8080</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic"># Address to listen to /metrics, you may want</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic"># to keep this endpoint private to your internal</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic"># network</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic"># For local:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic"># metrics_listen_addr: 127.0.0.1:9090</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic"># set to 0.0.0</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic"># Listen to 0.0.0.0 so it's accessible outside the container</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token key atrule" style="color:#00a4db">metrics_listen_addr</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> 0.0.0.0</span><span class="token punctuation" style="color:#393A34">:</span><span class="token number" style="color:#36acaa">9090</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic"># Address to listen for gRPC.</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic"># gRPC is used for controlling a headscale server</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic"># remotely with the CLI</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic"># Note: Remote access _only_ works if you have</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic"># valid certificates.</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic">#</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic"># For production:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic"># grpc_listen_addr: 0.0.0.0:50443</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token key atrule" style="color:#00a4db">grpc_listen_addr</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> 127.0.0.1</span><span class="token punctuation" style="color:#393A34">:</span><span class="token number" style="color:#36acaa">50443</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic"># Allow the gRPC admin interface to run in INSECURE</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic"># mode. This is not recommended as the traffic will</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic"># be unencrypted. Only enable if you know what you</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic"># are doing.</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token key atrule" style="color:#00a4db">grpc_allow_insecure</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token boolean important" style="color:#36acaa">false</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic"># Private key used to encrypt the traffic between headscale</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic"># and Tailscale clients.</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic"># The private key file will be autogenerated if it's missing.</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic">#</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic"># For production:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic"># /var/lib/headscale/private.key</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic"># For test:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic"># ./private.key</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token key atrule" style="color:#00a4db">private_key_path</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> /var/lib/headscale/private.key</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic"># The Noise section includes specific configuration for the</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic"># TS2021 Noise protocol</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token key atrule" style="color:#00a4db">noise</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token comment" style="color:#999988;font-style:italic"># The Noise private key is used to encrypt the</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token comment" style="color:#999988;font-style:italic"># traffic between headscale and Tailscale clients when</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token comment" style="color:#999988;font-style:italic"># using the new Noise-based protocol. It must be different</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token comment" style="color:#999988;font-style:italic"># from the legacy private key.</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token comment" style="color:#999988;font-style:italic">#</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token comment" style="color:#999988;font-style:italic"># For production:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token comment" style="color:#999988;font-style:italic"># private_key_path: /var/lib/headscale/noise_private.key</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token comment" style="color:#999988;font-style:italic"># For test:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token comment" style="color:#999988;font-style:italic"># ./noise_private.key</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token key atrule" style="color:#00a4db">private_key_path</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> /var/lib/headscale/noise_private.key</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic"># List of IP prefixes to allocate tailaddresses from.</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic"># Each prefix consists of either an IPv4 or IPv6 address,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic"># and the associated prefix length, delimited by a slash.</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic"># While this looks like it can take arbitrary values, it</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic"># needs to be within IP ranges supported by the Tailscale</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic"># client.</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic"># IPv6: https://github.com/tailscale/tailscale/blob/22ebb25e833264f58d7c3f534a8b166894a89536/net/tsaddr/tsaddr.go#LL81C52-L81C71</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic"># IPv4: https://github.com/tailscale/tailscale/blob/22ebb25e833264f58d7c3f534a8b166894a89536/net/tsaddr/tsaddr.go#L33</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token key atrule" style="color:#00a4db">ip_prefixes</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain"> fd7a</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain">115c</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain">a1e0</span><span class="token punctuation" style="color:#393A34">:</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain">/48</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain"> 100.64.0.0/10</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic"># DERP is a relay system that Tailscale uses when a direct</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic"># connection cannot be established.</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic"># https://tailscale.com/blog/how-tailscale-works/#encrypted-tcp-relays-derp</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic">#</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic"># headscale needs a list of DERP servers that can be presented</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic"># to the clients.</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token key atrule" style="color:#00a4db">derp</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token key atrule" style="color:#00a4db">server</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token comment" style="color:#999988;font-style:italic"># If enabled, runs the embedded DERP server and merges it into the rest of the DERP config</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token comment" style="color:#999988;font-style:italic"># The Headscale server_url defined above MUST be using https, DERP requires TLS to be in place</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token key atrule" style="color:#00a4db">enabled</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token boolean important" style="color:#36acaa">false</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token comment" style="color:#999988;font-style:italic"># Region ID to use for the embedded DERP server.</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token comment" style="color:#999988;font-style:italic"># The local DERP prevails if the region ID collides with other region ID coming from</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token comment" style="color:#999988;font-style:italic"># the regular DERP config.</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token key atrule" style="color:#00a4db">region_id</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">999</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token comment" style="color:#999988;font-style:italic"># Region code and name are displayed in the Tailscale UI to identify a DERP region</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token key atrule" style="color:#00a4db">region_code</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"headscale"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token key atrule" style="color:#00a4db">region_name</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"Headscale Embedded DERP"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token comment" style="color:#999988;font-style:italic"># Listens over UDP at the configured address for STUN connections - to help with NAT traversal.</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token comment" style="color:#999988;font-style:italic"># When the embedded DERP server is enabled stun_listen_addr MUST be defined.</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token comment" style="color:#999988;font-style:italic">#</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token comment" style="color:#999988;font-style:italic"># For more details on how this works, check this great article: https://tailscale.com/blog/how-tailscale-works/</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token key atrule" style="color:#00a4db">stun_listen_addr</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"0.0.0.0:3478"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token comment" style="color:#999988;font-style:italic"># List of externally available DERP maps encoded in JSON</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token key atrule" style="color:#00a4db">urls</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain"> https</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain">//controlplane.tailscale.com/derpmap/default</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token comment" style="color:#999988;font-style:italic"># Locally available DERP map files encoded in YAML</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token comment" style="color:#999988;font-style:italic">#</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token comment" style="color:#999988;font-style:italic"># This option is mostly interesting for people hosting</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token comment" style="color:#999988;font-style:italic"># their own DERP servers:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token comment" style="color:#999988;font-style:italic"># https://tailscale.com/kb/1118/custom-derp-servers/</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token comment" style="color:#999988;font-style:italic">#</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token comment" style="color:#999988;font-style:italic"># paths:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token comment" style="color:#999988;font-style:italic">#   - /etc/headscale/derp-example.yaml</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token key atrule" style="color:#00a4db">paths</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">[</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token comment" style="color:#999988;font-style:italic"># If enabled, a worker will be set up to periodically</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token comment" style="color:#999988;font-style:italic"># refresh the given sources and update the derpmap</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token comment" style="color:#999988;font-style:italic"># will be set up.</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token key atrule" style="color:#00a4db">auto_update_enabled</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token boolean important" style="color:#36acaa">true</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token comment" style="color:#999988;font-style:italic"># How often should we check for DERP updates?</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token key atrule" style="color:#00a4db">update_frequency</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> 24h</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic"># Disables the automatic check for headscale updates on startup</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token key atrule" style="color:#00a4db">disable_check_updates</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token boolean important" style="color:#36acaa">false</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic"># Time before an inactive ephemeral node is deleted?</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token key atrule" style="color:#00a4db">ephemeral_node_inactivity_timeout</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> 30m</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic"># Period to check for node updates within the tailnet. A value too low will severely affect</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic"># CPU consumption of Headscale. A value too high (over 60s) will cause problems</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic"># for the nodes, as they won't get updates or keep alive messages frequently enough.</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic"># In case of doubts, do not touch the default 10s.</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token key atrule" style="color:#00a4db">node_update_check_interval</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> 10s</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic"># SQLite config</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token key atrule" style="color:#00a4db">db_type</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> sqlite3</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic"># For production:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic"># db_path: /var/lib/headscale/db.sqlite</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token key atrule" style="color:#00a4db">db_path</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> ./db.sqlite</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic"># # Postgres config</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic"># If using a Unix socket to connect to Postgres, set the socket path in the 'host' field and leave 'port' blank.</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic"># db_type: postgres</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic"># db_host: localhost</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic"># db_port: 5432</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic"># db_name: headscale</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic"># db_user: foo</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic"># db_pass: bar</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic"># If other 'sslmode' is required instead of 'require(true)' and 'disabled(false)', set the 'sslmode' you need</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic"># in the 'db_ssl' field. Refers to https://www.postgresql.org/docs/current/libpq-ssl.html Table 34.1.</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic"># db_ssl: false</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic">### TLS configuration</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic">#</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic">## Let's encrypt / ACME</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic">#</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic"># headscale supports automatically requesting and setting up</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic"># TLS for a domain with Let's Encrypt.</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic">#</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic"># URL to ACME directory</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token key atrule" style="color:#00a4db">acme_url</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> https</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain">//acme</span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain">v02.api.letsencrypt.org/directory</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic"># Email to register with ACME provider</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token key atrule" style="color:#00a4db">acme_email</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">""</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic"># Domain name to request a TLS certificate for:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token key atrule" style="color:#00a4db">tls_letsencrypt_hostname</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">""</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic"># Path to store certificates and metadata needed by</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic"># letsencrypt</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic"># For production:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic"># tls_letsencrypt_cache_dir: /var/lib/headscale/cache</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic"># For test:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic"># ./cache</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token key atrule" style="color:#00a4db">tls_letsencrypt_cache_dir</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> /var/lib/headscale/cache</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic"># Type of ACME challenge to use, currently supported types:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic"># HTTP-01 or TLS-ALPN-01</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic"># See [docs/tls.md](docs/tls.md) for more information</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token key atrule" style="color:#00a4db">tls_letsencrypt_challenge_type</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> HTTP</span><span class="token punctuation" style="color:#393A34">-</span><span class="token number" style="color:#36acaa">01</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic"># When HTTP-01 challenge is chosen, letsencrypt must set up a</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic"># verification endpoint, and it will be listening on:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic"># :http = port 80</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token key atrule" style="color:#00a4db">tls_letsencrypt_listen</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">":http"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic">## Use already defined certificates:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token key atrule" style="color:#00a4db">tls_cert_path</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">""</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token key atrule" style="color:#00a4db">tls_key_path</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">""</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token key atrule" style="color:#00a4db">log</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token comment" style="color:#999988;font-style:italic"># Output formatting for logs: text or json</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token key atrule" style="color:#00a4db">format</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> text</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token key atrule" style="color:#00a4db">level</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> info</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic"># Path to a file containg ACL policies.</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic"># ACLs can be defined as YAML or HUJSON.</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic"># https://tailscale.com/kb/1018/acls/</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token key atrule" style="color:#00a4db">acl_policy_path</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">""</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic">## DNS</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic">#</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic"># headscale supports Tailscale's DNS configuration and MagicDNS.</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic"># Please have a look to their KB to better understand the concepts:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic">#</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic"># - https://tailscale.com/kb/1054/dns/</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic"># - https://tailscale.com/kb/1081/magicdns/</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic"># - https://tailscale.com/blog/2021-09-private-dns-with-magicdns/</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic">#</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token key atrule" style="color:#00a4db">dns_config</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token comment" style="color:#999988;font-style:italic"># Whether to prefer using Headscale provided DNS or use local.</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token key atrule" style="color:#00a4db">override_local_dns</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token boolean important" style="color:#36acaa">true</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token comment" style="color:#999988;font-style:italic"># List of DNS servers to expose to clients.</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token key atrule" style="color:#00a4db">nameservers</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain"> 1.1.1.1</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token comment" style="color:#999988;font-style:italic"># NextDNS (see https://tailscale.com/kb/1218/nextdns/).</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token comment" style="color:#999988;font-style:italic"># "abc123" is example NextDNS ID, replace with yours.</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token comment" style="color:#999988;font-style:italic">#</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token comment" style="color:#999988;font-style:italic"># With metadata sharing:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token comment" style="color:#999988;font-style:italic"># nameservers:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token comment" style="color:#999988;font-style:italic">#   - https://dns.nextdns.io/abc123</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token comment" style="color:#999988;font-style:italic">#</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token comment" style="color:#999988;font-style:italic"># Without metadata sharing:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token comment" style="color:#999988;font-style:italic"># nameservers:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token comment" style="color:#999988;font-style:italic">#   - 2a07:a8c0::ab:c123</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token comment" style="color:#999988;font-style:italic">#   - 2a07:a8c1::ab:c123</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token comment" style="color:#999988;font-style:italic"># Split DNS (see https://tailscale.com/kb/1054/dns/),</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token comment" style="color:#999988;font-style:italic"># list of search domains and the DNS to query for each one.</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token comment" style="color:#999988;font-style:italic">#</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token comment" style="color:#999988;font-style:italic"># restricted_nameservers:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token comment" style="color:#999988;font-style:italic">#   foo.bar.com:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token comment" style="color:#999988;font-style:italic">#     - 1.1.1.1</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token comment" style="color:#999988;font-style:italic">#   darp.headscale.net:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token comment" style="color:#999988;font-style:italic">#     - 1.1.1.1</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token comment" style="color:#999988;font-style:italic">#     - 8.8.8.8</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token comment" style="color:#999988;font-style:italic"># Search domains to inject.</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token key atrule" style="color:#00a4db">domains</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">[</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token comment" style="color:#999988;font-style:italic"># Extra DNS records</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token comment" style="color:#999988;font-style:italic"># so far only A-records are supported (on the tailscale side)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token comment" style="color:#999988;font-style:italic"># See https://github.com/juanfont/headscale/blob/main/docs/dns-records.md#Limitations</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token comment" style="color:#999988;font-style:italic"># extra_records:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token comment" style="color:#999988;font-style:italic">#   - name: "grafana.myvpn.example.com"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token comment" style="color:#999988;font-style:italic">#     type: "A"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token comment" style="color:#999988;font-style:italic">#     value: "100.64.0.3"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token comment" style="color:#999988;font-style:italic">#</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token comment" style="color:#999988;font-style:italic">#   # you can also put it in one line</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token comment" style="color:#999988;font-style:italic">#   - { name: "prometheus.myvpn.example.com", type: "A", value: "100.64.0.3" }</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token comment" style="color:#999988;font-style:italic"># Whether to use [MagicDNS](https://tailscale.com/kb/1081/magicdns/).</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token comment" style="color:#999988;font-style:italic"># Only works if there is at least a nameserver defined.</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token comment" style="color:#999988;font-style:italic"># 但是Tailscale有一个很坏的缺点，就是它不能自定义节点的IP，控制器给分配什么就只能是什么</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token comment" style="color:#999988;font-style:italic"># 所以你肯定会需要Magic DNS来帮你辨识节点的！</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token key atrule" style="color:#00a4db">magic_dns</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token boolean important" style="color:#36acaa">true</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token comment" style="color:#999988;font-style:italic"># Defines the base domain to create the hostnames for MagicDNS.</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token comment" style="color:#999988;font-style:italic"># `base_domain` must be a FQDNs, without the trailing dot.</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token comment" style="color:#999988;font-style:italic"># The FQDN of the hosts will be</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token comment" style="color:#999988;font-style:italic"># `hostname.user.base_domain` (e.g., _myhost.myuser.example.com_).</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token comment" style="color:#999988;font-style:italic"># 显示在Magic DNS里的设备域名，随便写写</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token key atrule" style="color:#00a4db">base_domain</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> example.com</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic"># Unix socket used for the CLI to connect without authentication</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic"># Note: for production you will want to set this to something like:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic"># For production</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic"># unix_socket: /var/run/headscale.sock</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic"># For test</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic"># unix_socket: ./headscale.sock</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token key atrule" style="color:#00a4db">unix_socket</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> /var/run/headscale.sock</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token key atrule" style="color:#00a4db">unix_socket_permission</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"0770"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic">#</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic"># headscale supports experimental OpenID connect support,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic"># it is still being tested and might have some bugs, please</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic"># help us test it.</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic"># OpenID Connect</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic"># oidc:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic">#   only_start_if_oidc_is_available: true</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic">#   issuer: "https://your-oidc.issuer.com/path"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic">#   client_id: "your-oidc-client-id"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic">#   client_secret: "your-oidc-client-secret"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic">#   # Alternatively, set `client_secret_path` to read the secret from the file.</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic">#   # It resolves environment variables, making integration to systemd's</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic">#   # `LoadCredential` straightforward:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic">#   client_secret_path: "${CREDENTIALS_DIRECTORY}/oidc_client_secret"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic">#   # client_secret and client_secret_path are mutually exclusive.</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic">#</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic">#   # The amount of time from a node is authenticated with OpenID until it</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic">#   # expires and needs to reauthenticate.</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic">#   # Setting the value to "0" will mean no expiry.</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic">#   expiry: 180d</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic">#</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic">#   # Use the expiry from the token received from OpenID when the user logged</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic">#   # in, this will typically lead to frequent need to reauthenticate and should</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic">#   # only been enabled if you know what you are doing.</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic">#   # Note: enabling this will cause `oidc.expiry` to be ignored.</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic">#   use_expiry_from_token: false</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic">#</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic">#   # Customize the scopes used in the OIDC flow, defaults to "openid", "profile" and "email" and add custom query</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic">#   # parameters to the Authorize Endpoint request. Scopes default to "openid", "profile" and "email".</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic">#</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic">#   scope: ["openid", "profile", "email", "custom"]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic">#   extra_params:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic">#     domain_hint: example.com</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic">#</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic">#   # List allowed principal domains and/or users. If an authenticated user's domain is not in this list, the</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic">#   # authentication request will be rejected.</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic">#</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic">#   allowed_domains:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic">#     - example.com</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic">#   # Note: Groups from keycloak have a leading '/'</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic">#   allowed_groups:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic">#     - /headscale</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic">#   allowed_users:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic">#     - alice@example.com</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic">#</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic">#   # If `strip_email_domain` is set to `true`, the domain part of the username email address will be removed.</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic">#   # This will transform `first-name.last-name@example.com` to the user `first-name.last-name`</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic">#   # If `strip_email_domain` is set to `false` the domain part will NOT be removed resulting to the following</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic">#   user: `first-name.last-name.example.com`</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic">#</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic">#   strip_email_domain: true</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic"># Logtail configuration</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic"># Logtail is Tailscales logging and auditing infrastructure, it allows the control panel</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic"># to instruct tailscale nodes to log their activity to a remote server.</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token key atrule" style="color:#00a4db">logtail</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token comment" style="color:#999988;font-style:italic"># Enable logtail for this headscales clients.</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token comment" style="color:#999988;font-style:italic"># As there is currently no support for overriding the log server in headscale, this is</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token comment" style="color:#999988;font-style:italic"># disabled by default. Enabling this will make your clients send logs to Tailscale Inc.</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token key atrule" style="color:#00a4db">enabled</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token boolean important" style="color:#36acaa">false</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic"># Enabling this option makes devices prefer a random port for WireGuard traffic over the</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic"># default static port 41641. This option is intended as a workaround for some buggy</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic"># firewall devices. See https://tailscale.com/kb/1181/firewalls/ for more information.</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token key atrule" style="color:#00a4db">randomize_client_port</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token boolean important" style="color:#36acaa">false</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="caddy部署">Caddy部署<a href="https://ppsteven.github.io/blog/old-computer-adventures/Headscale#caddy%E9%83%A8%E7%BD%B2" class="hash-link" aria-label="Direct link to Caddy部署" title="Direct link to Caddy部署">​</a></h3>
<div class="language-yaml codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-yaml codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token comment" style="color:#999988;font-style:italic"># docker network create [OPTIONS] NETWORK</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic"># docker network create --ipv6 caddy_net</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token key atrule" style="color:#00a4db">version</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'3.5'</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token key atrule" style="color:#00a4db">services</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token key atrule" style="color:#00a4db">caddy</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token comment" style="color:#999988;font-style:italic"># build image to add new module</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token comment" style="color:#999988;font-style:italic"># image: caddy:latest</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token key atrule" style="color:#00a4db">build</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token key atrule" style="color:#00a4db">context</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> .</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token key atrule" style="color:#00a4db">dockerfile</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> Dockerfile</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token key atrule" style="color:#00a4db">container_name</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> caddy</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token key atrule" style="color:#00a4db">networks</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain"> caddy_net</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token key atrule" style="color:#00a4db">volumes</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain"> ../../docker</span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain">data/caddy</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain">/data</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain"> ./config</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain">/config</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain"> /etc/localtime</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain">/etc/localtime</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain">ro </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token key atrule" style="color:#00a4db">ports</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain"> </span><span class="token datetime number" style="color:#36acaa">80:80</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain"> 443</span><span class="token punctuation" style="color:#393A34">:</span><span class="token number" style="color:#36acaa">443</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token key atrule" style="color:#00a4db">env_file</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain"> ./dnspod.env</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token key atrule" style="color:#00a4db">entrypoint</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> /usr/bin/caddy run </span><span class="token punctuation" style="color:#393A34">-</span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain">adapter caddyfile </span><span class="token punctuation" style="color:#393A34">-</span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain">config /config/Caddyfile</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token key atrule" style="color:#00a4db">networks</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token key atrule" style="color:#00a4db">caddy_net</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token key atrule" style="color:#00a4db">name</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> caddy_net</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token key atrule" style="color:#00a4db">external</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token boolean important" style="color:#36acaa">true</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>由于我需要接入 <code>泛域名</code>，所以这里自己build了一个镜像，如果没有这个需要，则直接拉取最新的 <code>caddy:latest</code>即可</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="caddy-dockerfile">Caddy Dockerfile<a href="https://ppsteven.github.io/blog/old-computer-adventures/Headscale#caddy-dockerfile" class="hash-link" aria-label="Direct link to Caddy Dockerfile" title="Direct link to Caddy Dockerfile">​</a></h3>
<p>Caddy 是用Go写的，若是需要添加新功能必须得重新编译。如下Dockerfile 添加了<code>cloudflare</code>模块，让Caddy支持<code>泛域名</code></p>
<div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain"># Reference: https://hub.docker.com/_/caddy #Adding custom Caddy modules</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">FROM caddy:2.6.4-builder AS builder</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"># package can be found in https://caddyserver.com/download</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">RUN xcaddy build \</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    --with github.com/caddy-dns/cloudflare</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">FROM caddy:latest</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">COPY --from=builder /usr/bin/caddy /usr/bin/caddy</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="caddy配置">Caddy配置<a href="https://ppsteven.github.io/blog/old-computer-adventures/Headscale#caddy%E9%85%8D%E7%BD%AE" class="hash-link" aria-label="Direct link to Caddy配置" title="Direct link to Caddy配置">​</a></h3>
<div class="language-yaml codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-yaml codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token comment" style="color:#999988;font-style:italic"># all supported dns: https://caddyserver.com/docs/modules/</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token important">*.abc.top</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    tls </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        dns cloudflare </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain">env.CF_API_TOKEN</span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic"># how to config wildcard-certificate https://caddyserver.com/docs/caddyfile/patterns#wildcard-certificates</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">headscale.abc.top </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token comment" style="color:#999988;font-style:italic"># headscale 服务地址</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    reverse_proxy http</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain">//headscale</span><span class="token punctuation" style="color:#393A34">:</span><span class="token number" style="color:#36acaa">8080</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token comment" style="color:#999988;font-style:italic"># headscale-ui 地址，必须与上面的域名一致，为了防止CORS错误</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    handle /web* </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        reverse_proxy http</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain">//headscale</span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain">ui</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="客户端">客户端<a href="https://ppsteven.github.io/blog/old-computer-adventures/Headscale#%E5%AE%A2%E6%88%B7%E7%AB%AF" class="hash-link" aria-label="Direct link to 客户端" title="Direct link to 客户端">​</a></h2>
<ul>
<li><a href="https://icloudnative.io/posts/how-to-set-up-or-migrate-headscale/#tailscale-%E5%AE%A2%E6%88%B7%E7%AB%AF%E6%8E%A5%E5%85%A5" target="_blank" rel="noopener noreferrer">Tailscale-客户端接入</a></li>
</ul>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="命令汇总">命令汇总<a href="https://ppsteven.github.io/blog/old-computer-adventures/Headscale#%E5%91%BD%E4%BB%A4%E6%B1%87%E6%80%BB" class="hash-link" aria-label="Direct link to 命令汇总" title="Direct link to 命令汇总">​</a></h3>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain"># 创建用户</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">docker-compose -f headscale.yaml exec headscale \</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  headscale users create ppsteven</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"># 注册节点（也可以通过图形化页面配置）</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">docker-compose -f headscale.yaml exec headscale \</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  headscale nodes register --user jacky --key nodekey:xxxxxx</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"># 查看节点连接状态（获取内网ip，是否在线等）</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">docker-compose -f headscale.yaml exec headscale \</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  headscale nodes list</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"># linux 命令行连接（用以获取设备的登录识别码 nodekey:xxxxx，拿这个码就可以去服务端连接了）</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">tailscale up --login-server=http://abc.com/ --accept-routes=true --accept-dns=false</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"># 查看你的IP地址与到各大公共DERP服务器之间的延迟</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">tailscale netcheck</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"># 查看各客户端的连接状态，是直连还是中继一目了然</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">tailscale status</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="参考">参考<a href="https://ppsteven.github.io/blog/old-computer-adventures/Headscale#%E5%8F%82%E8%80%83" class="hash-link" aria-label="Direct link to 参考" title="Direct link to 参考">​</a></h2>
<ul>
<li>
<p><a href="https://maxng.cc/posts/headscale-ez-tutorial/" target="_blank" rel="noopener noreferrer">搭建属于自己的Tailscale网络</a></p>
</li>
<li>
<p><a href="https://icloudnative.io/posts/how-to-set-up-or-migrate-headscale/#tailscale-%E5%AE%A2%E6%88%B7%E7%AB%AF%E6%8E%A5%E5%85%A5" target="_blank" rel="noopener noreferrer">Tailscale 基础教程：Headscale 的部署方法和使用教程</a></p>
</li>
<li>
<p><a href="https://mritd.com/2022/10/19/use-headscale-to-build-a-p2p-network/#3-3%E3%80%81%E8%AF%81%E4%B9%A6%E5%8F%8A%E5%8F%8D%E5%90%91%E4%BB%A3%E7%90%86" target="_blank" rel="noopener noreferrer">Headscale 搭建 P2P 内网穿透_</a></p>
</li>
<li>
<p><a href="https://github.com/juanfont/headscale/blob/main/docs/reverse-proxy.md#caddy" target="_blank" rel="noopener noreferrer">【官方】Headscale配置反向代理</a></p>
</li>
</ul>]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[0x3.家庭服务器折腾记|操作系统|Ubuntu]]></title>
            <link>https://ppsteven.github.io/blog/old-computer-adventures/ubuntu</link>
            <guid>https://ppsteven.github.io/blog/old-computer-adventures/ubuntu</guid>
            <pubDate>Mon, 08 Aug 2022 00:13:09 GMT</pubDate>
            <description><![CDATA[如上文所述，在Manjaro上遇到一些难以解决的问题后，我选择了一个兼具桌面管理环境与无图行的操作系统————Ubuntu]]></description>
            <content:encoded><![CDATA[<p>如上文所述，在Manjaro上遇到一些难以解决的问题后，我选择了一个兼具桌面管理环境与无图行的操作系统————<code>Ubuntu</code>
Ubuntu 是一款基于Debian的操作系统，它是一款经典受欢迎的操作系统，不过多介绍。</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="系统安装">系统安装<a href="https://ppsteven.github.io/blog/old-computer-adventures/ubuntu#%E7%B3%BB%E7%BB%9F%E5%AE%89%E8%A3%85" class="hash-link" aria-label="Direct link to 系统安装" title="Direct link to 系统安装">​</a></h2>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="1镜像下载">1.镜像下载<a href="https://ppsteven.github.io/blog/old-computer-adventures/ubuntu#1%E9%95%9C%E5%83%8F%E4%B8%8B%E8%BD%BD" class="hash-link" aria-label="Direct link to 1.镜像下载" title="Direct link to 1.镜像下载">​</a></h3>
<p>镜像下载：建议去<a href="https://www.ubuntu.org.cn/global" target="_blank" rel="noopener noreferrer">Ubuntu官网</a>下载，镜像选择上，可以选择经典的16.04LTS，我这次没有选择最新的版本，而是选择了20.04.4 LTS</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="2启动盘制作">2.启动盘制作<a href="https://ppsteven.github.io/blog/old-computer-adventures/ubuntu#2%E5%90%AF%E5%8A%A8%E7%9B%98%E5%88%B6%E4%BD%9C" class="hash-link" aria-label="Direct link to 2.启动盘制作" title="Direct link to 2.启动盘制作">​</a></h3>
<ul>
<li>
<p>UltralSO</p>
<p><a href="https://zhuanlan.zhihu.com/p/378668860" target="_blank" rel="noopener noreferrer">使用U盘制作Ubuntu系统启动盘</a></p>
</li>
<li>
<p>Rufus</p>
<p><a href="https://blog.csdn.net/qq_51491920/article/details/123668279" target="_blank" rel="noopener noreferrer">在U盘下安装ubuntu20.04，从U盘启动Linux系统</a></p>
</li>
</ul>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="3安装">3.安装<a href="https://ppsteven.github.io/blog/old-computer-adventures/ubuntu#3%E5%AE%89%E8%A3%85" class="hash-link" aria-label="Direct link to 3.安装" title="Direct link to 3.安装">​</a></h3>
<p>分区方案：</p>
<ul>
<li>
<p><a href="https://blog.csdn.net/qq_42751676/article/details/120850185" target="_blank" rel="noopener noreferrer">【个人笔记】Ubuntu分区方案</a></p>
<div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">/boot 主分区 512M</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">/swap 主分区 16G</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">/     主分区 133G     </span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
</li>
<li>
<p><a href="https://blog.csdn.net/qq_51491920/article/details/123668279" target="_blank" rel="noopener noreferrer">在U盘下安装ubuntu20.04，从U盘启动Linux系统</a></p>
<p><img decoding="async" loading="lazy" alt="分区方案" src="https://ppsteven.github.io/assets/images/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBALee0oOW_g-WQkeaalg==,size_20,color_FFFFFF,t_70,g_se,x_16-a34650b718252ff908eec3ffdf7f2832.jpeg" width="4032" height="3024" class="img_ev3q"></p>
</li>
</ul>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="其他">其他<a href="https://ppsteven.github.io/blog/old-computer-adventures/ubuntu#%E5%85%B6%E4%BB%96" class="hash-link" aria-label="Direct link to 其他" title="Direct link to 其他">​</a></h2>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="合盖不休眠">合盖不休眠<a href="https://ppsteven.github.io/blog/old-computer-adventures/ubuntu#%E5%90%88%E7%9B%96%E4%B8%8D%E4%BC%91%E7%9C%A0" class="hash-link" aria-label="Direct link to 合盖不休眠" title="Direct link to 合盖不休眠">​</a></h3>
<blockquote>
<p><a href="https://askubuntu.com/questions/972169/ubuntu-17-10-and-later-dont-suspend-when-lid-is-closed-just-lock-screen" target="_blank" rel="noopener noreferrer">Don't suspend when lid is closed, just lock screen</a></p>
</blockquote>
<div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">sudo apt-get install gnome-tweak-tool</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"># Launch Tweaks -&gt; Power(or General) -&gt; disable suspend on lid-close</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[0x2.家庭服务器折腾记|操作系统|Manjaro.md]]></title>
            <link>https://ppsteven.github.io/blog/old-computer-adventures/manjaro</link>
            <guid>https://ppsteven.github.io/blog/old-computer-adventures/manjaro</guid>
            <pubDate>Sun, 07 Aug 2022 22:45:12 GMT</pubDate>
            <description><![CDATA[家中闲置了一台电脑，准备用来当做服务器。一方面也是作为linux 学习练练手，二是可以运行一些爬虫小程序或者是网页服务。]]></description>
            <content:encoded><![CDATA[<p>家中闲置了一台电脑，准备用来当做服务器。一方面也是作为linux 学习练练手，二是可以运行一些爬虫小程序或者是网页服务。</p>
<p>这里我用的manjaro，这是目前比较流行的linux 发行版，最热门的linux桌面发行版之一。</p>
<p>我选择manjaro也是想作为替代windows 来用。manjaro拥有一个非常方便的软件仓库，利用pacman和yay等命令可以十分方便的安装软件。
Manjaro 是一款基于Arch Linux的操作系统，它是目前Linux众多发行版中对用户非常友好的操作系统，它拥有非常好看的桌面环境（KDE，GNOME），支持滚动发布，一条命令即可安装软件等总多优秀的特点。Manjaro可以让你体验到如Windows，Mac一样的使用体验。</p>
<p>更多的介绍可以参考：</p>
<p><a href="https://manjaro.org.cn/" target="_blank" rel="noopener noreferrer">Manjaro Linux 乐于简单</a></p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="系统安装">系统安装<a href="https://ppsteven.github.io/blog/old-computer-adventures/manjaro#%E7%B3%BB%E7%BB%9F%E5%AE%89%E8%A3%85" class="hash-link" aria-label="Direct link to 系统安装" title="Direct link to 系统安装">​</a></h2>
<ul>
<li><a href="https://segmentfault.com/a/1190000041023208" target="_blank" rel="noopener noreferrer">Manjaro Linux 入门使用教程</a></li>
<li><a href="https://zhuanlan.zhihu.com/p/376787855" target="_blank" rel="noopener noreferrer">2021【保姆级教程】Win+Manjaro双系统双硬盘安装</a></li>
</ul>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="1镜像下载">1.镜像下载<a href="https://ppsteven.github.io/blog/old-computer-adventures/manjaro#1%E9%95%9C%E5%83%8F%E4%B8%8B%E8%BD%BD" class="hash-link" aria-label="Direct link to 1.镜像下载" title="Direct link to 1.镜像下载">​</a></h3>
<p>镜像下载：建议去<a href="https://www.manjaro.org/download/" target="_blank" rel="noopener noreferrer">Manjaro官方网站</a>下载，目前官方的主题有Plasma(KDE)，Xfce和Gome。三种都用过，都差不多，感觉KDE最精美，Xfce最轻量，Gnome比较新潮。我现在用的是Gnome。</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="2启动盘制作">2.启动盘制作<a href="https://ppsteven.github.io/blog/old-computer-adventures/manjaro#2%E5%90%AF%E5%8A%A8%E7%9B%98%E5%88%B6%E4%BD%9C" class="hash-link" aria-label="Direct link to 2.启动盘制作" title="Direct link to 2.启动盘制作">​</a></h3>
<p>这里使用的是Rufus，操作非常简单。</p>
<p><img decoding="async" loading="lazy" alt="file" src="https://ppsteven.github.io/assets/images/1460000041023211-f4b48f0b4d293046ddeb2550413bc792.png" width="471" height="732" class="img_ev3q"></p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="3安装">3.安装<a href="https://ppsteven.github.io/blog/old-computer-adventures/manjaro#3%E5%AE%89%E8%A3%85" class="hash-link" aria-label="Direct link to 3.安装" title="Direct link to 3.安装">​</a></h3>
<p>可以参考：<a href="https://linuxacme.cn/99" target="_blank" rel="noopener noreferrer">Manjaro Linux安装教程(极致linux原创)</a></p>
<p>其给出的分区方案为：</p>








































<table><thead><tr><th>大小/分配</th><th>/根分区</th><th>/home分区</th><th>swap分区</th><th>EFI引导分区</th></tr></thead><tbody><tr><td>新分区&lt;80G</td><td>所有</td><td>无</td><td>2GB</td><td>300MB</td></tr><tr><td>新分区128G</td><td>60GB</td><td>60GB</td><td>4GB</td><td>1GB</td></tr><tr><td>新分区256G</td><td>80GB</td><td>160GB</td><td>8GB</td><td>1GB</td></tr><tr><td>新分区512G</td><td>150GB</td><td>340GB</td><td>16GB</td><td>1GB</td></tr></tbody></table>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="配置">配置<a href="https://ppsteven.github.io/blog/old-computer-adventures/manjaro#%E9%85%8D%E7%BD%AE" class="hash-link" aria-label="Direct link to 配置" title="Direct link to 配置">​</a></h2>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="1更换软件源">1.更换软件源<a href="https://ppsteven.github.io/blog/old-computer-adventures/manjaro#1%E6%9B%B4%E6%8D%A2%E8%BD%AF%E4%BB%B6%E6%BA%90" class="hash-link" aria-label="Direct link to 1.更换软件源" title="Direct link to 1.更换软件源">​</a></h3>
<div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">sudo pacman -Syy</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">sudo pacman-mirrors -i -c China -m rank  #选一个阿里源就行</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>增加中文社区的源</p>
<p>可以编辑<code>/etc/pacman.conf</code></p>
<div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain"># sudo vi /etc/pacman.conf</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">[archlinuxcn]</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">SigLevel = Optional TrustedOnly</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Server = https://mirrors.ustc.edu.cn/archlinuxcn/$arch</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>或直接使用命令行修改</p>
<div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">sudo sed -i '$a\[archlinuxcn]\nServer = https://mirrors.ustc.edu.cn/archlinuxcn/$arch'  /etc/pacman.conf</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>添加完了之后更新</p>
<div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">sudo pacman -Sy archlinuxcn-keyring</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="安装软件">安装软件<a href="https://ppsteven.github.io/blog/old-computer-adventures/manjaro#%E5%AE%89%E8%A3%85%E8%BD%AF%E4%BB%B6" class="hash-link" aria-label="Direct link to 安装软件" title="Direct link to 安装软件">​</a></h2>
<p>首先，第一步，先安装<code>AUR 包管理工具(yay)</code>，我们之后需要用到它来安装软件</p>
<p>软件安装命令如下：</p>
<div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">sudo pacman -S yay # Arch Linux AUR 包管理工具</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="软件列表">软件列表<a href="https://ppsteven.github.io/blog/old-computer-adventures/manjaro#%E8%BD%AF%E4%BB%B6%E5%88%97%E8%A1%A8" class="hash-link" aria-label="Direct link to 软件列表" title="Direct link to 软件列表">​</a></h3>
<div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain"># vim</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">sudo pacman -S vim</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"># chrome</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">sudo pacman -S google-chrome</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">yay -S google-chrome</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="软件管理">软件管理<a href="https://ppsteven.github.io/blog/old-computer-adventures/manjaro#%E8%BD%AF%E4%BB%B6%E7%AE%A1%E7%90%86" class="hash-link" aria-label="Direct link to 软件管理" title="Direct link to 软件管理">​</a></h2>
<div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">sudo pacman -S package_name # install</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">sudo pacman -R package_name # remove</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">sudo pacman -Rs package_name # 卸载软件＋不需要的依赖</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="其他命令">其他命令<a href="https://ppsteven.github.io/blog/old-computer-adventures/manjaro#%E5%85%B6%E4%BB%96%E5%91%BD%E4%BB%A4" class="hash-link" aria-label="Direct link to 其他命令" title="Direct link to 其他命令">​</a></h2>
<div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">screenfetch # 查看系统信息</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="缺点与不足">缺点与不足<a href="https://ppsteven.github.io/blog/old-computer-adventures/manjaro#%E7%BC%BA%E7%82%B9%E4%B8%8E%E4%B8%8D%E8%B6%B3" class="hash-link" aria-label="Direct link to 缺点与不足" title="Direct link to 缺点与不足">​</a></h2>
<p>Manjaro 陪伴了我一段时间，最终我放弃将其作为家用服务器的操作系统选择，原因是其作为一款桌面操作系统很不错，但是作为一款服务器操作系统稍有不足，很多软件并未对其适配，使得在安装时碰到了很多问题难以解决。</p>]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[0x1.家庭服务器折腾记|折腾思路]]></title>
            <link>https://ppsteven.github.io/blog/old-computer-adventures/idea</link>
            <guid>https://ppsteven.github.io/blog/old-computer-adventures/idea</guid>
            <pubDate>Sun, 07 Aug 2022 22:28:56 GMT</pubDate>
            <description><![CDATA[工作学习中，电脑设备不断的迭代升级，手上闲置了几台旧电脑，抱着"废物利用"的想法，把这些旧电脑改造一下，把限制的资源重新利用起来。]]></description>
            <content:encoded><![CDATA[<p>工作学习中，电脑设备不断的迭代升级，手上闲置了几台旧电脑，抱着"废物利用"的想法，把这些旧电脑改造一下，把限制的资源重新利用起来。</p>
<p>目前，我的想法是逐步的把电脑改造成集<strong>数据存储</strong>，<strong>web服务器</strong>，<strong>视频服务器</strong>一体的远程设备。</p>
<p>目前搭建的服务有：</p>













































<table><thead><tr><th>服务</th><th>类型</th><th>功能</th></tr></thead><tbody><tr><td>Alist</td><td>网盘</td><td>数据存储<br>WebDAV 电子书</td></tr><tr><td>博客</td><td>WEB服务</td><td>TODO...</td></tr><tr><td>上海发布定时爬虫</td><td>定时任务</td><td>景点人流量</td></tr><tr><td>rancher</td><td>K8S</td><td>容器管理</td></tr><tr><td>portainer</td><td>Docker</td><td>容器管理</td></tr><tr><td>crontab job</td><td></td><td>TODO...</td></tr><tr><td>JellyFin</td><td>影音</td><td>TODO...</td></tr></tbody></table>
<p>参考：</p>
<ul>
<li><a href="https://tvtv.fun/pc-to-nas/" target="_blank" rel="noopener noreferrer">一台电脑的 NAS 之旅</a></li>
</ul>]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[慢慢买比价爬虫(JS 逆向破解)]]></title>
            <link>https://ppsteven.github.io/blog/pages/cb409c/</link>
            <guid>https://ppsteven.github.io/blog/pages/cb409c/</guid>
            <pubDate>Thu, 14 Jan 2021 11:29:28 GMT</pubDate>
            <description><![CDATA[项目中涉及到对淘宝，京东商品历史价格的数据采集，直接爬虫是获取不到历史数据的。需要借助第三方比价平台——慢慢买。慢慢买是全网比价平台，主要是通过实习爬取淘宝，京东，天猫等电扇购物平台，向用户提供多平台的商品价格比较。同时，慢慢买还提供历史价格查询的功能。作为一个爬虫平台，慢慢买在反爬虫上也是花费了不少心思。]]></description>
            <content:encoded><![CDATA[<p>项目中涉及到对淘宝，京东商品历史价格的数据采集，直接爬虫是获取不到历史数据的。需要借助第三方比价平台——<a href="http://www.manmanbuy.com/" target="_blank" rel="noopener noreferrer">慢慢买</a>。慢慢买是全网比价平台，主要是通过实习爬取淘宝，京东，天猫等电扇购物平台，向用户提供多平台的商品价格比较。同时，慢慢买还提供历史价格查询的功能。作为一个爬虫平台，慢慢买在反爬虫上也是花费了不少心思。</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="http抓包分析">Http抓包分析<a href="https://ppsteven.github.io/blog/pages/cb409c/#http%E6%8A%93%E5%8C%85%E5%88%86%E6%9E%90" class="hash-link" aria-label="Direct link to Http抓包分析" title="Direct link to Http抓包分析">​</a></h2>
<p>首先，进入慢慢买历史价格查询平台，复制一个淘宝京东的链接进行查询。</p>
<p><img decoding="async" loading="lazy" alt="image-20210114113250055" src="https://ppsteven.github.io/assets/images/image-20210114113250055-49af14d2233675a4698759fcde573fe8.png" width="2040" height="570" class="img_ev3q"></p>
<p>通过 Chrome 自带的开发者工具-&gt;Network 进行http抓包分析</p>
<ol>
<li>首先找到价格数据，价格数据中一定有238</li>
<li>搜索所有请求到的资源，查看哪些有238</li>
<li>找到对应的请求</li>
</ol>
<p><img decoding="async" loading="lazy" src="https://ppsteven.github.io/assets/images/image-20210114131939821-02e73183613abb985f26b84dcfdc575d.png" width="2766" height="1536" class="img_ev3q"></p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="请求分析">请求分析<a href="https://ppsteven.github.io/blog/pages/cb409c/#%E8%AF%B7%E6%B1%82%E5%88%86%E6%9E%90" class="hash-link" aria-label="Direct link to 请求分析" title="Direct link to 请求分析">​</a></h2>
<p>通过查看 <code>Requests Headers</code> 的头部信息，发现这是一个POST请求，只要把参数填入 <code>From data</code>即可。</p>
<p><img decoding="async" loading="lazy" src="https://ppsteven.github.io/assets/images/image-20210114132139111-738f2d363c948cdf63b21dddd4268288.png" width="1376" height="690" class="img_ev3q"></p>
<ul>
<li>
<p>请求地址：<a href="http://tool.manmanbuy.com/api.ashx" target="_blank" rel="noopener noreferrer">http://tool.manmanbuy.com/api.ashx</a></p>
</li>
<li>
<p>请求方式：POST</p>
</li>
<li>
<p>请求数据：</p>






























<table><thead><tr><th>Key</th><th>Value</th><th>含义</th></tr></thead><tbody><tr><td>method</td><td>getHistoryTrend</td><td>固定不变</td></tr><tr><td>key</td><td><a href="https://item.jd.com/6290488.html" target="_blank" rel="noopener noreferrer">https://item.jd.com/6290488.html</a></td><td>原商品链接（变）</td></tr><tr><td>t</td><td>1610601399358</td><td>时间戳（变）</td></tr><tr><td>token</td><td>DAF418E3848F4B4BB1C8CA6F23AD331D</td><td>token （变）</td></tr></tbody></table>
</li>
<li>
<p>请求报文分析</p>
<div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">Accept: */*  # 接收所有类型的数据</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Accept-Encoding: gzip, deflate # 接收编码方式</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Accept-Language: zh-CN,zh;q=0.9,en-US;q=0.8,en;q=0.7 # 接收语言</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Authorization: BasicAuth D8DD2812A942776AF9ED750C2D6D7539BF204F7C0B0FB414E6CEBD28536A99D07304FA7BFFBB2BDD6B9B46823A9D19FA751316693F17DD79FF26D70E2EBA1BF31918AB09FC305FCFB80352187AE32269B8D8DB1977F84F1E # Basic 身份验证</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Content-Length: 122 # 内容长度</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Content-Type: application/x-www-form-urlencoded; charset=UTF-8 # 报文主体的类型：通过 x-www-form-urlencoded 提交主体</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Cookie: _ga=GA1.2.614520810.1610543725; _gid=GA1.2.187844233.1610543725; Hm_lvt_85f48cee3e51cd48eaba80781b243db3=1608561378,1608561379,1610539536,1610594558; ASP.NET_SessionId=oyiwn2k5xvhc2d5s3owcy4ma; radius=115.174.219.229; uudid=cms4cfa3810-b108-a48c-1a2f-eb4c72b23256; Hm_lvt_01a310dc95b71311522403c3237671ae=1608561378,1610539536,1610595007,1610595218; Hm_lpvt_85f48cee3e51cd48eaba80781b243db3=1610601329; Hm_lpvt_01a310dc95b71311522403c3237671ae=1610601329 # Cookie </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Host: tool.manmanbuy.com # 主机地址</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Origin: http://tool.manmanbuy.com # Origin</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Proxy-Connection: keep-alive # 持续连接</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Referer: http://tool.manmanbuy.com/historyLowest.aspx?url=https%3A//item.jd.com/6290488.html # 是从哪个地址请求来的</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 11_1_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.141 Safari/537.36 # User-Agent</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">X-Requested-With: XMLHttpRequest</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>其中比较重要的是 Cookie 和 Authorization。</p>
</li>
</ul>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="寻找变动的字段">寻找变动的字段<a href="https://ppsteven.github.io/blog/pages/cb409c/#%E5%AF%BB%E6%89%BE%E5%8F%98%E5%8A%A8%E7%9A%84%E5%AD%97%E6%AE%B5" class="hash-link" aria-label="Direct link to 寻找变动的字段" title="Direct link to 寻找变动的字段">​</a></h2>
<p>通过多次请求，比较每次请求时候变动的请求头，这样才能知道哪些字段要去重点研究攻克。可以通过 代码比较工具去分析每次变动的字段。</p>
<p>这里比较两个部分</p>
<ul>
<li>请求头提交的数据</li>
<li>请求头报文</li>
</ul>
<blockquote>
<p>工具：<a href="https://www.matools.com/compare" target="_blank" rel="noopener noreferrer">在线代码对比/归并</a></p>
</blockquote>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="请求头提交的数据-form-data">请求头提交的数据 (Form data)<a href="https://ppsteven.github.io/blog/pages/cb409c/#%E8%AF%B7%E6%B1%82%E5%A4%B4%E6%8F%90%E4%BA%A4%E7%9A%84%E6%95%B0%E6%8D%AE-form-data" class="hash-link" aria-label="Direct link to 请求头提交的数据 (Form data)" title="Direct link to 请求头提交的数据 (Form data)">​</a></h3>
<p>method 是固定的，key，t 分别是商品地址和时间戳。</p>
<p><strong>难点是 token 字段的生成方式</strong></p>
<p><img decoding="async" loading="lazy" src="https://ppsteven.github.io/assets/images/image-20210114134237228-4fd604484c3913e930388d46ccb60e41.png" width="1716" height="172" class="img_ev3q"></p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="请求头报文request-header">请求头报文(Request Header)<a href="https://ppsteven.github.io/blog/pages/cb409c/#%E8%AF%B7%E6%B1%82%E5%A4%B4%E6%8A%A5%E6%96%87request-header" class="hash-link" aria-label="Direct link to 请求头报文(Request Header)" title="Direct link to �请求头报文(Request Header)">​</a></h3>
<p><img decoding="async" loading="lazy" src="https://ppsteven.github.io/assets/images/image-20210114134630360-3ae322051c5f250ece5bef9d4390cc11.png" width="1750" height="498" class="img_ev3q"></p>
<p>请求头中 Authorization 代表的是 Web端 对访问用户身份的认证，这个知识点，在 <a href="https://ppsteven.github.io/blog/pages/cb409c/pages/8e336c">08.确认访问用户身份的认证</a> 已经写过，Basic Auth 属于一种基本的认证方式，本质上就是通过 Base64 对账户密码进行编码后传输，编码可以通过Base64 反编码，所以本质上就是一种明文的传输方式。所以，我们可以尝试反编译一下。</p>
<h4 class="anchor anchorWithStickyNavbar_LWe7" id="反编译-authorization">反编译 Authorization<a href="https://ppsteven.github.io/blog/pages/cb409c/#%E5%8F%8D%E7%BC%96%E8%AF%91-authorization" class="hash-link" aria-label="Direct link to 反编译 Authorization" title="Direct link to 反编译 Authorization">​</a></h4>
<h4 class="anchor anchorWithStickyNavbar_LWe7" id="1-python-实现-base64-编码解码">1. Python 实现 Base64 编码/解码<a href="https://ppsteven.github.io/blog/pages/cb409c/#1-python-%E5%AE%9E%E7%8E%B0-base64-%E7%BC%96%E7%A0%81%E8%A7%A3%E7%A0%81" class="hash-link" aria-label="Direct link to 1. Python 实现 Base64 编码/解码" title="Direct link to 1. Python 实现 Base64 编码/解码">​</a></h4>
<div class="language-python codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-python codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#00009f">import</span><span class="token plain"> base64</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">def</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">get_basic_auth_str</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">username</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> password</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  temp_str </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> username </span><span class="token operator" style="color:#393A34">+</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">':'</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">+</span><span class="token plain"> password</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  bytesString </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> temp_str</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">encode</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">encoding</span><span class="token operator" style="color:#393A34">=</span><span class="token string" style="color:#e3116c">"utf-8"</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain">  </span><span class="token comment" style="color:#999988;font-style:italic"># 转成bytes string</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  encodestr </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> base64</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">b64encode</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">bytesString</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain">  </span><span class="token comment" style="color:#999988;font-style:italic"># base64 编码</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'Basic '</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">+</span><span class="token plain"> encodestr</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">decode</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">def</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">decode_basic_auth_str</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">auth_str</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    bytesString </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> auth_str</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">encode</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"utf-8"</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    decode_str </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> base64</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">b64decode</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">bytesString</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"> decode_str</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">decode</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"utf-8"</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">if</span><span class="token plain"> __name__ </span><span class="token operator" style="color:#393A34">==</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'__main__'</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    auth_str </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> get_basic_auth_str</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">'Tom'</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'test'</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token comment" style="color:#999988;font-style:italic"># Basic VG9tOnRlc3Q=</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    decode_str </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> decode_basic_auth_str</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">'VG9tOnRlc3Q='</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token comment" style="color:#999988;font-style:italic"># Tom:test</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>尝试通过 Base64 去反编译加密后的字符串，发现解析错误。</p>
<div class="language-python codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-python codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token operator" style="color:#393A34">&gt;&gt;</span><span class="token operator" style="color:#393A34">&gt;</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">from</span><span class="token plain"> util </span><span class="token keyword" style="color:#00009f">import</span><span class="token plain"> decode_basic_auth_str                                                                          </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token operator" style="color:#393A34">&gt;&gt;</span><span class="token operator" style="color:#393A34">&gt;</span><span class="token plain"> decode_basic_auth_str</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">'D8DD2812A942776AF9ED750C2D6D7539BF204F7C0B0FB414E6CEBD28536A99D07304FA7BFFBB2BDD6B9B46823A9D19FA751316693F17DD79FF26D70E2EBA1BF31918AB09FC305FCFF5CC0120F0A255CA5D37BDC0EBFFB3CD'</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain">   </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token operator" style="color:#393A34">&gt;&gt;</span><span class="token operator" style="color:#393A34">&gt;</span><span class="token plain"> UnicodeDecodeError</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'utf-8'</span><span class="token plain"> codec can't decode byte </span><span class="token number" style="color:#36acaa">0xc0</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">in</span><span class="token plain"> position </span><span class="token number" style="color:#36acaa">1</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> invalid start byte</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<h4 class="anchor anchorWithStickyNavbar_LWe7" id="2-在线base编码解码网站">2. 在线Base编码/解码网站<a href="https://ppsteven.github.io/blog/pages/cb409c/#2-%E5%9C%A8%E7%BA%BFbase%E7%BC%96%E7%A0%81%E8%A7%A3%E7%A0%81%E7%BD%91%E7%AB%99" class="hash-link" aria-label="Direct link to 2. 在线Base编码/解码网站" title="Direct link to 2. 在线Base编码/解码网站">​</a></h4>
<p>通过在线编码解码网站也是发现全部都是乱码</p>
<p><img decoding="async" loading="lazy" src="https://ppsteven.github.io/assets/images/image-20210114142147404-02f5737739f61aadd668c62553bcfcae.png" width="1818" height="1090" class="img_ev3q"></p>
<h4 class="anchor anchorWithStickyNavbar_LWe7" id="结论">结论<a href="https://ppsteven.github.io/blog/pages/cb409c/#%E7%BB%93%E8%AE%BA" class="hash-link" aria-label="Direct link to 结论" title="Direct link to 结论">​</a></h4>
<p>经过代码比较后，我们发现有两个字段无法解决</p>
<ul>
<li>Authorization 不是通过传统的 Basic64 加密的</li>
<li>token</li>
</ul>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="js代码分析">JS代码分析<a href="https://ppsteven.github.io/blog/pages/cb409c/#js%E4%BB%A3%E7%A0%81%E5%88%86%E6%9E%90" class="hash-link" aria-label="Direct link to JS代码分析" title="Direct link to JS代码分析">​</a></h2>
<p>知道了目标，就可以查看具体发送请求的地方，以及 Authorization 和 token 生成的逻辑。</p>
<p>首先，查看 <code>/api.aspx</code> 是哪里发送出来的</p>
<p><img decoding="async" loading="lazy" src="https://ppsteven.github.io/assets/images/image-20210114145805844-482d57c5e9f014263c9e9c8208ebcfc8.png" width="2238" height="562" class="img_ev3q"></p>
<p>然后，可以通过打上断点，查找发送数据的代码。但是这里并不是拼接数据的地方。</p>
<p><img decoding="async" loading="lazy" src="https://ppsteven.github.io/assets/images/image-20210114150248508-845cd97f266285a7ac9f8bbe403093c2.png" width="2880" height="1426" class="img_ev3q"></p>
<p>在 Call Stack 调用栈中，不断的向上排查，最终找到拼接数据的地方，可以看出 ajaxpost 这里是真正拼接数据的地方。</p>
<p><img decoding="async" loading="lazy" src="https://ppsteven.github.io/assets/images/image-20210114150718545-bd25679f8c524345c4cbba3855182e9a.png" width="2234" height="1366" class="img_ev3q"></p>
<p>在调试中，找到了 <code>form data</code> 的数据</p>
<p><img decoding="async" loading="lazy" src="https://ppsteven.github.io/assets/images/image-20210114151327739-172fe3f6933e0debbf8e77c2266901e3.png" width="2314" height="1552" class="img_ev3q"></p>
<p>找到了数据后，才发现真正难的地方，这里的 JavaScript 代码都是经过加密的，由于不知道函数和变量的含义，去破解 token 和 Authorization 字段无从下手。</p>
<p>如这段代码，变量名都是通过 <code>_0x365d()</code> 函数，加密过了，只要我们破解这个函数即可还原。</p>
<div class="language-javascript codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-javascript codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token string-property property" style="color:#36acaa">'success'</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">function</span><span class="token punctuation" style="color:#393A34">(</span><span class="token parameter">_0x4ce40a</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">var</span><span class="token plain"> _0x1c6814 </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token string-property property" style="color:#36acaa">'LrBHV'</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">_0x365d</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">'0x2e'</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'OG@1'</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token string-property property" style="color:#36acaa">'nyVkE'</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">_0x365d</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">'0x2f'</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'[0Fm'</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token string-property property" style="color:#36acaa">'qsLdn'</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">function</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">_0x23683a</span><span class="token punctuation" style="color:#393A34">(</span><span class="token parameter">_0x46f029</span><span class="token parameter punctuation" style="color:#393A34">,</span><span class="token parameter"> _0x5eba10</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token keyword control-flow" style="color:#00009f">return</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">_0x46f029</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">_0x5eba10</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword control-flow" style="color:#00009f">if</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token function" style="color:#d73a49">_0x365d</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">'0x30'</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'BQd]'</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">!==</span><span class="token plain"> _0x1c6814</span><span class="token punctuation" style="color:#393A34">[</span><span class="token function" style="color:#d73a49">_0x365d</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">'0x31'</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'OG@1'</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      w</span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">c</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">_0x1c6814</span><span class="token punctuation" style="color:#393A34">[</span><span class="token function" style="color:#d73a49">_0x365d</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">'0x32'</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'b8bF'</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"> </span><span class="token keyword control-flow" style="color:#00009f">else</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      _0x3aca29 </span><span class="token operator" style="color:#393A34">&amp;&amp;</span><span class="token plain"> _0x1c6814</span><span class="token punctuation" style="color:#393A34">[</span><span class="token function" style="color:#d73a49">_0x365d</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">'0x33'</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'xOX6'</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">_0x3aca29</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> _0x4ce40a</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>下面我们看看这段加密代码，发现有70多行，手动破解太费劲了。</p>
<p><img decoding="async" loading="lazy" src="https://ppsteven.github.io/assets/images/image-20210114152610556-141da02a99c94e0b8664ff6cd0e60728.png" width="1840" height="1358" class="img_ev3q"></p>
<p>而且通过 <code>encode_version</code> 发现，这是使用 jsjiami.com 做的加密。</p>
<p><img decoding="async" loading="lazy" src="https://ppsteven.github.io/assets/images/image-20210114152900610-9d325a67b00cc58c4e389dbc5acca93d.png" width="2622" height="1380" class="img_ev3q"></p>
<p>首先，要先把 js 代码调试出来</p>
<div class="language-javascript codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-javascript codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#00009f">var</span><span class="token plain"> </span><span class="token dom variable" style="color:#36acaa">window</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token keyword nil" style="color:#00009f">undefined</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"> </span><span class="token comment" style="color:#999988;font-style:italic">// 因为 node.js 没有 window，可以先至为 undefined</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">var</span><span class="token plain"> encode_version </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'jsjiami.com.v5'</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	nljdj </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'__0xa3e63'</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	__0xa3e63 </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">[</span><span class="token string" style="color:#e3116c">'TURrcMKg'</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'bMKywoIHdw=='</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token spread operator" style="color:#393A34">...</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">(</span><span class="token keyword" style="color:#00009f">function</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token parameter">_0x58a45a</span><span class="token parameter punctuation" style="color:#393A34">,</span><span class="token parameter"> _0x50ac96</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token spread operator" style="color:#393A34">...</span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">__0xa3e63</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">0x1dc</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">var</span><span class="token plain"> </span><span class="token function-variable function" style="color:#d73a49">_0x365d</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">function</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token parameter">_0x5ce1df</span><span class="token parameter punctuation" style="color:#393A34">,</span><span class="token parameter"> _0x37ef48</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token spread operator" style="color:#393A34">...</span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                                               </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token console class-name">console</span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#d73a49">log</span><span class="token punctuation" style="color:#393A34">(</span><span class="token function" style="color:#d73a49">_0x365d</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">'0x22'</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'G7RY'</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token comment" style="color:#999988;font-style:italic">//  输出 BasicAuth                                   </span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>这里使用 <code>execjs</code> 和 正则表达式 去解析 JavaScript 文件</p>
<div class="language-python codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-python codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#00009f">import</span><span class="token plain"> re</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> execjs</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">def</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">callJsFunc</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">s</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> func</span><span class="token operator" style="color:#393A34">=</span><span class="token string" style="color:#e3116c">""</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token triple-quoted-string string" style="color:#e3116c">""" 调用 js 函数"""</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    v1</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> v2 </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> s</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">group</span><span class="token punctuation" style="color:#393A34">(</span><span class="token number" style="color:#36acaa">1</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> s</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">group</span><span class="token punctuation" style="color:#393A34">(</span><span class="token number" style="color:#36acaa">2</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"'{}'"</span><span class="token punctuation" style="color:#393A34">.</span><span class="token builtin">format</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">ctx</span><span class="token punctuation" style="color:#393A34">.</span><span class="token builtin">eval</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">'_0x365d(%s, %s)'</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">%</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">v1</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> v2</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic"># 加密的 js 文件</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">with</span><span class="token plain"> </span><span class="token builtin">open</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"customRequest.js"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"r"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> encoding</span><span class="token operator" style="color:#393A34">=</span><span class="token string" style="color:#e3116c">"utf-8"</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">as</span><span class="token plain"> fr</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    raw_code </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> fr</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">read</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    ctx </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> execjs</span><span class="token punctuation" style="color:#393A34">.</span><span class="token builtin">compile</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">raw_code</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic"># 正则匹配出，两个输入参数</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">pattern </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> re</span><span class="token punctuation" style="color:#393A34">.</span><span class="token builtin">compile</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">r"_0x365d\(('.*?'), ('.*?')\)"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> re</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">S</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">trans_code </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> re</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">sub</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">pattern</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> callJsFunc</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> raw_code</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic"># 输出解密文件</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">with</span><span class="token plain"> </span><span class="token builtin">open</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">'customRequest_trans.js'</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'w'</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> encoding</span><span class="token operator" style="color:#393A34">=</span><span class="token string" style="color:#e3116c">"utf-8"</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">as</span><span class="token plain"> fw</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    fw</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">write</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">trans_code</span><span class="token punctuation" style="color:#393A34">)</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<blockquote>
<p>原 JavaScript 文件：<a href="https://github.com/PPsteven/manmanbuy_js_crack/blob/master/customRequest.js" target="_blank" rel="noopener noreferrer">https://github.com/PPsteven/manmanbuy_js_crack/blob/master/customRequest.js</a></p>
<p>破解后的 JavaScript 文件：<a href="https://github.com/PPsteven/manmanbuy_js_crack/blob/master/customRequest_trans_%E8%BD%AC%E7%A0%81.js" target="_blank" rel="noopener noreferrer">https://github.com/PPsteven/manmanbuy_js_crack/blob/master/customRequest_trans_%E8%BD%AC%E7%A0%81.js</a></p>
</blockquote>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="token-参数还原">token 参数还原<a href="https://ppsteven.github.io/blog/pages/cb409c/#token-%E5%8F%82%E6%95%B0%E8%BF%98%E5%8E%9F" class="hash-link" aria-label="Direct link to token 参数还原" title="Direct link to token 参数还原">​</a></h2>
<p>翻译的 JavaScript 代码</p>
<div class="language-javascript codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-javascript codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token string-property property" style="color:#36acaa">'getNewParam'</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">function</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token parameter">_0x182946</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"> </span><span class="token comment" style="color:#999988;font-style:italic">// 令 _0x182946 为 item</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token keyword" style="color:#00009f">var</span><span class="token plain"> _0x6318d4 </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token string-property property" style="color:#36acaa">'XMcLK'</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">function</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">_0x53fadd</span><span class="token punctuation" style="color:#393A34">(</span><span class="token parameter">_0x53992b</span><span class="token parameter punctuation" style="color:#393A34">,</span><span class="token parameter"> _0x1be977</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"> </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                </span><span class="token keyword control-flow" style="color:#00009f">return</span><span class="token plain"> _0x53992b </span><span class="token operator" style="color:#393A34">!==</span><span class="token plain"> _0x1be977</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token string-property property" style="color:#36acaa">'DCftw'</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'QyP'</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token string-property property" style="color:#36acaa">'rzOuq'</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'WgI'</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token string-property property" style="color:#36acaa">'NpXrl'</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">function</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">_0x1baebf</span><span class="token punctuation" style="color:#393A34">(</span><span class="token parameter">_0x37086b</span><span class="token parameter punctuation" style="color:#393A34">,</span><span class="token parameter"> _0x2b1ab6</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"> </span><span class="token comment" style="color:#999988;font-style:italic">// 不等于</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                </span><span class="token keyword control-flow" style="color:#00009f">return</span><span class="token plain"> _0x37086b </span><span class="token operator" style="color:#393A34">!=</span><span class="token plain"> _0x2b1ab6</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token string-property property" style="color:#36acaa">'XAMWs'</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">function</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">_0x3d56be</span><span class="token punctuation" style="color:#393A34">(</span><span class="token parameter">_0x2aa348</span><span class="token parameter punctuation" style="color:#393A34">,</span><span class="token parameter"> _0x2f1927</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"> </span><span class="token comment" style="color:#999988;font-style:italic">// 不等于</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                </span><span class="token keyword control-flow" style="color:#00009f">return</span><span class="token plain"> _0x2aa348 </span><span class="token operator" style="color:#393A34">!=</span><span class="token plain"> _0x2f1927</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token string-property property" style="color:#36acaa">'coWgu'</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">function</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">_0x384c4f</span><span class="token punctuation" style="color:#393A34">(</span><span class="token parameter">_0x34042d</span><span class="token parameter punctuation" style="color:#393A34">,</span><span class="token parameter"> _0x166417</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"> </span><span class="token comment" style="color:#999988;font-style:italic">// 相加</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                </span><span class="token keyword control-flow" style="color:#00009f">return</span><span class="token plain"> _0x34042d </span><span class="token operator" style="color:#393A34">+</span><span class="token plain"> _0x166417</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token string-property property" style="color:#36acaa">'MDcDl'</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">function</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">_0x353cf4</span><span class="token punctuation" style="color:#393A34">(</span><span class="token parameter">_0x1134d4</span><span class="token parameter punctuation" style="color:#393A34">,</span><span class="token parameter"> _0xcc855d</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"> </span><span class="token comment" style="color:#999988;font-style:italic">// 函数调用</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                </span><span class="token keyword control-flow" style="color:#00009f">return</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">_0x1134d4</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">_0xcc855d</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token string-property property" style="color:#36acaa">'cOInn'</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">function</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">_0x1e4877</span><span class="token punctuation" style="color:#393A34">(</span><span class="token parameter">_0x532487</span><span class="token parameter punctuation" style="color:#393A34">,</span><span class="token parameter"> _0x49bb94</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"> </span><span class="token comment" style="color:#999988;font-style:italic">// 相加</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                </span><span class="token keyword control-flow" style="color:#00009f">return</span><span class="token plain"> _0x532487 </span><span class="token operator" style="color:#393A34">+</span><span class="token plain"> _0x49bb94</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        that </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">this</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"> </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        _0x182946</span><span class="token punctuation" style="color:#393A34">[</span><span class="token string" style="color:#e3116c">'t'</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">new</span><span class="token plain"> </span><span class="token class-name">Date</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">[</span><span class="token string" style="color:#e3116c">'valueOf'</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"> </span><span class="token comment" style="color:#999988;font-style:italic">// 获取当前时间戳: item['t'] = 1608129001120</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token keyword" style="color:#00009f">let</span><span class="token plain"> _0x1a4f89 </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token known-class-name class-name">Object</span><span class="token punctuation" style="color:#393A34">[</span><span class="token string" style="color:#e3116c">'keys'</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">_0x182946</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">[</span><span class="token string" style="color:#e3116c">'sort'</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"> </span><span class="token comment" style="color:#999988;font-style:italic">// 按照 key 排序: keys = item['keys'].sort()</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token keyword" style="color:#00009f">let</span><span class="token plain"> _0x3a63ba </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        _0x1a4f89</span><span class="token punctuation" style="color:#393A34">[</span><span class="token string" style="color:#e3116c">'forEach'</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">(</span><span class="token parameter">_0x138605</span><span class="token plain"> </span><span class="token arrow operator" style="color:#393A34">=&gt;</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token keyword" style="color:#00009f">var</span><span class="token plain"> _0x50fa23 </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"> </span><span class="token comment" style="color:#999988;font-style:italic">// 无意义</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                </span><span class="token string-property property" style="color:#36acaa">'XImOu'</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">function</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">_0xd5995c</span><span class="token punctuation" style="color:#393A34">(</span><span class="token parameter">_0x950655</span><span class="token parameter punctuation" style="color:#393A34">,</span><span class="token parameter"> _0x4002ed</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    </span><span class="token keyword control-flow" style="color:#00009f">return</span><span class="token plain"> _0x950655 </span><span class="token operator" style="color:#393A34">!==</span><span class="token plain"> _0x4002ed</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                </span><span class="token string-property property" style="color:#36acaa">'vsytw'</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'KaZ'</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token keyword control-flow" style="color:#00009f">if</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">_0x50fa23</span><span class="token punctuation" style="color:#393A34">[</span><span class="token string" style="color:#e3116c">'XImOu'</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">_0x50fa23</span><span class="token punctuation" style="color:#393A34">[</span><span class="token string" style="color:#e3116c">'vsytw'</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> _0x50fa23</span><span class="token punctuation" style="color:#393A34">[</span><span class="token string" style="color:#e3116c">'vsytw'</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"> </span><span class="token keyword control-flow" style="color:#00009f">else</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"> </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                  </span><span class="token comment" style="color:#999988;font-style:italic">// 一定是False, 执行本行</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                _0x3a63ba</span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">_0x138605</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> _0x182946</span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">_0x138605</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"> </span><span class="token comment" style="color:#999988;font-style:italic">// _0x182946 按照 key 依次赋值到 _0x3a63ba；令 _0x3a63ba 为 newItem</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  			</span><span class="token comment" style="color:#999988;font-style:italic">// forEach(key =&gt; keys) {</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  			</span><span class="token comment" style="color:#999988;font-style:italic">//		newItem[key] = item[key]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token comment" style="color:#999988;font-style:italic">// }</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token keyword" style="color:#00009f">var</span><span class="token plain"> _0x4547db </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> that</span><span class="token punctuation" style="color:#393A34">[</span><span class="token string" style="color:#e3116c">'secret'</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token keyword control-flow" style="color:#00009f">for</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token keyword" style="color:#00009f">let</span><span class="token plain"> _0x3c07c9 </span><span class="token keyword" style="color:#00009f">in</span><span class="token plain"> _0x3a63ba</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token keyword control-flow" style="color:#00009f">if</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">_0x6318d4</span><span class="token punctuation" style="color:#393A34">[</span><span class="token string" style="color:#e3116c">'XMcLK'</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">'QyP'</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'WgI'</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"> </span><span class="token comment" style="color:#999988;font-style:italic">// 一定是True</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                </span><span class="token comment" style="color:#999988;font-style:italic">// if data[key] != null &amp;&amp; data[key] != ''</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                </span><span class="token keyword control-flow" style="color:#00009f">if</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">_0x6318d4</span><span class="token punctuation" style="color:#393A34">[</span><span class="token string" style="color:#e3116c">'NpXrl'</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">_0x3a63ba</span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">_0x3c07c9</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token keyword null nil" style="color:#00009f">null</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">&amp;&amp;</span><span class="token plain"> _0x6318d4</span><span class="token punctuation" style="color:#393A34">[</span><span class="token string" style="color:#e3116c">'XAMWs'</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">_0x3a63ba</span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">_0x3c07c9</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">''</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"> </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    </span><span class="token comment" style="color:#999988;font-style:italic">// secret += urlencode(key) + urlencode(data[key])</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    _0x4547db </span><span class="token operator" style="color:#393A34">+=</span><span class="token plain"> _0x6318d4</span><span class="token punctuation" style="color:#393A34">[</span><span class="token string" style="color:#e3116c">'coWgu'</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">_0x6318d4</span><span class="token punctuation" style="color:#393A34">[</span><span class="token string" style="color:#e3116c">'MDcDl'</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">encodeURIComponent</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> _0x3c07c9</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">encodeURIComponent</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">_0x3a63ba</span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">_0x3c07c9</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"> </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"> </span><span class="token keyword control-flow" style="color:#00009f">else</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                date </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> _0x6318d4</span><span class="token punctuation" style="color:#393A34">[</span><span class="token string" style="color:#e3116c">'cOInn'</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">'0'</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> date</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        _0x4547db </span><span class="token operator" style="color:#393A34">+=</span><span class="token plain"> that</span><span class="token punctuation" style="color:#393A34">[</span><span class="token string" style="color:#e3116c">'secret'</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"> </span><span class="token comment" style="color:#999988;font-style:italic">// data += that['secret']</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        _0x4547db </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> _0x4547db</span><span class="token punctuation" style="color:#393A34">[</span><span class="token string" style="color:#e3116c">'toUpperCase'</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"> </span><span class="token comment" style="color:#999988;font-style:italic">// data.toUpperCase()</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token keyword" style="color:#00009f">var</span><span class="token plain"> _0x20fdfc </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">hex_md5</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">_0x4547db</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">[</span><span class="token string" style="color:#e3116c">'toUpperCase'</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"> </span><span class="token comment" style="color:#999988;font-style:italic">// hex_md5(data)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        _0x182946</span><span class="token punctuation" style="color:#393A34">[</span><span class="token string" style="color:#e3116c">'token'</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> _0x20fdfc</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token keyword control-flow" style="color:#00009f">return</span><span class="token plain"> _0x182946</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>下面是翻译的 Python 代码</p>
<div class="language-python codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-python codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#00009f">import</span><span class="token plain"> time</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">from</span><span class="token plain"> urllib</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">parse </span><span class="token keyword" style="color:#00009f">import</span><span class="token plain"> quote</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">import</span><span class="token plain"> hashlib</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">import</span><span class="token plain"> collections</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">post_data </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token string" style="color:#e3116c">'method'</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'getHistoryTrend'</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token string" style="color:#e3116c">'key'</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'http://item.jd.hk/10429555538.html'</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token string" style="color:#e3116c">'t'</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token builtin">str</span><span class="token punctuation" style="color:#393A34">(</span><span class="token builtin">int</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">time</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">time</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">*</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">100000</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">[</span><span class="token punctuation" style="color:#393A34">:</span><span class="token number" style="color:#36acaa">13</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"> </span><span class="token comment" style="color:#999988;font-style:italic"># 13 位时间戳</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">post_data </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> collections</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">OrderedDict</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain"> </span><span class="token comment" style="color:#999988;font-style:italic"># 按照 key 排序</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token builtin">sorted</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">post_data</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">items</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">           key</span><span class="token operator" style="color:#393A34">=</span><span class="token keyword" style="color:#00009f">lambda</span><span class="token plain"> x</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> x</span><span class="token punctuation" style="color:#393A34">[</span><span class="token number" style="color:#36acaa">0</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">secret </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'c5c3f201a8e8fc634d37a766a0299218'</span><span class="token plain"> </span><span class="token comment" style="color:#999988;font-style:italic"># secret 不变</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">token </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> secret</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">for</span><span class="token plain"> k</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> v </span><span class="token keyword" style="color:#00009f">in</span><span class="token plain"> post_data</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">items</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    token </span><span class="token operator" style="color:#393A34">+=</span><span class="token plain"> quote</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">k</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> safe</span><span class="token operator" style="color:#393A34">=</span><span class="token string" style="color:#e3116c">''</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">+</span><span class="token plain"> quote</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">v</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> safe</span><span class="token operator" style="color:#393A34">=</span><span class="token string" style="color:#e3116c">''</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token comment" style="color:#999988;font-style:italic"># Python 默认不转义 //,这个必须删掉</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">token </span><span class="token operator" style="color:#393A34">+=</span><span class="token plain"> secret</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">token </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> token</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">upper</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token comment" style="color:#999988;font-style:italic"># 转成大写</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">m </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> hashlib</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">md5</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">m</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">update</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">token</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">encode</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">'utf-8'</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token comment" style="color:#999988;font-style:italic"># 生成 md5 码</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">token </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> m</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">hexdigest</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">upper</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">post_data</span><span class="token punctuation" style="color:#393A34">[</span><span class="token string" style="color:#e3116c">'token'</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> token </span><span class="token comment" style="color:#999988;font-style:italic"># 添加 token </span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">print</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">post_data</span><span class="token punctuation" style="color:#393A34">)</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="authorization-破解">Authorization 破解<a href="https://ppsteven.github.io/blog/pages/cb409c/#authorization-%E7%A0%B4%E8%A7%A3" class="hash-link" aria-label="Direct link to Authorization 破解" title="Direct link to Authorization 破解">​</a></h2>
<div class="language-javascript codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-javascript codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token string-property property" style="color:#36acaa">'beforeSend'</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">function</span><span class="token punctuation" style="color:#393A34">(</span><span class="token parameter">_0x59ca01</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">				</span><span class="token keyword" style="color:#00009f">var</span><span class="token plain"> _0x467e2a </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">					</span><span class="token string-property property" style="color:#36acaa">'CZYVH'</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'vBP'</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">					</span><span class="token string-property property" style="color:#36acaa">'suyCt'</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'Authorization'</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">					</span><span class="token string-property property" style="color:#36acaa">'bLTRm'</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">function</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">_0x40c0f6</span><span class="token punctuation" style="color:#393A34">(</span><span class="token parameter">_0x326d84</span><span class="token parameter punctuation" style="color:#393A34">,</span><span class="token parameter"> _0xc7d8fa</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">						</span><span class="token keyword control-flow" style="color:#00009f">return</span><span class="token plain"> _0x326d84 </span><span class="token operator" style="color:#393A34">+</span><span class="token plain"> _0xc7d8fa</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">					</span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">					</span><span class="token string-property property" style="color:#36acaa">'HCGmF'</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'BasicAuth '</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">				</span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">				</span><span class="token keyword control-flow" style="color:#00009f">if</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">_0x467e2a</span><span class="token punctuation" style="color:#393A34">[</span><span class="token string" style="color:#e3116c">'CZYVH'</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">===</span><span class="token plain"> _0x467e2a</span><span class="token punctuation" style="color:#393A34">[</span><span class="token string" style="color:#e3116c">'CZYVH'</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">           </span><span class="token comment" style="color:#999988;font-style:italic">// 一定执行本行</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">					_0x59ca01</span><span class="token punctuation" style="color:#393A34">[</span><span class="token string" style="color:#e3116c">'setRequestHeader'</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">_0x467e2a</span><span class="token punctuation" style="color:#393A34">[</span><span class="token string" style="color:#e3116c">'suyCt'</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> _0x467e2a</span><span class="token punctuation" style="color:#393A34">[</span><span class="token string" style="color:#e3116c">'bLTRm'</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">_0x467e2a</span><span class="token punctuation" style="color:#393A34">[</span><span class="token string" style="color:#e3116c">'HCGmF'</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> _0x1901a2</span><span class="token punctuation" style="color:#393A34">[</span><span class="token string" style="color:#e3116c">'getTicket'</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">					</span><span class="token comment" style="color:#999988;font-style:italic">// _0x59ca01['setRequestHeader']('Authorization', 'BasicAuth ' + this.getTicket())</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"> </span><span class="token keyword control-flow" style="color:#00009f">else</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">					_0x59ca01</span><span class="token punctuation" style="color:#393A34">[</span><span class="token string" style="color:#e3116c">'setRequestHeader'</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">_0x467e2a</span><span class="token punctuation" style="color:#393A34">[</span><span class="token string" style="color:#e3116c">'suyCt'</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> _0x467e2a</span><span class="token punctuation" style="color:#393A34">[</span><span class="token string" style="color:#e3116c">'bLTRm'</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">_0x467e2a</span><span class="token punctuation" style="color:#393A34">[</span><span class="token string" style="color:#e3116c">'HCGmF'</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> _0x1901a2</span><span class="token punctuation" style="color:#393A34">[</span><span class="token string" style="color:#e3116c">'getTicket'</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">				</span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">			</span><span class="token punctuation" style="color:#393A34">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>getTicket 函数</p>
<div class="language-javascript codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-javascript codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">   </span><span class="token spread operator" style="color:#393A34">...</span><span class="token plain"> </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">   </span><span class="token string-property property" style="color:#36acaa">'secret'</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'c5c3f201a8e8fc634d37a766a0299218'</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	 </span><span class="token string-property property" style="color:#36acaa">'getTicket'</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">function</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">		</span><span class="token keyword" style="color:#00009f">var</span><span class="token plain"> _0x3bc08f </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">			</span><span class="token string-property property" style="color:#36acaa">'ipeUV'</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">function</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">_0x5ef1ae</span><span class="token punctuation" style="color:#393A34">(</span><span class="token parameter">_0x41239c</span><span class="token parameter punctuation" style="color:#393A34">,</span><span class="token parameter"> _0x1e50a1</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"> </span><span class="token comment" style="color:#999988;font-style:italic">// a(b)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">				</span><span class="token keyword control-flow" style="color:#00009f">return</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">_0x41239c</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">_0x1e50a1</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">			</span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">			</span><span class="token string-property property" style="color:#36acaa">'ZadZx'</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">function</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">_0x13f13f</span><span class="token punctuation" style="color:#393A34">(</span><span class="token parameter">_0x34a3cb</span><span class="token parameter punctuation" style="color:#393A34">,</span><span class="token parameter"> _0x22d7b9</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"> </span><span class="token comment" style="color:#999988;font-style:italic">// a &gt; b</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">				</span><span class="token keyword control-flow" style="color:#00009f">return</span><span class="token plain"> _0x34a3cb </span><span class="token operator" style="color:#393A34">&gt;</span><span class="token plain"> _0x22d7b9</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">			</span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">			</span><span class="token string-property property" style="color:#36acaa">'XDmmn'</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">function</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">_0x5cd9f2</span><span class="token punctuation" style="color:#393A34">(</span><span class="token parameter">_0x47ada5</span><span class="token parameter punctuation" style="color:#393A34">,</span><span class="token parameter"> _0x170387</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"> </span><span class="token comment" style="color:#999988;font-style:italic">// a + b </span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">				</span><span class="token keyword control-flow" style="color:#00009f">return</span><span class="token plain"> _0x47ada5 </span><span class="token operator" style="color:#393A34">+</span><span class="token plain"> _0x170387</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">			</span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">			</span><span class="token string-property property" style="color:#36acaa">'HxAAK'</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">function</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">_0x18276a</span><span class="token punctuation" style="color:#393A34">(</span><span class="token parameter">_0x1835fa</span><span class="token parameter punctuation" style="color:#393A34">,</span><span class="token parameter"> _0x2d0f0b</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"> </span><span class="token comment" style="color:#999988;font-style:italic">// a - b </span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">				</span><span class="token keyword control-flow" style="color:#00009f">return</span><span class="token plain"> _0x1835fa </span><span class="token operator" style="color:#393A34">-</span><span class="token plain"> _0x2d0f0b</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">			</span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">			</span><span class="token string-property property" style="color:#36acaa">'DLUkx'</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">function</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">_0x149149</span><span class="token punctuation" style="color:#393A34">(</span><span class="token parameter">_0x200e47</span><span class="token parameter punctuation" style="color:#393A34">,</span><span class="token parameter"> _0x1da274</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"> </span><span class="token comment" style="color:#999988;font-style:italic">// a - b</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">				</span><span class="token keyword control-flow" style="color:#00009f">return</span><span class="token plain"> _0x200e47 </span><span class="token operator" style="color:#393A34">-</span><span class="token plain"> _0x1da274</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">			</span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">		</span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">		</span><span class="token keyword" style="color:#00009f">var</span><span class="token plain"> _0x3f166f </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> _0x3bc08f</span><span class="token punctuation" style="color:#393A34">[</span><span class="token string" style="color:#e3116c">'ipeUV'</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">$</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'#ticket'</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">[</span><span class="token string" style="color:#e3116c">'val'</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"> </span><span class="token comment" style="color:#999988;font-style:italic">// ticket = $(#ticket).val</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">		</span><span class="token keyword control-flow" style="color:#00009f">if</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">_0x3bc08f</span><span class="token punctuation" style="color:#393A34">[</span><span class="token string" style="color:#e3116c">'ZadZx'</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">_0x3f166f</span><span class="token punctuation" style="color:#393A34">[</span><span class="token string" style="color:#e3116c">'length'</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">0x4</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain">  </span><span class="token comment" style="color:#999988;font-style:italic">// if len(ticket) &gt; 4 </span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">       </span><span class="token comment" style="color:#999988;font-style:italic">// ticket = substr[lenght(ticket) - 4, 4] + substr[0, length(ticket) - 4 ]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">			_0x3f166f </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> _0x3bc08f</span><span class="token punctuation" style="color:#393A34">[</span><span class="token string" style="color:#e3116c">'XDmmn'</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">_0x3f166f</span><span class="token punctuation" style="color:#393A34">[</span><span class="token string" style="color:#e3116c">'substr'</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">_0x3bc08f</span><span class="token punctuation" style="color:#393A34">[</span><span class="token string" style="color:#e3116c">'HxAAK'</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">_0x3f166f</span><span class="token punctuation" style="color:#393A34">[</span><span class="token string" style="color:#e3116c">'length'</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">0x4</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">0x4</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> _0x3f166f</span><span class="token punctuation" style="color:#393A34">[</span><span class="token string" style="color:#e3116c">'substring'</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">(</span><span class="token number" style="color:#36acaa">0x0</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> _0x3bc08f</span><span class="token punctuation" style="color:#393A34">[</span><span class="token string" style="color:#e3116c">'DLUkx'</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">_0x3f166f</span><span class="token punctuation" style="color:#393A34">[</span><span class="token string" style="color:#e3116c">'length'</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">0x4</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">		</span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">		</span><span class="token keyword control-flow" style="color:#00009f">return</span><span class="token plain"> _0x3f166f</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	</span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">,</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>上面的代码就很简单</p>
<ul>
<li>首先从 <a href="http://tool.manmanbuy.com/HistoryLowest.aspx" target="_blank" rel="noopener noreferrer">http://tool.manmanbuy.com/HistoryLowest.aspx</a> 获取 <code>#ticket</code> 元素的值</li>
<li>ticket 向右循环4个字母，即abcdefgh 变成 efghabcd</li>
</ul>
<p>Python 翻译代码</p>
<div class="language-python codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-python codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#00009f">def</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">create_auth</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    req </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> requests</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">get</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">'http://tool.manmanbuy.com/HistoryLowest.aspx'</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">if</span><span class="token plain"> req</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">status_code </span><span class="token operator" style="color:#393A34">==</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">200</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        history_price_html </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> req</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">text</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        searchRet </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> re</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">search</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">r'id="ticket".+value="(?P&lt;value&gt;.+)"'</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> history_price_html</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token keyword" style="color:#00009f">if</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">not</span><span class="token plain"> searchRet</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">''</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        ticket </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> searchRet</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">group</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">'value'</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'BasicAuth '</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">+</span><span class="token plain"> ticket</span><span class="token punctuation" style="color:#393A34">[</span><span class="token operator" style="color:#393A34">-</span><span class="token number" style="color:#36acaa">4</span><span class="token punctuation" style="color:#393A34">:</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">+</span><span class="token plain"> ticket</span><span class="token punctuation" style="color:#393A34">[</span><span class="token punctuation" style="color:#393A34">:</span><span class="token operator" style="color:#393A34">-</span><span class="token number" style="color:#36acaa">4</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">''</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="github-仓库">Github 仓库<a href="https://ppsteven.github.io/blog/pages/cb409c/#github-%E4%BB%93%E5%BA%93" class="hash-link" aria-label="Direct link to Github 仓库" title="Direct link to Github 仓库">​</a></h2>
<p><a href="https://github.com/PPsteven/manmanbuy_js_crack" target="_blank" rel="noopener noreferrer">manmanbuy_js_crack</a></p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="参考资料">参考资料<a href="https://ppsteven.github.io/blog/pages/cb409c/#%E5%8F%82%E8%80%83%E8%B5%84%E6%96%99" class="hash-link" aria-label="Direct link to 参考资料" title="Direct link to 参考资料">​</a></h2>
<p><a href="https://www.myitmx.com/96.html" target="_blank" rel="noopener noreferrer">某 JS 加密逆向还原简单分析</a></p>]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[0x4.家庭服务器折腾记|内网穿透方案|Ngork]]></title>
            <link>https://ppsteven.github.io/blog/old-computer-adventures/how-to-connect-to-computer-in-home-ssh</link>
            <guid>https://ppsteven.github.io/blog/old-computer-adventures/how-to-connect-to-computer-in-home-ssh</guid>
            <pubDate>Sun, 01 Dec 2019 13:23:30 GMT</pubDate>
            <description><![CDATA[家中的电脑，由于没有公网ip，只能在家中用ssh 访问，一旦出门，就无法访问服务器了。这非常不方便，因为可能要从电脑上获取资料，访问数据库，修改代码等等操作，一旦离开本地环境，也太不方便了。]]></description>
            <content:encoded><![CDATA[<p>家中的电脑，由于没有公网ip，只能在家中用ssh 访问，一旦出门，就无法访问服务器了。这非常不方便，因为可能要从电脑上获取资料，访问数据库，修改代码等等操作，一旦离开本地环境，也太不方便了。</p>
<p>经过百度后发现，需要利用  <strong>内网穿透</strong> 技术实现。 原因是我们的ip资源是稀缺的，我们普通家庭中使用的ip都是动态分配的ip地址。没有固定的ip的服务器是无法与外网连接的，所以我们至少需要一个公网ip。</p>
<p>内网穿透技术有很多了，我这里选择的是ngrok 这个方案。
我试了一下两种方案，第一个是外国的ngrok，没有尝试成功，而且免费版本每次断开后，生成的url 是随机的。所以没有采用。第二个是国内的Sunny-Ngrok，有免费版的。先尝试一波。</p>
<ul>
<li><a href="https://dashboard.ngrok.com/get-started" target="_blank" rel="noopener noreferrer">ngrok</a></li>
<li><a href="https://www.ngrok.cc/download.html" target="_blank" rel="noopener noreferrer">ngrok.cc</a>  （Sunny-Ngrok）</li>
</ul>
<blockquote>
<p>使用Sunny-Ngrok一个很大的好处就是在当你没有服务器和公网ip的时候，它会是一个很不错的解决方案。当然若是你有服务器的话，自己搭一个ngrok未尝不是一个很好的选择。</p>
</blockquote>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="局域网连接服务器">局域网连接服务器<a href="https://ppsteven.github.io/blog/old-computer-adventures/how-to-connect-to-computer-in-home-ssh#%E5%B1%80%E5%9F%9F%E7%BD%91%E8%BF%9E%E6%8E%A5%E6%9C%8D%E5%8A%A1%E5%99%A8" class="hash-link" aria-label="Direct link to 局域网连接服务器" title="Direct link to 局域网连接服务器">​</a></h2>
<p>这里先给出用局域网连接服务器的方法</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain"># linux 查看ip 地址一般是下面三种方法（不同系统不一样）</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">$ ifconfig</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">$ ipconfig</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">$ ip addr # &lt;--manjaro</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>运行如下</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">$ ip addr | grep inet</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    inet 127.0.0.1/8 scope host lo</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    inet6 ::1/128 scope host</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    inet 192.168.1.102/24 brd 192.168.1.255 scope global dynamic noprefixroute wlp2s0</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    inet6 fe80::1bd5:9435:6572:ffc7/64 scope link noprefixroute</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"># ip地址是 192.168.1.102</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>局域网中使用</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">ssh -p 22 ppsteven@192.168.1.l02</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"># -p 22 也可以省略，因为ssh 的默认端口号就是22 </span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="sunny-ngrok教程">Sunny-Ngrok教程<a href="https://ppsteven.github.io/blog/old-computer-adventures/how-to-connect-to-computer-in-home-ssh#sunny-ngrok%E6%95%99%E7%A8%8B" class="hash-link" aria-label="Direct link to Sunny-Ngrok教程" title="Direct link to Sunny-Ngrok教程">​</a></h2>
<p>教程基本上都在 <a href="http://www.ngrok.cc/_book/general/tcp.html" target="_blank" rel="noopener noreferrer">ngrok.cc官方文档</a> 写的很清楚了，但是有一些还是需要注意的。</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="开通隧道">开通隧道<a href="https://ppsteven.github.io/blog/old-computer-adventures/how-to-connect-to-computer-in-home-ssh#%E5%BC%80%E9%80%9A%E9%9A%A7%E9%81%93" class="hash-link" aria-label="Direct link to 开通隧道" title="Direct link to 开通隧道">​</a></h3>
<p><img decoding="async" loading="lazy" src="https://cdn.jsdelivr.net/gh/PPsteven/pictures/img/20191201135321.png" alt="" class="img_ev3q"></p>
<p>如果你是想用ssh，开通的就是TCP转发。记得要把本地端口换成22（当然不换也是可以的，只要你最后连ssh 的时候设置好端口就行了）</p>
<p><img decoding="async" loading="lazy" src="https://cdn.jsdelivr.net/gh/PPsteven/pictures/img/20191201135519.png" alt="" class="img_ev3q"></p>
<p>最后看到的结果是这样的</p>
<p><img decoding="async" loading="lazy" src="https://cdn.jsdelivr.net/gh/PPsteven/pictures/img/20191201153141.png" alt="" class="img_ev3q"></p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">$ ssh -p 10568 yourname@free.aa.com 就可以连接上你的服务器了</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="ngrok-启动">Ngrok 启动<a href="https://ppsteven.github.io/blog/old-computer-adventures/how-to-connect-to-computer-in-home-ssh#ngrok-%E5%90%AF%E5%8A%A8" class="hash-link" aria-label="Direct link to Ngrok 启动" title="Direct link to Ngrok 启动">​</a></h3>
<p>上图可以看到，在状态栏显示 是否成功开启ngrok</p>
<p>启动的方法，官网教程里面也有写，本人按照流程走一遍。</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="下载客户端">下载客户端<a href="https://ppsteven.github.io/blog/old-computer-adventures/how-to-connect-to-computer-in-home-ssh#%E4%B8%8B%E8%BD%BD%E5%AE%A2%E6%88%B7%E7%AB%AF" class="hash-link" aria-label="Direct link to 下载客户端" title="Direct link to 下载客户端">​</a></h3>
<p>我用的是Mac 下载zip文件，然后上传到服务器的操作。有图形界面的同学，可以直接按照官网操作。</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">$ scp ~/Downloads/linux_amd64.zip ppsteven@192.168.1.102:~/Documents</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">$ ssh 192.168.1.102</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">$ cd ~/Documents</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">$ unzip linux_amd64.zip</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="启动ngrok-服务">启动ngrok 服务<a href="https://ppsteven.github.io/blog/old-computer-adventures/how-to-connect-to-computer-in-home-ssh#%E5%90%AF%E5%8A%A8ngrok-%E6%9C%8D%E5%8A%A1" class="hash-link" aria-label="Direct link to 启动ngrok 服务" title="Direct link to 启动ngrok 服务">​</a></h3>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain"># 当前目录在linux_amd64 下</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">$ ./sunny clientid 隧道id  # 启动隧道服务</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">$ setsid ./sunny clientid 743acXXXX &amp; # 在后台启动隧道服务</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>启动服务后，我们在官网的后端就可以看到结果。
为了让我们的服务器能不断的在后台运行，我们需要登录服务器后，运行第二行的命令</p>
<ul>
<li>&amp; 作用是后台运行程序</li>
<li>setsid 作用是当终端关闭的时候命令一直不会关闭</li>
</ul>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="高级教程开机自动运行">高级教程——开机自动运行<a href="https://ppsteven.github.io/blog/old-computer-adventures/how-to-connect-to-computer-in-home-ssh#%E9%AB%98%E7%BA%A7%E6%95%99%E7%A8%8B%E5%BC%80%E6%9C%BA%E8%87%AA%E5%8A%A8%E8%BF%90%E8%A1%8C" class="hash-link" aria-label="Direct link to 高级教程——开机自动运行" title="Direct link to 高级教程——开机自动运行">​</a></h3>
<p>官网中已经给出了 <a href="http://www.ngrok.cc/_book/start/ngrok_auto.html" target="_blank" rel="noopener noreferrer">Ngrok开机自启动</a> 的教程，我们这里由于使用的是manjaro，官网的教程无法直接参考，我们这里给出自己的解决方案。</p>
<h4 class="anchor anchorWithStickyNavbar_LWe7" id="第一步移动命令并使之可执行">第一步：移动命令，并使之可执行<a href="https://ppsteven.github.io/blog/old-computer-adventures/how-to-connect-to-computer-in-home-ssh#%E7%AC%AC%E4%B8%80%E6%AD%A5%E7%A7%BB%E5%8A%A8%E5%91%BD%E4%BB%A4%E5%B9%B6%E4%BD%BF%E4%B9%8B%E5%8F%AF%E6%89%A7%E8%A1%8C" class="hash-link" aria-label="Direct link to 第一步：移动命令，并使之可执行" title="Direct link to 第一步：移动命令，并使之可执行">​</a></h4>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">sudo mv sunny /usr/local/bin/sunny</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">sudo chmod +x /usr/local/bin/sunny</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<h4 class="anchor anchorWithStickyNavbar_LWe7" id="第二步编写启动脚本">第二步：编写启动脚本<a href="https://ppsteven.github.io/blog/old-computer-adventures/how-to-connect-to-computer-in-home-ssh#%E7%AC%AC%E4%BA%8C%E6%AD%A5%E7%BC%96%E5%86%99%E5%90%AF%E5%8A%A8%E8%84%9A%E6%9C%AC" class="hash-link" aria-label="Direct link to 第二步：编写启动脚本" title="Direct link to 第二步：编写启动脚本">​</a></h4>
<p>我们这里直接上手修改官网的shell语言</p>
<p>sunny_auto.sh</p>
<div class="language-shell codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-shell codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">#!/bin/bash -e</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">### BEGIN INIT INFO</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"># Provides:          ngrok.cc</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"># Required-Start:    $network $remote_fs $local_fs</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"># Required-Stop:     $network $remote_fs $local_fs</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"># Default-Start:     2 3 4 5</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"># Default-Stop:      0 1 6</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"># Short-Description: autostartup of ngrok for Linux</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">### END INIT INFO</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">NAME=sunny</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">DAEMON=/usr/local/bin/$NAME</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">PIDFILE=/var/run/$NAME.pid</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"># 判断 sunny 是否可执行</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">[ -x "$DAEMON" ] || exit 0</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">case "$1" in</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  start)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      # 根据/var/run/sunny.pid 文件判断sunny是否正在运行</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      if [ -f $PIDFILE ]; then </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        echo "$NAME already running..."</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        echo -e "\033[1;35mStart Fail\033[0m"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      else</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        echo "Starting $NAME..."</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        # start-stop-daemon -S -p $PIDFILE -m -b -o -q -x $DAEMON -- clientid 隧道id || return 2</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        # 不使用start-stop-daemon，使用常规的方法后台运行</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        setsid sunny clientid 1cb52410136cfe34 &amp;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        echo -e "\033[1;32mStart Success\033[0m"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    fi</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    ;;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  stop)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        echo "Stoping $NAME..."</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        # start-stop-daemon -K -p $PIDFILE -s TERM -o -q || return 2</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        # pkill 是 kill 和 pgrep 的结合，删除所有中带sunny的进程</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        pkill -9 sunny </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        rm -rf $PIDFILE</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        echo -e "\033[1;32mStop Success\033[0m"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    ;;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  restart)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    $0 stop &amp;&amp; sleep 2 &amp;&amp; $0 start</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    ;;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  *)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    echo "Usage: $0 {start|stop|restart}"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    exit 1</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    ;;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">esac</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">exit 0</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>写完之后，我们需要测试一下</p>
<div class="language-shell codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-shell codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">chmod a+x sunny_auto.sh</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">./sunny_auto.sh # 会输出使用方法</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">./sunny_auto.sh start </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">./sunny_auto.sh stop</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">./sunny_auto.sh restart</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>测试成功后，我们需要让系统自己启动。我看了一下，目前网上大部分教程都是直接给了代码，并没有解释清楚自启动的原理。我认为这是可以通过查看官方教程一步步讲清楚的。抱着**“授人以鱼不如授人以渔”** 的态度，我准备写的仔细一点。</p>
<h4 class="anchor anchorWithStickyNavbar_LWe7" id="第三步自动跑起来">第三步：自动跑起来<a href="https://ppsteven.github.io/blog/old-computer-adventures/how-to-connect-to-computer-in-home-ssh#%E7%AC%AC%E4%B8%89%E6%AD%A5%E8%87%AA%E5%8A%A8%E8%B7%91%E8%B5%B7%E6%9D%A5" class="hash-link" aria-label="Direct link to 第三步：自动跑起来" title="Direct link to 第三步：自动跑起来">​</a></h4>
<p>我们的系统是manjaro，是arch linux 的衍生版本，所以我们第一想到的就是去 <a href="https://www.archlinux.org/" target="_blank" rel="noopener noreferrer">https://wiki.archlinux.org/</a> 上找。</p>
<p>archlinux 上，在如下九个方面，我们可以完成"autostart" 操作</p>
<ul>
<li>开关机</li>
<li>登录登出</li>
<li>插入拔出设备</li>
<li>计时事件</li>
<li>文件系统事件</li>
<li>shell登录登出</li>
<li>Xorg</li>
<li>桌面环境</li>
<li>窗口管理启动</li>
</ul>
<p>这里，我们需要第一项开关机 <a href="https://wiki.archlinux.org/index.php/Systemd_(%E7%AE%80%E4%BD%93%E4%B8%AD%E6%96%87)" target="_blank" rel="noopener noreferrer">Systemd</a> 作为我们自启动的方式，其实很多教程中也是采用的这个方式。</p>
<h5 class="anchor anchorWithStickyNavbar_LWe7" id="单元文件">单元文件<a href="https://ppsteven.github.io/blog/old-computer-adventures/how-to-connect-to-computer-in-home-ssh#%E5%8D%95%E5%85%83%E6%96%87%E4%BB%B6" class="hash-link" aria-label="Direct link to 单元文件" title="Direct link to 单元文件">​</a></h5>
<p>一个服务可以看做是一个unit，每个unit需要编写自己的单元文件。<code>systemd</code> <a href="https://www.freedesktop.org/software/systemd/man/systemd.unit.html" target="_blank" rel="noopener noreferrer">单元文件</a>的语法来源于 XDG 桌面项配置文件<code>.desktop</code>文件，最初的源头则是Microsoft Windows的<code>.ini</code>文件。</p>
<h5 class="anchor anchorWithStickyNavbar_LWe7" id="单元文件操作">单元文件操作<a href="https://ppsteven.github.io/blog/old-computer-adventures/how-to-connect-to-computer-in-home-ssh#%E5%8D%95%E5%85%83%E6%96%87%E4%BB%B6%E6%93%8D%E4%BD%9C" class="hash-link" aria-label="Direct link to 单元文件操作" title="Direct link to 单元文件操作">​</a></h5>
<p>立即激活单元：</p>
<div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain"># systemctl start &lt;单元&gt;</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>立即停止单元：</p>
<div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain"># systemctl stop &lt;单元&gt;</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>重启单元：</p>
<div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain"># systemctl restart &lt;单元&gt;</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>重新加载配置：</p>
<div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain"># systemctl reload &lt;单元&gt;</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>输出单元运行状态：</p>
<div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">$ systemctl status &lt;单元&gt;</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>检查单元是否配置为自动启动：</p>
<div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">$ systemctl is-enabled &lt;单元&gt;</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>开机自动激活单元：</p>
<div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain"># systemctl enable &lt;单元&gt;</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>设置单元为自动启动并立即启动这个单元:</p>
<div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain"># systemctl enable --now unit</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>取消开机自动激活单元：</p>
<div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain"># systemctl disable &lt;单元&gt;</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<h5 class="anchor anchorWithStickyNavbar_LWe7" id="编辑我们的单元文件">编辑我们的单元文件<a href="https://ppsteven.github.io/blog/old-computer-adventures/how-to-connect-to-computer-in-home-ssh#%E7%BC%96%E8%BE%91%E6%88%91%E4%BB%AC%E7%9A%84%E5%8D%95%E5%85%83%E6%96%87%E4%BB%B6" class="hash-link" aria-label="Direct link to 编辑我们的单元文件" title="Direct link to 编辑我们的单元文件">​</a></h5>
<p>单元文件的语法，可以参考系统已经安装的单元，也可以参考 <a href="https://jlk.fjfi.cvut.cz/arch/manpages/man/systemd.service.5" target="_blank" rel="noopener noreferrer">systemd.service(5)</a> 中的<a href="https://www.freedesktop.org/software/systemd/man/systemd.service.html#Examples" target="_blank" rel="noopener noreferrer">EXAMPLES章节</a>。英文不好的同学，有一位热心的大牛，已经写好了中文教程 <a href="http://www.jinbuguo.com/systemd/systemd.index.html" target="_blank" rel="noopener noreferrer">systemd.index 中文手册</a></p>
<p>单元文件的地址如下</p>
<ul>
<li><code>/usr/lib/systemd/system/</code> ：软件包安装的单元</li>
<li><code>/etc/systemd/system/</code> ：系统管理员安装的单元</li>
</ul>
<p>从网上的教程看下来，大家最喜欢的一个做法就是创建一个<code>rc.local</code> 文件，和一个<code>rc-local.service</code> 服务。然后把我们需要运行的脚本加入<code>rc.local</code>中。</p>
<p>我认为这样的做法很省事，也比较简单，不过缺点是所有的开机自启服务都放一起了，比较乱不好管理。这里我准备按照自己的想法来创建一个服务，我这里借鉴了docker.service。</p>
<p>sunny.service</p>
<div class="language-ini codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-ini codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">[Unit]</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Description=ngrok sunny</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">[Service]</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Type=forking</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">User=ppsteven</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"># 自动重启服务</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"># Restart=always</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"># RestartSec=30</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"># 执行命令</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Restart=on-failure</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">ExecStart=/etc/sunny.sh start</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">ExecStop=/etc/sunny.sh stop</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"># ExecReload=/bin/kill -s HUP $MAINPID</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">[Install]</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">WantedBy=multi-user.target</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="参考资料">参考资料<a href="https://ppsteven.github.io/blog/old-computer-adventures/how-to-connect-to-computer-in-home-ssh#%E5%8F%82%E8%80%83%E8%B5%84%E6%96%99" class="hash-link" aria-label="Direct link to 参考资料" title="Direct link to 参考资料">​</a></h2>
<p><a href="https://zhuanlan.zhihu.com/p/91684175" target="_blank" rel="noopener noreferrer">有了内网穿透神器 ngrok ，个人电脑也能做服务器</a></p>]]></content:encoded>
            <category>ssh</category>
            <category>sunny-ngrok</category>
        </item>
    </channel>
</rss>