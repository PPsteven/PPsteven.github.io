"use strict";(self.webpackChunkcodepainter=self.webpackChunkcodepainter||[]).push([[9197],{80221:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>l,contentTitle:()=>t,default:()=>u,frontMatter:()=>s,metadata:()=>o,toc:()=>a});var r=i(74848),d=i(28453);const s={title:"\u7ec3\u4e60\u9898",date:new Date("2020-12-09T16:24:20.000Z"),permalink:"/pages/fb260b/",categories:["\u7b97\u6cd5","\u641c\u7d22\u7b97\u6cd5"]},t=void 0,o={id:"\u9762\u8bd5\u6280\u5de7/\u7b97\u6cd5/\u641c\u7d22\u7b97\u6cd5/\u7ec3\u4e60",title:"\u7ec3\u4e60\u9898",description:"\u57fa\u7840\u9898",source:"@site/docs/02.\u9762\u8bd5\u6280\u5de7/02.\u7b97\u6cd5/05.\u641c\u7d22\u7b97\u6cd5/08.\u7ec3\u4e60.md",sourceDirName:"02.\u9762\u8bd5\u6280\u5de7/02.\u7b97\u6cd5/05.\u641c\u7d22\u7b97\u6cd5",slug:"/\u9762\u8bd5\u6280\u5de7/\u7b97\u6cd5/\u641c\u7d22\u7b97\u6cd5/\u7ec3\u4e60",permalink:"/docs/\u9762\u8bd5\u6280\u5de7/\u7b97\u6cd5/\u641c\u7d22\u7b97\u6cd5/\u7ec3\u4e60",draft:!1,unlisted:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/02.\u9762\u8bd5\u6280\u5de7/02.\u7b97\u6cd5/05.\u641c\u7d22\u7b97\u6cd5/08.\u7ec3\u4e60.md",tags:[],version:"current",sidebarPosition:8,frontMatter:{title:"\u7ec3\u4e60\u9898",date:"2020-12-09T16:24:20.000Z",permalink:"/pages/fb260b/",categories:["\u7b97\u6cd5","\u641c\u7d22\u7b97\u6cd5"]},sidebar:"interview",previous:{title:"126. \u5355\u8bcd\u63a5\u9f99 II(Hard)",permalink:"/docs/\u9762\u8bd5\u6280\u5de7/\u7b97\u6cd5/\u641c\u7d22\u7b97\u6cd5/\u5355\u8bcd\u63a5\u9f99 II(126)"},next:{title:"\u56de\u6eaf\u6cd5\u7b80\u4ecb",permalink:"/docs/\u9762\u8bd5\u6280\u5de7/\u7b97\u6cd5/\u56de\u6eaf\u7b97\u6cd5/\u4ecb\u7ecd"}},l={},a=[{value:"\u57fa\u7840\u9898",id:"\u57fa\u7840\u9898",level:2},{value:"130. \u88ab\u56f4\u7ed5\u7684\u533a\u57df(Medium)",id:"130-\u88ab\u56f4\u7ed5\u7684\u533a\u57dfmedium",level:3},{value:"257. \u4e8c\u53c9\u6811\u7684\u6240\u6709\u8def\u5f84(Easy)",id:"257-\u4e8c\u53c9\u6811\u7684\u6240\u6709\u8def\u5f84easy",level:3},{value:"\u8fdb\u9636",id:"\u8fdb\u9636",level:2},{value:"310. \u6700\u5c0f\u9ad8\u5ea6\u6811(Medium)",id:"310-\u6700\u5c0f\u9ad8\u5ea6\u6811medium",level:3}];function c(e){const n={a:"a",code:"code",h2:"h2",h3:"h3",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,d.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.h2,{id:"\u57fa\u7840\u9898",children:"\u57fa\u7840\u9898"}),"\n",(0,r.jsx)(n.h3,{id:"130-\u88ab\u56f4\u7ed5\u7684\u533a\u57dfmedium",children:"130. \u88ab\u56f4\u7ed5\u7684\u533a\u57df(Medium)"}),"\n",(0,r.jsxs)(n.p,{children:["\u641c\u7d22\u4e00\u5708\u8fb9\u4e0a\u7684\u533a\u57df\uff0c\u8bb0\u5f55\u6240\u6709\u4e0e\u8fb9\u754c\u76f8\u8fde\u7684 ",(0,r.jsx)(n.strong,{children:"O"})," \uff0c\u6240\u6709\u5185\u90e8\u7684 ",(0,r.jsx)(n.strong,{children:"O"})," \u90fd\u586b\u5145\u4e3a ",(0,r.jsx)(n.strong,{children:"X"})]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"\u6837\u4f8b"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"X X X X\nX O O X\nX X O X\nX O X X\n"})}),"\n",(0,r.jsx)(n.p,{children:"\u8fd0\u884c\u4f60\u7684\u51fd\u6570\u540e\uff0c\u77e9\u9635\u53d8\u4e3a\uff1a"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"X X X X\nX X X X\nX X X X\nX O X X\n"})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"\u4ee3\u7801"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:'def dfs(i, j, visited, board):\n    if i < 0 or i >= len(board) or j < 0 or j >= len(board[0]) or visited[i][j]:\n        return \n\n    if board[i][j] != "O":\n        return \n    \n    visited[i][j] = 1\n    dfs(i + 1, j, visited, board)\n    dfs(i - 1, j, visited, board)\n    dfs(i, j + 1, visited, board)\n    dfs(i, j - 1, visited, board)\n\nclass Solution:\n    def solve(self, board: List[List[str]]) -> None:\n        """\n        Do not return anything, modify board in-place instead.\n        """\n        if not board: return \n        n, m = len(board), len(board[0])\n        visited = [[0] * m for _ in range(n)]\n        # \u641c\u7d22\u5468\u56f4\u4e00\u5708\n        for i in range(m):\n            dfs(0, i, visited, board)\n            dfs(n - 1, i, visited, board)\n        \n        for i in range(1, n - 1):\n            dfs(i, 0, visited, board)\n            dfs(i, m - 1, visited, board)\n        \n        for i in range(n):\n            for j in range(m):\n                if board[i][j] == \'O\' and not visited[i][j]:\n                    board[i][j] = \'X\'\n'})}),"\n",(0,r.jsx)(n.h3,{id:"257-\u4e8c\u53c9\u6811\u7684\u6240\u6709\u8def\u5f84easy",children:"257. \u4e8c\u53c9\u6811\u7684\u6240\u6709\u8def\u5f84(Easy)"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"\u4f7f\u7528\u56de\u6eaf\u6cd5"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:"def dfs(root, ans, tmp):\n    if not root: return \n    tmp.append(str(root.val))\n    if not root.left and not root.right:\n        ans.append('->'.join(tmp))\n    dfs(root.left, ans, tmp)\n    dfs(root.right, ans, tmp)\n    tmp.pop()\n        \nclass Solution:\n    def binaryTreePaths(self, root: TreeNode) -> List[str]:\n        ans = []\n        dfs(root, ans, [])\n        return ans \n"})}),"\n",(0,r.jsx)(n.h2,{id:"\u8fdb\u9636",children:"\u8fdb\u9636"}),"\n",(0,r.jsx)(n.h3,{id:"310-\u6700\u5c0f\u9ad8\u5ea6\u6811medium",children:"310. \u6700\u5c0f\u9ad8\u5ea6\u6811(Medium)"}),"\n",(0,r.jsxs)(n.p,{children:["\u672c\u9898\u601d\u8def\u96be\uff0c\u7f16\u7a0b\u4e5f\u6709\u4e0d\u5c11\u5751\u3002\u53c2\u8003\u4e86\uff1a",(0,r.jsx)(n.a,{href:"https://leetcode-cn.com/problems/minimum-height-trees/solution/zui-rong-yi-li-jie-de-bfsfen-xi-jian-dan-zhu-shi-x/",children:"\u6700\u5bb9\u6613\u7406\u89e3\u7684bfs\uff0c\u5206\u6790\u7b80\u5355\uff0c\u6ce8\u91ca\u8be6\u7ec6"})]}),"\n",(0,r.jsx)(n.p,{children:"\u601d\u8def\u4e0a\uff1a\u4f7f\u7528BFS\u641c\u7d22\uff0c\u4e0d\u65ad\u5220\u9664\u53f6\u5b50\u8282\u70b9\uff0c\u7ecf\u8fc7\u6709\u9650\u6b21\u7684\u5220\u9664\uff0c\u6700\u540e\u4e00\u5b9a\u5269\u4e0b 1 \u6216 2 \u4e2a\u7684\u8282\u70b9\u3002"}),"\n",(0,r.jsx)(n.p,{children:"\u7f16\u7a0b\u4e0a\uff1a"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"\u5982\u4f55\u5b9e\u73b0?"}),"  \u4f7f\u7528\u4e34\u63a5\u77e9\u9635\u5b9e\u73b0"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"\u5982\u4f55\u5220\u9664\u53f6\u5b50\u8282\u70b9?"}),"  \u53ea\u8c03\u6574\u8282\u70b9\u7684 degree\uff0c\u4e0d\u7528\u5220\u9664 link \u4e34\u63a5\u77e9\u9635\u7684\u5173\u7cfb"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"\u4ec0\u4e48\u65f6\u5019\u5224\u65ad\u627e\u5230\u7ed3\u679c\uff1f"})," \u8282\u70b9\u53ea\u52691-2\u4e2a\uff0c\u5b9e\u73b0\u4e0a\uff0c\u76f4\u63a5\u6bcf\u6b21\u4fdd\u8bc1\u6700\u540e\u7684queue\u3002\u5f53\u5faa\u73af\u7ed3\u675f\u7684\u65f6\u5019\uff0c\u6700\u540e\u4e00\u4e2a queue \u5c31\u662f\u7ed3\u679c\u3002"]}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:"from collections import defaultdict, deque \nclass Solution:\n    def findMinHeightTrees(self, n: int, edges: List[List[int]]) -> List[int]:\n        if not edges: \n            return [0]\n\n        degree = [0] * n\n        link = defaultdict(list)\n        for edge in edges:\n            degree[edge[0]] += 1 # \u8282\u70b9\u7684\u5ea6\n            degree[edge[1]] += 1\n            link[edge[0]].append(edge[1])\n            link[edge[1]].append(edge[0])\n        queue = deque()  \n        for i in range(n):\n            if degree[i] == 1:\n                queue.append(i)\n            \n        while queue:\n            res = list(queue)  # \u6700\u540e\u4e00\u5c42\u662f\u6211\u4eec\u7684\u7b54\u6848!!!\n            for _ in range(len(queue)):\n                node = queue.popleft()\n                for next_node in link[node]:\n                    degree[next_node] -= 1 \n                    if degree[next_node] == 1: # \u53bb\u9664 node \u540e\u53d8\u6210\u53f6\u5b50\u8282\u70b9(\u5ea6\u4e3a1)\n                        queue.append(next_node)\n        return res\n"})})]})}function u(e={}){const{wrapper:n}={...(0,d.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(c,{...e})}):c(e)}},28453:(e,n,i)=>{i.d(n,{R:()=>t,x:()=>o});var r=i(96540);const d={},s=r.createContext(d);function t(e){const n=r.useContext(s);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(d):e.components||d:t(e.components),r.createElement(s.Provider,{value:n},e.children)}}}]);