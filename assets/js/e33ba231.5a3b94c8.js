"use strict";(self.webpackChunkcodepainter=self.webpackChunkcodepainter||[]).push([[6997],{5685:(n,e,i)=>{i.r(e),i.d(e,{assets:()=>o,contentTitle:()=>d,default:()=>u,frontMatter:()=>l,metadata:()=>t,toc:()=>c});var s=i(74848),r=i(28453);const l={title:"\u56de\u6587\u7cfb\u5217\u603b\u7ed3",date:new Date("2020-12-23T15:23:34.000Z"),slug:"/pages/b10f9d/",categories:["\u7b97\u6cd5","\u7cfb\u5217"]},d=void 0,t={id:"\u9762\u8bd5\u6280\u5de7/\u7b97\u6cd5/\u7cfb\u5217/\u56de\u6587\u7cfb\u5217",title:"\u56de\u6587\u7cfb\u5217\u603b\u7ed3",description:"1332. \u5220\u9664\u56de\u6587\u5b50\u5e8f\u5217",source:"@site/docs/02.\u9762\u8bd5\u6280\u5de7/02.\u7b97\u6cd5/09.\u7cfb\u5217/02.\u56de\u6587\u7cfb\u5217.md",sourceDirName:"02.\u9762\u8bd5\u6280\u5de7/02.\u7b97\u6cd5/09.\u7cfb\u5217",slug:"/pages/b10f9d/",permalink:"/docs/pages/b10f9d/",draft:!1,unlisted:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/02.\u9762\u8bd5\u6280\u5de7/02.\u7b97\u6cd5/09.\u7cfb\u5217/02.\u56de\u6587\u7cfb\u5217.md",tags:[],version:"current",sidebarPosition:2,frontMatter:{title:"\u56de\u6587\u7cfb\u5217\u603b\u7ed3",date:"2020-12-23T15:23:34.000Z",slug:"/pages/b10f9d/",categories:["\u7b97\u6cd5","\u7cfb\u5217"]},sidebar:"interview",previous:{title:"Go \u5237\u9898\u6280\u5de7",permalink:"/docs/pages/5eba5e/"},next:{title:"\u725b\u5ba2\u7f51ACM\u6a21\u5f0f",permalink:"/docs/pages/0b4e09/"}},o={},c=[{value:"1332. \u5220\u9664\u56de\u6587\u5b50\u5e8f\u5217",id:"1332-\u5220\u9664\u56de\u6587\u5b50\u5e8f\u5217",level:2},{value:"266. \u56de\u6587\u6392\u5217",id:"266-\u56de\u6587\u6392\u5217",level:2},{value:"9. \u56de\u6587\u6570",id:"9-\u56de\u6587\u6570",level:2},{value:"409. \u6700\u957f\u56de\u6587\u4e32",id:"409-\u6700\u957f\u56de\u6587\u4e32",level:2},{value:"125. \u9a8c\u8bc1\u56de\u6587\u4e32",id:"125-\u9a8c\u8bc1\u56de\u6587\u4e32",level:2},{value:"680. \u9a8c\u8bc1\u56de\u6587\u5b57\u7b26\u4e32 \u2161",id:"680-\u9a8c\u8bc1\u56de\u6587\u5b57\u7b26\u4e32-\u2171",level:2},{value:"131. \u5206\u5272\u56de\u6587\u4e32",id:"131-\u5206\u5272\u56de\u6587\u4e32",level:2},{value:"1457. \u4e8c\u53c9\u6811\u4e2d\u7684\u4f2a\u56de\u6587\u8def\u5f84",id:"1457-\u4e8c\u53c9\u6811\u4e2d\u7684\u4f2a\u56de\u6587\u8def\u5f84",level:2},{value:"647. \u56de\u6587\u5b50\u4e32(Medium)",id:"647-\u56de\u6587\u5b50\u4e32medium",level:2},{value:"516. \u6700\u957f\u56de\u6587\u5b50\u5e8f\u5217(Medium)",id:"516-\u6700\u957f\u56de\u6587\u5b50\u5e8f\u5217medium",level:2},{value:"267. \u56de\u6587\u6392\u5217 II(Medium)",id:"267-\u56de\u6587\u6392\u5217-iimedium",level:2},{value:"1328. \u7834\u574f\u56de\u6587\u4e32",id:"1328-\u7834\u574f\u56de\u6587\u4e32",level:2},{value:"1216. \u9a8c\u8bc1\u56de\u6587\u5b57\u7b26\u4e32 III(Hard)",id:"1216-\u9a8c\u8bc1\u56de\u6587\u5b57\u7b26\u4e32-iiihard",level:2},{value:"1177. \u6784\u5efa\u56de\u6587\u4e32\u68c0\u6d4b(Medium)",id:"1177-\u6784\u5efa\u56de\u6587\u4e32\u68c0\u6d4bmedium",level:2}];function a(n){const e={a:"a",blockquote:"blockquote",code:"code",em:"em",h2:"h2",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",...(0,r.R)(),...n.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(e.h2,{id:"1332-\u5220\u9664\u56de\u6587\u5b50\u5e8f\u5217",children:(0,s.jsx)(e.a,{href:"https://leetcode-cn.com/problems/remove-palindromic-subsequences/",children:"1332. \u5220\u9664\u56de\u6587\u5b50\u5e8f\u5217"})}),"\n",(0,s.jsxs)(e.blockquote,{children:["\n",(0,s.jsxs)(e.p,{children:["\u7ed9\u4f60\u4e00\u4e2a\u5b57\u7b26\u4e32 ",(0,s.jsx)(e.code,{children:"s"}),"\uff0c\u5b83\u4ec5\u7531\u5b57\u6bcd ",(0,s.jsx)(e.code,{children:"'a'"})," \u548c ",(0,s.jsx)(e.code,{children:"'b'"})," \u7ec4\u6210\u3002\u6bcf\u4e00\u6b21\u5220\u9664\u64cd\u4f5c\u90fd\u53ef\u4ee5\u4ece ",(0,s.jsx)(e.code,{children:"s"})," \u4e2d\u5220\u9664\u4e00\u4e2a\u56de\u6587 ",(0,s.jsx)(e.strong,{children:"\u5b50\u5e8f\u5217"}),"\u3002\u8fd4\u56de\u5220\u9664\u7ed9\u5b9a\u5b57\u7b26\u4e32\u4e2d\u6240\u6709\u5b57\u7b26\uff08\u5b57\u7b26\u4e32\u4e3a\u7a7a\uff09\u7684\u6700\u5c0f\u5220\u9664\u6b21\u6570\u3002"]}),"\n"]}),"\n",(0,s.jsx)(e.p,{children:(0,s.jsx)(e.strong,{children:"\u6837\u4f8b"})}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{children:'Input\uff1as = "baabb"\nOutput\uff1a2\n\u89e3\u91ca\uff1a"baabb" -> "b" -> "". \n\u5148\u5220\u9664\u56de\u6587\u5b50\u5e8f\u5217 "baab"\uff0c\u7136\u540e\u518d\u5220\u9664 "b"\u3002\n\n\u4e5f\u53ef\u4ee5 \n"baabb" -> "bbb" -> ""\n'})}),"\n",(0,s.jsx)(e.p,{children:(0,s.jsx)(e.strong,{children:"\u601d\u8def"})}),"\n",(0,s.jsxs)(e.p,{children:["\u56e0\u4e3a\u53ea\u7531 ",(0,s.jsx)(e.code,{children:"a"})," \u548c ",(0,s.jsx)(e.code,{children:"b"})," \u7ec4\u6210\uff0c\u6240\u4ee5\u5bf9\u4e8e\u4efb\u4f55\u4e00\u4e2a\u5b57\u7b26\u4e32\uff0c\u6700\u591a\u53ea\u9700\u8981\u4e24\u6b21\u5c31\u53ef\u4ee5\u5b8c\u5168\u5220\u9664\u3002\u53ef\u4ee5\u7b2c\u4e00\u6b21\u5220\u9664\u5168A\uff0c\u7b2c\u4e8c\u6b21\u5220\u9664\u5168B\u3002\u53ea\u9700\u8981\u5206\u4e3a\u4e09\u79cd\u60c5\u51b5\uff1a\u7a7a\u5b57\u7b26\u662f 0\uff0c\u56de\u6587\u4e32\u8fd4\u56de 1\uff0c\u975e\u56de\u6587\u4e32\u8fd4\u56de 2"]}),"\n",(0,s.jsx)(e.p,{children:(0,s.jsx)(e.strong,{children:"\u4ee3\u7801"})}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-python",children:"class Solution:\n    def removePalindromeSub(self, s: str) -> int:\n        if not s: return 0 # \u7a7a\u5b57\u7b26\n        if s == s[::-1]: # \u56de\u6587\u4e32\n            return 1\n        else:  # \u975e\u56de\u6587\u4e32\n            return 2 \n"})}),"\n",(0,s.jsx)(e.h2,{id:"266-\u56de\u6587\u6392\u5217",children:(0,s.jsx)(e.a,{href:"https://leetcode-cn.com/problems/palindrome-permutation/",children:"266. \u56de\u6587\u6392\u5217"})}),"\n",(0,s.jsxs)(e.blockquote,{children:["\n",(0,s.jsx)(e.p,{children:"\u5224\u65ad\u8be5\u5b57\u7b26\u4e32\u4e2d\u662f\u5426\u53ef\u4ee5\u901a\u8fc7\u91cd\u65b0\u6392\u5217\u7ec4\u5408\uff0c\u5f62\u6210\u4e00\u4e2a\u56de\u6587\u5b57\u7b26\u4e32\u3002"}),"\n"]}),"\n",(0,s.jsx)(e.p,{children:(0,s.jsx)(e.strong,{children:"\u601d\u8def"})}),"\n",(0,s.jsx)(e.p,{children:"\u7edf\u8ba1\u8bcd\u9891\uff0c\u5224\u65ad\u662f\u5426\u5b58\u5728\u8d85\u8fc72\u4e2a\u7684\u5947\u6570\u8bcd\u9891"}),"\n",(0,s.jsx)(e.p,{children:(0,s.jsx)(e.strong,{children:"\u4ee3\u7801"})}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-python",children:"import collections\nclass Solution:\n    def canPermutePalindrome(self, s: str) -> bool:\n        word = collections.defaultdict(int)\n        for char in s:\n            word[char] += 1\n        \n        # 0 \u6216 1 \u4e2a\u5947\u6570\u9891\u6b21\n        odd = 0\n        for k, v in word.items():\n            if v % 2 == 1:\n                odd += 1\n        return odd <= 1\n"})}),"\n",(0,s.jsx)(e.h2,{id:"9-\u56de\u6587\u6570",children:(0,s.jsx)(e.a,{href:"https://leetcode-cn.com/problems/palindrome-number/",children:"9. \u56de\u6587\u6570"})}),"\n",(0,s.jsxs)(e.blockquote,{children:["\n",(0,s.jsxs)(e.p,{children:["\u5224\u65ad\u4e00\u4e2a\u6574\u6570\u662f\u5426\u662f\u56de\u6587\u6570\u3002\u53c2\u8003\uff1a",(0,s.jsx)(e.a,{href:"https://leetcode-cn.com/problems/palindrome-number/solution/dong-hua-hui-wen-shu-de-san-chong-jie-fa-fa-jie-ch/",children:"\u6559\u7a0b"})]}),"\n"]}),"\n",(0,s.jsx)(e.p,{children:(0,s.jsx)(e.strong,{children:"\u601d\u8def"})}),"\n",(0,s.jsxs)(e.ol,{children:["\n",(0,s.jsx)(e.li,{children:"\u8f6c\u6362\u6210\u5b57\u7b26\u4e32\uff0c\u5224\u65ad\u662f\u5426\u5339\u914d"}),"\n",(0,s.jsx)(e.li,{children:"\u7ffb\u8f6c\u6574\u6570\uff0c\u5224\u65ad\u662f\u5426\u5339\u914d"}),"\n",(0,s.jsx)(e.li,{children:"\u5de6\u53f3\u6307\u9488\uff0c\u5411\u4e2d\u95f4\u7f29"}),"\n"]}),"\n",(0,s.jsx)(e.p,{children:(0,s.jsx)(e.strong,{children:"\u4ee3\u7801"})}),"\n",(0,s.jsxs)(e.ol,{children:["\n",(0,s.jsxs)(e.li,{children:["\n",(0,s.jsx)(e.p,{children:"\u8f6c\u6362\u6210\u5b57\u7b26\u4e32\u5339\u914d"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-python",children:"class Solution:\n    def isPalindrome(self, x: int) -> bool:\n        s = str(x)\n        return s == s[::-1]\n"})}),"\n"]}),"\n",(0,s.jsxs)(e.li,{children:["\n",(0,s.jsxs)(e.p,{children:["\u7ffb\u8f6c\u6574\u6570\uff0c",(0,s.jsx)(e.code,{children:"123 --\x3e 321"})]}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-go",children:"func isPalindrome(x int) bool {\n    num := x \n    reverseNum := 0 \n    for x > 0 {\n        reverseNum = reverseNum * 10 + x % 10 // \u7ffb\u8f6c\n        x = x / 10\n    }\n    return num == reverseNum\n}\n"})}),"\n"]}),"\n",(0,s.jsxs)(e.li,{children:["\n",(0,s.jsx)(e.p,{children:"\u5de6\u53f3\u6307\u9488\uff0c\u5411\u4e2d\u95f4\u7f29"}),"\n",(0,s.jsxs)(e.p,{children:[(0,s.jsx)(e.strong,{children:"1"})," 23452 ",(0,s.jsx)(e.strong,{children:"1"})," \u5339\u914d\u6700\u5de6\u548c\u6700\u53f3\u76841"]}),"\n",(0,s.jsxs)(e.p,{children:[(0,s.jsx)(e.strong,{children:"2"})," 345 ",(0,s.jsx)(e.strong,{children:"2"})," \u5339\u914d\u6700\u5de6\u548c\u6700\u53f3\u76842"]}),"\n",(0,s.jsxs)(e.p,{children:[(0,s.jsx)(e.strong,{children:"3"})," 4 ",(0,s.jsx)(e.strong,{children:"5"})," \u5339\u914d\u5de6\u8fb9\u76843\uff0c\u548c\u53f3\u8fb9\u76845\uff0c\u4e0d\u7b49"]}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-go",children:"func isPalindrome(x int) bool {\n    if x < 0 {\n        return false \n    }\n    // \u6c42\u51fa\u6570\u5b57\u7684\u4f4d\u6570\n    digit := 1\n    for x / digit >= 10 { // \u7b49\u53f7\u5bb9\u6613\u6f0f\n        digit *= 10\n    }\n    // 1231 \u6c42\u51fa\u7684 digit \u662f 1000\n\n    for x > 0 {\n        left := x / digit // 1231 -> 1\n        right := x % 10  // 1231 -> 1\n        if left != right {\n            return false\n        }\n        x = (x % digit) / 10 // 1231 -> 23\n        digit = digit / 100 \n    }\n    return true \n}\n"})}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(e.h2,{id:"409-\u6700\u957f\u56de\u6587\u4e32",children:(0,s.jsx)(e.a,{href:"https://leetcode-cn.com/problems/longest-palindrome/",children:"409. \u6700\u957f\u56de\u6587\u4e32"})}),"\n",(0,s.jsxs)(e.blockquote,{children:["\n",(0,s.jsx)(e.p,{children:"\u7ed9\u5b9a\u4e00\u4e2a\u5305\u542b\u5927\u5199\u5b57\u6bcd\u548c\u5c0f\u5199\u5b57\u6bcd\u7684\u5b57\u7b26\u4e32\uff0c\u627e\u5230\u901a\u8fc7\u8fd9\u4e9b\u5b57\u6bcd\u6784\u9020\u6210\u7684\u6700\u957f\u7684\u56de\u6587\u4e32\u3002"}),"\n"]}),"\n",(0,s.jsx)(e.p,{children:(0,s.jsx)(e.strong,{children:"\u601d\u8def"})}),"\n",(0,s.jsxs)(e.p,{children:["\u672c\u9898\u548c ",(0,s.jsx)(e.a,{href:"https://leetcode-cn.com/problems/palindrome-permutation/",children:"266 \u56de\u6587\u6392\u5217"})," \u4e00\u6837\uff0c\u53ea\u662f\u591a\u4e86\u7edf\u8ba1\u5947\u6570\u7684\u4e2a\u6570\u3002\u5f53\u5947\u6570\u4e2a\u6570\u5927\u4e8e 0 \u7684\u65f6\u5019\uff0c\u51cf\u53bb ",(0,s.jsx)(e.code,{children:"\u5947\u6570\u7684\u4e2a\u6570 - 1"})," \u5c31\u53ef\u4ee5\u5c06\u5b57\u6bcd\u7684\u51fa\u73b0\u9891\u7387\u4ece\u5947\u6570\u53d8\u6210\u5076\u6570\u3002\u51cf\u4e00\u662f\u56e0\u4e3a\uff0c\u53ea\u5141\u8bb8\u4e00\u4e2a\u5947\u6570\u3002"]}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-go",children:"func longestPalindrome(s string) int {\n    word := make(map[rune]int)\n\n    for _, char := range s {\n        word[char]++\n    }\n\n    oddNum := 0\n    minOddNum := len(s)\n    \n    for _, v := range word {\n        if v % 2 == 1 {\n            oddNum++\n            if v < minOddNum {\n                minOddNum = v \n            }\n        } \n    }\n\n    var ans int \n\n    if oddNum > 0 {\n        ans = len(s) - (oddNum - 1)\n    } else {\n        ans = len(s)\n    }\n    \n    return ans \n}\n"})}),"\n",(0,s.jsx)(e.h2,{id:"125-\u9a8c\u8bc1\u56de\u6587\u4e32",children:(0,s.jsx)(e.a,{href:"https://leetcode-cn.com/problems/valid-palindrome/",children:"125. \u9a8c\u8bc1\u56de\u6587\u4e32"})}),"\n",(0,s.jsxs)(e.blockquote,{children:["\n",(0,s.jsx)(e.p,{children:"\u7ed9\u5b9a\u4e00\u4e2a\u5b57\u7b26\u4e32\uff0c\u9a8c\u8bc1\u5b83\u662f\u5426\u662f\u56de\u6587\u4e32\uff0c\u53ea\u8003\u8651\u5b57\u6bcd\u548c\u6570\u5b57\u5b57\u7b26\uff0c\u53ef\u4ee5\u5ffd\u7565\u5b57\u6bcd\u7684\u5927\u5c0f\u5199\u3002"}),"\n"]}),"\n",(0,s.jsx)(e.p,{children:(0,s.jsx)(e.strong,{children:"\u6837\u4f8b"})}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{children:'Input: "A man, a plan, a canal: Panama"\nOutput: true\n'})}),"\n",(0,s.jsx)(e.p,{children:(0,s.jsx)(e.strong,{children:"\u4ee3\u7801"})}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-go",children:"func isAlnum (char byte) bool{\n    return (char >='A' && char <='Z') ||\n           (char >='a' && char <='z') ||\n           (char >='0' && char <='9')\n}\nfunc isPalindrome(s string) bool {\n    s = strings.ToLower(s)\n    for i, j:=0, len(s) - 1; i < j; {\n        for i < j && !isAlnum(s[i]) { // \u6392\u9664\u6389\u975e\u5b57\u6bcd\u6570\u5b57\u7684\u5b57\u7b26\n            i++\n        }\n        for i < j && !isAlnum(s[j]) {\n            j--\n        }\n        if i >= j {\n            break \n        }\n        if s[i] != s[j] {\n            return false \n        }\n        i++\n        j--\n    }\n    return true \n}\n"})}),"\n",(0,s.jsx)(e.h2,{id:"680-\u9a8c\u8bc1\u56de\u6587\u5b57\u7b26\u4e32-\u2171",children:(0,s.jsx)(e.a,{href:"https://leetcode-cn.com/problems/valid-palindrome-ii/",children:"680. \u9a8c\u8bc1\u56de\u6587\u5b57\u7b26\u4e32 \u2161"})}),"\n",(0,s.jsxs)(e.blockquote,{children:["\n",(0,s.jsxs)(e.p,{children:["\u7ed9\u5b9a\u4e00\u4e2a\u975e\u7a7a\u5b57\u7b26\u4e32 ",(0,s.jsx)(e.code,{children:"s"}),"\uff0c",(0,s.jsx)(e.strong,{children:"\u6700\u591a"}),"\u5220\u9664\u4e00\u4e2a\u5b57\u7b26\u3002\u5224\u65ad\u662f\u5426\u80fd\u6210\u4e3a\u56de\u6587\u5b57\u7b26\u4e32\u3002"]}),"\n"]}),"\n",(0,s.jsx)(e.p,{children:"\u601d\u8def\uff1a \u4f7f\u7528\u9012\u5f52\u5206\u60c5\u51b5\u5224\u65ad"}),"\n",(0,s.jsx)(e.p,{children:(0,s.jsx)(e.strong,{children:"\u4ee3\u7801"})}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-go",children:"func isPalindrome(s string, i, j int) bool {\n    for i < j {\n       if s[i] != s[j] {\n           return false\n       }\n       i++\n       j--\n    }\n    return true \n}\n\nfunc validPalindrome(s string) bool {\n   if len(s) == 0 || len(s) == 1 {\n       return true\n   }\n\n   for i, j:= 0, len(s) - 1; i < j;{\n       if s[i] == s[j] {\n           i++\n           j--\n       } else {\n           return isPalindrome(s, i + 1, j) || isPalindrome(s, i, j - 1) \n       }\n   }\n   return true \n}\n"})}),"\n",(0,s.jsx)(e.h2,{id:"131-\u5206\u5272\u56de\u6587\u4e32",children:(0,s.jsx)(e.a,{href:"https://leetcode-cn.com/problems/palindrome-partitioning/",children:"131. \u5206\u5272\u56de\u6587\u4e32"})}),"\n",(0,s.jsxs)(e.blockquote,{children:["\n",(0,s.jsxs)(e.p,{children:["\u7ed9\u5b9a\u4e00\u4e2a\u5b57\u7b26\u4e32 ",(0,s.jsx)(e.em,{children:"s"}),"\uff0c\u5c06 ",(0,s.jsx)(e.em,{children:"s"})," \u5206\u5272\u6210\u4e00\u4e9b\u5b50\u4e32\uff0c\u4f7f\u6bcf\u4e2a\u5b50\u4e32\u90fd\u662f\u56de\u6587\u4e32\u3002"]}),"\n",(0,s.jsx)(e.p,{children:'\u8f93\u5165 "aab"  \u8fd4\u56de [ ["aa","b"],  ["a","a","b"]]'}),"\n"]}),"\n",(0,s.jsx)(e.p,{children:"\u601d\u8def\uff1a\u4f7f\u7528\u56de\u6eaf\u7b97\u6cd5\u7684\u5207\u5272\u95ee\u9898"}),"\n",(0,s.jsx)(e.p,{children:(0,s.jsx)(e.strong,{children:"\u4ee3\u7801"})}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-python",children:'def backtracking(s, ans, startIndex, tmp):\n    if startIndex >= len(s):\n        ans.append(tmp[:])\n    \n    for i in range(startIndex, len(s)):\n        if isValid(s[startIndex: i + 1]):\n            tmp.append(s[startIndex: i + 1]) # \u5207\u5272\n            backtracking(s, ans, i + 1, tmp) \n            tmp.pop()\n    \ndef isValid(s):\n    """ \u9a8c\u8bc1\u662f\u5426\u662f\u56de\u6587\u5b57\u7b26\u4e32 """\n    i, j = 0, len(s) - 1\n    while i < j:\n        if s[i] != s[j]:\n            return False \n        i += 1\n        j -= 1\n    return True \n\nclass Solution:\n    def partition(self, s: str) -> List[List[str]]:\n        ans = []\n        backtracking(s, ans, 0, [])\n        return ans \n'})}),"\n",(0,s.jsx)(e.h2,{id:"1457-\u4e8c\u53c9\u6811\u4e2d\u7684\u4f2a\u56de\u6587\u8def\u5f84",children:(0,s.jsx)(e.a,{href:"https://leetcode-cn.com/problems/pseudo-palindromic-paths-in-a-binary-tree/",children:"1457. \u4e8c\u53c9\u6811\u4e2d\u7684\u4f2a\u56de\u6587\u8def\u5f84"})}),"\n",(0,s.jsxs)(e.blockquote,{children:["\n",(0,s.jsxs)(e.p,{children:["\u6839\u5230\u53f6\u5b50\u8282\u70b9\u7684\u6240\u6709\u8def\u5f84\u4e2d ",(0,s.jsx)(e.strong,{children:"\u4f2a\u56de\u6587"})," \u8def\u5f84\u7684\u6570\u76ee\u3002"]}),"\n"]}),"\n",(0,s.jsx)(e.p,{children:"\u601d\u8def\uff1a \u4e8c\u53c9\u6811\u904d\u5386 + 266.\u56de\u6587\u6392\u5217 \u7ed3\u5408"}),"\n",(0,s.jsx)(e.p,{children:(0,s.jsx)(e.strong,{children:"\u4ee3\u7801"})}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-go",children:"func isPseudoPalindromic() bool{ // 226 \u56de\u6587\u6392\u5217 \u5224\u65ad\u662f\u5426\u56de\u6587\u6392\u5217\n    oddNum := 0\n    for _, v := range nodeDict {\n        if v % 2 == 1 {\n            oddNum++\n        }\n    }\n    return oddNum < 2\n}\n\nfunc dfs(root * TreeNode) {\n    if root == nil {\n        return \n    }\n\n    nodeDict[root.Val]++\n\n    if root.Left == nil && root.Right == nil { // \u5982\u679c\u662f\u53f6\u5b50\u8282\u70b9\n        if isPseudoPalindromic(){\n            ans++\n        }\n    }\n    dfs(root.Left)\n    dfs(root.Right)\n    nodeDict[root.Val]--    \n}\n\nvar nodeDict map[int]int // \u5168\u5c40\u53d8\u91cf\nvar ans int \n\nfunc pseudoPalindromicPaths (root *TreeNode) int {\n    nodeDict = make(map[int]int, 10)\n    ans = 0\n    dfs(root) // \u904d\u5386\n    return ans\n}\n"})}),"\n",(0,s.jsx)(e.h2,{id:"647-\u56de\u6587\u5b50\u4e32medium",children:(0,s.jsx)(e.a,{href:"https://leetcode-cn.com/problems/palindromic-substrings/",children:"647. \u56de\u6587\u5b50\u4e32(Medium)"})}),"\n",(0,s.jsxs)(e.blockquote,{children:["\n",(0,s.jsx)(e.p,{children:"\u8ba1\u7b97\u8fd9\u4e2a\u5b57\u7b26\u4e32\u4e2d\u6709\u591a\u5c11\u4e2a\u56de\u6587\u5b50\u4e32\u3002"}),"\n"]}),"\n",(0,s.jsx)(e.p,{children:"\u601d\u8def1\uff1a\u4e24\u5c42\u5faa\u73af\u904d\u5386\uff0c\u5224\u65ad\u662f\u5426\u662f\u56de\u6587\u4e32\u3002\u65f6\u95f4\u590d\u6742\u5ea6 $O(n^3)$"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-go",children:"var ans int \n\nfunc isPalindrome(s string, i, j int) bool {\n    for i < j {\n       if s[i] != s[j] {\n           return false\n       }\n       i++\n       j--\n    }\n    return true \n}\n\nfunc countSubstrings(s string) int {\n    ans = 0\n    for i:= 0; i < len(s); i++ {\n        for j:= i; j < len(s); j++ {\n            if isPalindrome(s, i, j) {\n                ans++\n            }\n        }\n    }\n    return ans \n}\n"})}),"\n",(0,s.jsx)(e.p,{children:"\u601d\u8def2\uff1a\u52a8\u6001\u89c4\u5212"}),"\n",(0,s.jsxs)(e.p,{children:["\u4ece\u57fa\u7840\u60c5\u51b5\u5411\u5916\u6269\u5c55\uff0c",(0,s.jsx)(e.code,{children:"dp[i][j]"})," \u8bb0\u5f55\u4e86 i, j \u533a\u95f4\u662f\u5426\u662f\u56de\u6587\u4e32"]}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-go",children:"func countSubstrings(s string) int {\n    dp := make([][]bool, len(s))\n    for i:= 0; i < len(s); i++ {\n        dp[i] = make([]bool, len(s))\n    }\n    count := 0\n    for j:= 0; j < len(s); j++ { //\u904d\u5386\u7684\u987a\u5e8f\u8981\u6ce8\u610f\n        for i:= 0; i <= j; i++ {\n            if i == j { // \u57fa\u7840\u60c5\u51b51: aba \u4e2d\u95f4\u5143\u7d20\u662f\u5947\u6570\u6b21\n                dp[i][j] = true\n                count++\n            } else if j - i == 1 && s[i] == s[j] { // \u57fa\u7840\u60c5\u51b51: aa \u6ca1\u6709\u4e2d\u95f4\u5143\u7d20\n                dp[i][j] = true\n                count++\n            } else if j - i > 1 && s[i] == s[j] && dp[i + 1][j - 1]{ // \u6269\u5c55\n                dp[i][j] = true\n                count++\n            }\n        }\n    }\n    return count \n}\n"})}),"\n",(0,s.jsx)(e.h2,{id:"516-\u6700\u957f\u56de\u6587\u5b50\u5e8f\u5217medium",children:(0,s.jsx)(e.a,{href:"https://leetcode-cn.com/problems/longest-palindromic-subsequence/",children:"516. \u6700\u957f\u56de\u6587\u5b50\u5e8f\u5217(Medium)"})}),"\n",(0,s.jsxs)(e.blockquote,{children:["\n",(0,s.jsx)(e.p,{children:"\u627e\u5230\u7ed9\u5b9a\u5b57\u7b26\u4e32s \u7684\u6700\u957f\u7684\u56de\u6587\u5b50\u5e8f\u5217\uff0c\u5e76\u8fd4\u56de\u5176\u6700\u5927\u957f\u5ea6"}),"\n",(0,s.jsxs)(e.p,{children:["\u4e4b\u524d\u5199\u7684\u89e3\u7b54\uff1a ",(0,s.jsx)(e.a,{href:"/pages/a0c777/",children:"516. \u6700\u957f\u56de\u6587\u5b50\u5e8f\u5217(Medium)"})]}),"\n"]}),"\n",(0,s.jsx)(e.p,{children:"\u601d\u8def1\uff1a\u5728125.\u9a8c\u8bc1\u56de\u6587\u4e32\u7684\u57fa\u7840\u4e0a\u8fdb\u884c\u4fee\u6539\uff0c\u5728\u5224\u65ad\u6761\u4ef6\u4e0a\uff0c\u5f53 s[i] != s[j] \u7684\u65f6\u5019\uff0c\u8c03\u8fc7\u5de6\u8fb9\u6307\u9488\u6216\u8005\u53f3\u8fb9\u6307\u9488\u3002\u4f7f\u7528\u9012\u5f52\u5b9e\u73b0\u6bd4\u8f83\u7b80\u5355"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-go",children:"var ans int \n\nfunc longestPalindromeSubseq(s string) int {\n    if len(s) < 2 {\n        return len(s)\n    }\n    \n    ans = 1\n\n    for i:= 0; i < len(s); i++ {\n        expendAroundCenter(s, i - 1, i + 1, 0)\n        expendAroundCenter(s, i, i + 1, 0)\n    }\n    return ans \n}\n\nfunc max(a, b int) int {\n    if a > b {\n        return a\n    }\n    return b \n}\n\nfunc expendAroundCenter(s string, start int, end int , deleteLetter int ) {\n    if start < 0 || end >= len(s) {\n        return \n    }\n    \n    if s[start] == s[end] {\n        ans = max(ans, end - start + 1 - deleteLetter)\n        expendAroundCenter(s, start - 1, end + 1, deleteLetter)\n    } else {\n        expendAroundCenter(s, start, end + 1, deleteLetter + 1)\n        expendAroundCenter(s, start - 1, end, deleteLetter + 1)\n    }\n}\n"})}),"\n",(0,s.jsx)(e.p,{children:"\u601d\u8def2\uff1a\u52a8\u6001\u89c4\u5212"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-go",children:"func max(a,b int) int {\n    if a > b {\n        return a \n    }\n    return b \n}\n\nfunc longestPalindromeSubseq(s string) int {\n    n := len(s)\n    if n < 2 {\n        return n\n    }\n\n    dp := make([][]int, n)\n    for i:= 0; i < n; i++ {\n        dp[i] = make([]int, n)\n    }\n\n    for i:= n - 1; i >= 0; i-- { // \u5fc5\u987b\u4fdd\u8bc1 i \u8ba1\u7b97\u7684\u65f6\u5019, i + 1 \u5df2\u7ecf\u8ba1\u7b97\u597d\u4e86 ==> \u4ece\u53f3\u5411\u5de6\n        dp[i][i] = 1 // \u53ea\u6709\u4e00\u4e2a\u5b57\u7b26\u957f\u5ea6\u4e3a 1\n        for j:= i + 1; j < n; j++ { // \u5fc5\u987b\u4fdd\u8bc1 j \u8ba1\u7b97\u7684\u65f6\u5019\uff0cj - 1 \u5df2\u7ecf\u8ba1\u7b97\u597d\u4e86 ==> \u4ece\u5de6\u5411\u53f3\n            if s[i] == s[j] {\n                dp[i][j] = dp[i + 1][j - 1] + 2\n            } else {\n                dp[i][j] = max(dp[i + 1][j], dp[i][j - 1])\n            }\n        }\n    }\n    \n    return dp[0][n - 1]\n}\n"})}),"\n",(0,s.jsx)(e.h2,{id:"267-\u56de\u6587\u6392\u5217-iimedium",children:(0,s.jsx)(e.a,{href:"https://leetcode-cn.com/problems/palindrome-permutation-ii/",children:"267. \u56de\u6587\u6392\u5217 II(Medium)"})}),"\n",(0,s.jsxs)(e.blockquote,{children:["\n",(0,s.jsx)(e.p,{children:"\u7ed9\u5b9a\u5b57\u7b26\u4e32 s \uff0c\u8fd4\u56de\u91cd\u65b0\u6392\u5217\u7ec4\u5408\u540e\u6240\u6709\u53ef\u80fd\u7684\u56de\u6587\u5b57\u7b26\u4e32\u3002\u5e76\u53bb\u9664\u6240\u6709\u91cd\u590d\u7684\u7ec4\u5408\u3002"}),"\n",(0,s.jsx)(e.p,{children:'\u5982\u8f93\u5165 "aabb"\uff0c\u8fd4\u56de ["abba", "baab"]\u3002\u5982\u679c\u4e0d\u80fd\u5f62\u6210\u4efb\u4f55\u56de\u6587\u6392\u5217\u65f6\uff0c\u5219\u8fd4\u56de\u4e00\u4e2a\u7a7a\u5217\u8868\u3002'}),"\n"]}),"\n",(0,s.jsx)(e.p,{children:"\u672c\u9898\u524d\u534a\u90e8\u5206\u5b9e\u73b0\u9a8c\u8bc1\u56de\u6587\u4e32\uff0c\u540c 125.\u9a8c\u8bc1\u56de\u6587\u4e32\u4e00\u6837\u3002\u540e\u534a\u90e8\u5206\u7684\u96be\u70b9\u5728\u4e8e\uff0c\u5982\u4f55\u53bb\u91cd\u3002"}),"\n",(0,s.jsx)(e.p,{children:"\u601d\u8def1\uff1a\u4f7f\u7528\u54c8\u5e0c\u8868\u53bb\u91cd"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-python",children:'def backtracing(s, ans, count, tmp):\n    if len(tmp) == len(s): # \u627e\u5230\u7b54\u6848\n        ans.append(tmp)\n        return\n    \n    for k, v in count.items():\n        if v > 0:\n            newTmp = k + tmp + k\n            count[k] -= 2\n            backtracing(s, ans, count, newTmp)\n            count[k] += 2 # \u72b6\u6001\u56de\u6eaf\n\nclass Solution:\n    def generatePalindromes(self, s: str) -> List[str]:\n        # 1. \u68c0\u67e5\u662f\u5426\u80fd\u591f\u7ec4\u6210\u56de\u6587\u5b57\u7b26\n        count = collections.defaultdict(int)\n        for char in s: # \u54c8\u5e0c\u8868\n            count[char] += 1\n        \n        oddNum = 0\n        oddString = ""\n        for k, v in count.items():\n            if v % 2 == 1:\n                oddNum += 1\n                oddString = k \n        if oddNum > 1 : # \u4e0d\u662f\u56de\u6587\u5b57\u7b26\u4e32\n            return []\n        \n        if oddString != "": # \u5982\u679c\u6709\u5947\u6570\u5b57\u7b26\u4e32\u7684\u8bdd\uff0c\u5c31\u653e\u4e2d\u95f4\uff0c\u5f88\u5bb9\u6613\u6f0f\u6389\n            count[oddString] -= 1\n\n        # 2. \u6c42\u51fa\u6240\u6709\u7ec4\u5408\n        ans = []\n        backtracing(s, ans, count, oddString)\n        return ans \n'})}),"\n",(0,s.jsx)(e.h2,{id:"1328-\u7834\u574f\u56de\u6587\u4e32",children:(0,s.jsx)(e.a,{href:"https://leetcode-cn.com/problems/break-a-palindrome/",children:"1328. \u7834\u574f\u56de\u6587\u4e32"})}),"\n",(0,s.jsxs)(e.blockquote,{children:["\n",(0,s.jsxs)(e.p,{children:["\u7ed9\u4f60\u4e00\u4e2a\u56de\u6587\u5b57\u7b26\u4e32 \uff0c\u8bf7\u4f60\u5c06\u5176\u4e2d ",(0,s.jsx)(e.strong,{children:"\u4e00\u4e2a"})," \u5b57\u7b26\u7528\u4efb\u610f\u5c0f\u5199\u82f1\u6587\u5b57\u6bcd\u66ff\u6362\uff0c\u4f7f\u5f97\u7ed3\u679c\u5b57\u7b26\u4e32\u7684\u5b57\u5178\u5e8f\u6700\u5c0f\uff0c\u4e14 ",(0,s.jsx)(e.strong,{children:"\u4e0d\u662f"})," \u56de\u6587\u4e32\u3002\u5982\u679c\u65e0\u6cd5\u505a\u5230\uff0c\u5219\u8fd4\u56de\u4e00\u4e2a\u7a7a\u4e32\u3002"]}),"\n",(0,s.jsx)(e.p,{children:'\u8f93\u5165 "abccba" \u8fd4\u56de "aaccba"'}),"\n"]}),"\n",(0,s.jsx)(e.p,{children:"\u601d\u8def\uff1a \u603b\u7ed3\u89c4\u5f8b"}),"\n",(0,s.jsx)(e.p,{children:(0,s.jsx)(e.strong,{children:"\u4ee3\u7801"})}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-go",children:'/*\n   \u89c4\u5f8b\u603b\u7ed3\n   1. \u5f53\u957f\u5ea6\u5c0f\u4e8e\u7b49\u4e8e1 \u4e00\u5b9a\u662f\u56de\u6587\u4e32\uff0c\u8fd4\u56de ""\n   2. \u5f53\u524d\u534a\u90e8\u5206\u5b58\u5728\u975e a \u7684\u5b57\u7b26\uff0c\u4fee\u6539\u6210a\uff0c\u8fd4\u56de\n   3. \u5f53\u524d\u534a\u90e8\u5206\u90fd\u662fa\uff0c\u76f4\u63a5\u4fee\u6539\u6700\u540e\u4e00\u4e2a\u5b57\u7b26\u4e3a b\n*/\n\nfunc breakPalindrome(palindrome string) string {\n    ans := strings.Split(palindrome, "") // \u5b57\u7b26\u4e32\u5207\u5206\u4e3a \u5b57\u7b26\u6570\u7ec4\n    n := len(palindrome)\n    if n < 2 {\n        return ""\n    }\n    var flag bool\n    for i := 0; i < n / 2; i++ {\n        if ans[i] != "a" {\n            ans[i] = "a"\n            flag = true\n            break \n        }\n    }\n\n    if flag { // 2. \u5f53\u524d\u534a\u90e8\u5206\u5b58\u5728\u975e a \u7684\u5b57\u7b26\uff0c\u4fee\u6539\u6210a\uff0c\u8fd4\u56de\n        return strings.Join(ans, "")\n    } else { // 3. \u5f53\u524d\u534a\u90e8\u5206\u90fd\u662fa\uff0c\u76f4\u63a5\u4fee\u6539\u6700\u540e\u4e00\u4e2a\u5b57\u7b26\u4e3a b\n        ans[len(ans) - 1] = "b"\n        return strings.Join(ans, "")\n    }\n}\n'})}),"\n",(0,s.jsx)(e.h2,{id:"1216-\u9a8c\u8bc1\u56de\u6587\u5b57\u7b26\u4e32-iiihard",children:(0,s.jsx)(e.a,{href:"https://leetcode-cn.com/problems/valid-palindrome-iii/",children:"1216. \u9a8c\u8bc1\u56de\u6587\u5b57\u7b26\u4e32 III(Hard)"})}),"\n",(0,s.jsxs)(e.blockquote,{children:["\n",(0,s.jsx)(e.p,{children:"\u5224\u65ad\uff0c\u662f\u5426\u80fd\u4ece s \u4e2d\u6700\u591a\u5220\u9664 k \u4e2a\u5143\u7d20\uff0c\u53ef\u4ee5\u5f62\u6210 \u56de\u6587\u5b57\u7b26\u4e32"}),"\n"]}),"\n",(0,s.jsxs)(e.p,{children:["\u672c\u8d28\u4e0a\u5c31\u662f\u6c42\u51fa\u6700\u957f\u56de\u6587\u5b50\u5e8f\u5217\uff0c\u867d\u8bf4\u662f Hard\uff0c\u4f46\u662f\u672c\u8d28\u4e0a\uff0c\u5c31\u662f ",(0,s.jsx)(e.strong,{children:"516.\u6700\u957f\u56de\u6587\u5b50\u5e8f\u5217"})]}),"\n",(0,s.jsx)(e.p,{children:(0,s.jsx)(e.strong,{children:"\u4ee3\u7801"})}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-go",children:"func max(a, b int) int {\n    if a > b {\n        return a\n    }\n    return b\n}\n// 516.\u6700\u957f\u56de\u6587\u5b50\u5e8f\u5217\nfunc longestPalindromeSubseq(s string) int {\n    if len(s) < 2 {\n        return len(s)\n    }\n\n    dp := make([][]int, len(s))\n    for i:= 0; i < len(s); i++ {\n        dp[i] = make([]int, len(s))\n    }\n\n    for i := len(s) - 1; i >= 0 ; i-- {\n        for j := i; j < len(s); j++ {\n            if i == j { // \u57fa\u7840\u60c5\u5f62\n                dp[i][j] = 1\n            } else if s[i] == s[j] {\n                dp[i][j] = dp[i + 1][j - 1] + 2\n            } else {\n                dp[i][j] = max(dp[i + 1][j], dp[i][j - 1]) // \u63a8\u51fa i \u662f\u4ece\u53f3\u5411\u5de6 j \u662f\u4ece\u4e0b\u5411\u4e0a\n            }\n        }\n    }\n    return dp[0][len(s) - 1]\n}\n\nfunc isValidPalindrome(s string, k int) bool {\n    vaildLength := longestPalindromeSubseq(s)\n    return len(s) - vaildLength  <= k \n}\n"})}),"\n",(0,s.jsx)(e.h2,{id:"1177-\u6784\u5efa\u56de\u6587\u4e32\u68c0\u6d4bmedium",children:(0,s.jsx)(e.a,{href:"https://leetcode-cn.com/problems/can-make-palindrome-from-substring/",children:"1177. \u6784\u5efa\u56de\u6587\u4e32\u68c0\u6d4b(Medium)"})}),"\n",(0,s.jsxs)(e.blockquote,{children:["\n",(0,s.jsx)(e.p,{children:"\u68c0\u67e5 s \u7684\u5b50\u4e32\u662f\u4e0d\u662f\u7b26\u5408\u6761\u4ef6\uff0c\u7ed9\u5b9a\u4e09\u4e2a\u6570(left, right, k)\uff0c \u5224\u65ad\u80fd\u4e0d\u80fd\u5728\u81f3\u591a\u66ff\u6362 k \u4e2a\u5b57\u6bcd\u7684\u60c5\u51b5\u4e0b\uff0c\u4f7f\u5f97 s[left, right+1] \u5b50\u4e32\u7684\u4efb\u610f\u6392\u5217\u6210\u4e3a\u56de\u6587\u4e32"}),"\n"]}),"\n",(0,s.jsx)(e.p,{children:"\u601d\u8def\uff1a"}),"\n",(0,s.jsxs)(e.p,{children:["\u672c\u9898\u7b97\u662f\u4e0a\u9762\u4f17\u591a\u9898\u76ee\u7684\u96c6\u5408\uff0c\u7528\u6211\u4eec\u539f\u5148 ",(0,s.jsx)(e.code,{children:"\u54c8\u5e0c + \u5947\u6570\u4e2a\u6570 < 2"})," \u7684\u65b9\u6cd5\u53bb\u505a\u53ef\u4ee5\u7b80\u5355\u5957\u7528\uff0c\u4f46\u662f\u65e0\u6cd5\u4f1a\u8d85\u65f6\uff0c\u539f\u56e0\u662f\u591a\u6b21\u8ba1\u7b97\u54c8\u5e0c\u8868\u5f88\u8017\u65f6\uff0c\u800c\u4e14\u6709\u5f88\u591a\u7684\u91cd\u590d\u8ba1\u7b97\u3002\u6211\u4eec\u53ef\u4ee5\u628a\u54c8\u5e0c\u8868\u7684\u8ba1\u7b97\u4e2d\u95f4\u7ed3\u679c\u4fdd\u5b58\uff0c\u51cf\u5c11\u91cd\u590d\u8ba1\u7b97\u3002 \u8fd9\u91cc\u53c2\u8003\u4e86 ",(0,s.jsx)(e.a,{href:"https://leetcode-cn.com/problems/can-make-palindrome-from-substring/solution/dong-tai-gui-hua-ha-xi-bu-shi-zui-you-dan-si-xiang/",children:"\u8fd9\u4e2a\u6559\u7a0b"})]}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-go",children:"// \u8d85\u65f6 29 / 31\nfunc isPailWord(s string, left int, right int, k int) bool {\n    count := make(map[byte]int, right - left + 1)\n    for i := left; i <= right; i++ { // \u8fd9\u91cccount\u91cd\u590d\u8ba1\u7b97\u4e86\n        count[s[i]]++\n    }\n    oddNum := 0\n    for _, v := range count {\n        if v % 2 == 1 {\n            oddNum++\n        }\n    }\n\n    return oddNum - k * 2 < 2 // k \u662f\u66f4\u6539\uff0c\u4e00\u4e2a\u62b5\u4e24\u4e2a\u7528 \u5982 abc -> aba \u5947\u6570\u4ece 3 \u53d8\u6210 2\n}\n\nfunc canMakePaliQueries(s string, queries [][]int) []bool {\n    ans := make([]bool, len(queries)) \n    for i := 0; i < len(queries); i++ {\n        subAns := isPailWord(s, queries[i][0], queries[i][1], queries[i][2])\n        ans[i] = subAns\n    }\n    return ans \n}\n"})}),"\n",(0,s.jsx)(e.p,{children:"\u4f7f\u7528\u52a8\u6001\u89c4\u5212\uff0c\u4f18\u5316\u54c8\u5e0c\u8868\u7684\u67e5\u8be2\u6548\u7387"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-go",children:"func isPailWord(s string, left int, right int, k int) bool {\n    oddNum := 0\n    tempNum := 0\n    for i := 0; i < 26; i++ {\n        if left == 0 { // \u5bf9\u4e8e\u6700\u5de6\u4fa7\u7684\u5143\u7d20\u7279\u6b8a\u5904\u7406\n            tempNum = dp[right][i] - 0\n        } else {\n            tempNum = dp[right][i] - dp[left - 1][i]\n        }\n        \n        if tempNum % 2 == 1 {\n            oddNum++\n        }\n    }\n\n    return oddNum - k * 2 < 2  \n}\n\nvar dp [][]int \n\nfunc canMakePaliQueries(s string, queries [][]int) []bool {\n    // dp[i][j] i \u8bb0\u5f55\u7684\u662f\u524di\u4e2a\u7d22\u5f15\u4e2dj\u7684\u8bcd\u9891\n    dp = make([][]int, len(s))\n    for i:= 0; i < len(s); i++ {\n        dp[i] = make([]int, 26) // 26\u4e2a\u5b57\u6bcd\n    }\n\n    for i, char := range s { // \u53ea\u904d\u5386\u4e00\u904d\u7edf\u8ba1\u8bcd\u9891\n        if i > 0 {\n            copy(dp[i], dp[i - 1]) // \u8bb0\u5f55\u524d\u9762\u7684\u72b6\u6001\uff0c\u4e00\u5b9a\u8981\u6ce8\u610f\u662f\u503c\u590d\u5236\n        }\n        dp[i][char - 'a']++ \n    }\n\n    ans := make([]bool, len(queries)) \n    for i := 0; i < len(queries); i++ {\n        subAns := isPailWord(s, queries[i][0], queries[i][1], queries[i][2])\n        ans[i] = subAns\n    }\n    return ans \n}\n"})})]})}function u(n={}){const{wrapper:e}={...(0,r.R)(),...n.components};return e?(0,s.jsx)(e,{...n,children:(0,s.jsx)(a,{...n})}):a(n)}},28453:(n,e,i)=>{i.d(e,{R:()=>d,x:()=>t});var s=i(96540);const r={},l=s.createContext(r);function d(n){const e=s.useContext(l);return s.useMemo((function(){return"function"==typeof n?n(e):{...e,...n}}),[e,n])}function t(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(r):n.components||r:d(n.components),s.createElement(l.Provider,{value:e},n.children)}}}]);