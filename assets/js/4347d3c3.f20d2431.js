"use strict";(self.webpackChunkcodepainter=self.webpackChunkcodepainter||[]).push([[1718],{65732:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>r,contentTitle:()=>o,default:()=>u,frontMatter:()=>d,metadata:()=>l,toc:()=>a});var s=t(74848),i=t(28453);const d={title:"109. \u6709\u5e8f\u94fe\u8868\u8f6c\u6362\u4e8c\u53c9\u641c\u7d22\u6811(Medium)",date:new Date("2020-12-10T17:24:22.000Z"),slug:"/pages/d77bca/",categories:["\u6570\u636e\u7ed3\u6784","\u94fe\u8868"]},o=void 0,l={id:"\u9762\u8bd5\u6280\u5de7/\u6570\u636e\u7ed3\u6784/\u94fe\u8868/\u6709\u5e8f\u94fe\u8868\u8f6c\u6362\u4e8c\u53c9\u641c\u7d22\u6811.109",title:"109. \u6709\u5e8f\u94fe\u8868\u8f6c\u6362\u4e8c\u53c9\u641c\u7d22\u6811(Medium)",description:"\u9898\u76ee\u63cf\u8ff0",source:"@site/docs/02.\u9762\u8bd5\u6280\u5de7/03.\u6570\u636e\u7ed3\u6784/01.\u94fe\u8868/11.\u6709\u5e8f\u94fe\u8868\u8f6c\u6362\u4e8c\u53c9\u641c\u7d22\u6811.109.md",sourceDirName:"02.\u9762\u8bd5\u6280\u5de7/03.\u6570\u636e\u7ed3\u6784/01.\u94fe\u8868",slug:"/pages/d77bca/",permalink:"/docs/pages/d77bca/",draft:!1,unlisted:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/02.\u9762\u8bd5\u6280\u5de7/03.\u6570\u636e\u7ed3\u6784/01.\u94fe\u8868/11.\u6709\u5e8f\u94fe\u8868\u8f6c\u6362\u4e8c\u53c9\u641c\u7d22\u6811.109.md",tags:[],version:"current",sidebarPosition:11,frontMatter:{title:"109. \u6709\u5e8f\u94fe\u8868\u8f6c\u6362\u4e8c\u53c9\u641c\u7d22\u6811(Medium)",date:"2020-12-10T17:24:22.000Z",slug:"/pages/d77bca/",categories:["\u6570\u636e\u7ed3\u6784","\u94fe\u8868"]},sidebar:"interview",previous:{title:"234. \u56de\u6587\u94fe\u8868",permalink:"/docs/pages/43c481/"},next:{title:"148. \u6392\u5e8f\u94fe\u8868(Medium)",permalink:"/docs/pages/531c53/"}},r={},a=[{value:"\u9898\u76ee\u63cf\u8ff0",id:"\u9898\u76ee\u63cf\u8ff0",level:2},{value:"\u6837\u4f8b",id:"\u6837\u4f8b",level:2},{value:"\u9898\u89e3",id:"\u9898\u89e3",level:2},{value:"Python\u793a\u4f8b",id:"python\u793a\u4f8b",level:2}];function c(e){const n={code:"code",h2:"h2",li:"li",ol:"ol",p:"p",pre:"pre",...(0,i.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.h2,{id:"\u9898\u76ee\u63cf\u8ff0",children:"\u9898\u76ee\u63cf\u8ff0"}),"\n",(0,s.jsx)(n.p,{children:"\u7ed9\u5b9a\u4e00\u4e2a\u5355\u94fe\u8868\uff0c\u5176\u4e2d\u7684\u5143\u7d20\u6309\u5347\u5e8f\u6392\u5e8f\uff0c\u5c06\u5176\u8f6c\u6362\u4e3a\u9ad8\u5ea6\u5e73\u8861\u7684\u4e8c\u53c9\u641c\u7d22\u6811\u3002\u672c\u9898\u4e2d\uff0c\u4e00\u4e2a\u9ad8\u5ea6\u5e73\u8861\u4e8c\u53c9\u6811\u662f\u6307\u4e00\u4e2a\u4e8c\u53c9\u6811\u6bcf\u4e2a\u8282\u70b9 \u7684\u5de6\u53f3\u4e24\u4e2a\u5b50\u6811\u7684\u9ad8\u5ea6\u5dee\u7684\u7edd\u5bf9\u503c\u4e0d\u8d85\u8fc7 1\u3002"}),"\n",(0,s.jsx)(n.h2,{id:"\u6837\u4f8b",children:"\u6837\u4f8b"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"\u7ed9\u5b9a\u7684\u6709\u5e8f\u94fe\u8868\uff1a [-10, -3, 0, 5, 9],\n\u4e00\u4e2a\u53ef\u80fd\u7684\u7b54\u6848\u662f\uff1a[0, -3, 9, -10, null, 5], \u5b83\u53ef\u4ee5\u8868\u793a\u4e0b\u9762\u8fd9\u4e2a\u9ad8\u5ea6\u5e73\u8861\u4e8c\u53c9\u641c\u7d22\u6811\uff1a\n\n      0\n     / \\\n   -3   9\n   /   /\n -10  5\n"})}),"\n",(0,s.jsx)(n.h2,{id:"\u9898\u89e3",children:"\u9898\u89e3"}),"\n",(0,s.jsx)(n.p,{children:"\u4f7f\u7528\u5206\u6cbb\u6cd5\uff0c\u5c31\u53ef\u4ee5\u628a\u5927\u95ee\u9898\u8f6c\u5316\u4e3a\u5c0f\u95ee\u9898\u3002"}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsx)(n.li,{children:"\u5229\u7528\u5feb\u6162\u6307\u9488\u5c06\u94fe\u8868\u5206\u4e3a\uff1a \u5de6\u3001\u4e2d\u3001\u53f3 \u4e09\u4e2a\u90e8\u5206\u3002"}),"\n",(0,s.jsx)(n.li,{children:"\u7136\u540e\u521b\u5efa\u6811\u8282\u70b9 TreeNode(mid.val, leftNode, rightNode)"}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"python\u793a\u4f8b",children:"Python\u793a\u4f8b"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-python",children:"# Definition for singly-linked list.\n# class ListNode:\n#     def __init__(self, val=0, next=None):\n#         self.val = val\n#         self.next = next\n# Definition for a binary tree node.\n# class TreeNode:\n#     def __init__(self, val=0, left=None, right=None):\n#         self.val = val\n#         self.left = left\n#         self.right = right\n\nclass Solution:\n    def sortedListToBST(self, head: ListNode) -> TreeNode:\n        def halfcut(head):\n            dummpyHead = ListNode(None)\n            dummpyHead.next = head \n\n            slow = dummpyHead\n            fast = head \n            while fast and fast.next:\n                fast = fast.next.next\n                slow = slow.next \n            mid = slow.next # \u8fd4\u56de\u4e2d\u70b9\n            slow.next = None # \u5207\u65ad\n            return mid, head, mid.next\n        \n        if not head: return # \u5f53\u5934\u7ed3\u70b9\u6ca1\u6709\uff0c\u8fd4\u56de null\n        if not head.next: return TreeNode(head.val) # \u5f53\u53ea\u6709\u4e00\u4e2a\u8282\u70b9\u65f6\uff0c\u8fd4\u56deTreeNode\n        \n        # \u9012\u5f52\u89e3\u51b3\n        mid, left, right = halfcut(head) \n        leftNode = self.sortedListToBST(left) \n        rightNode = self.sortedListToBST(right)\n\n        return TreeNode(mid.val, leftNode, rightNode)\n"})})]})}function u(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(c,{...e})}):c(e)}},28453:(e,n,t)=>{t.d(n,{R:()=>o,x:()=>l});var s=t(96540);const i={},d=s.createContext(i);function o(e){const n=s.useContext(d);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:o(e.components),s.createElement(d.Provider,{value:n},e.children)}}}]);